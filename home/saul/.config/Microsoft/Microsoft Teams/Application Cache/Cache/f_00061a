webpackJsonp([11],{2283:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t(2284)},2284:function(e,n,t){"use strict";var r=this&&this.__extends||function(){var e=function(n,t){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(n,t)};return function(n,t){function r(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}();Object.defineProperty(n,"__esModule",{value:!0});var o=t(2285),i=t(2286),s=t(2303),a=function(e){function n(n,t,r){var o=e.call(this,r)||this;return o.transportDependencyProviderService=n,o.logger=n.loggingService.newLogger("transportLazyLoadService"),o.initializeOnAppLaunchAndReinit(),o}return r(n,e),n.$inject=["transportDependencyProviderService","transportAgentService","orchestrationService"],n.prototype.getTransportCommandRouter=function(){return this.transportCommandRouter},n.prototype.getTransportConnectionHandler=function(){return this.transportConnectionHandler},n.prototype.getTransportCallKeeper=function(){return this.transportCallKeeper},n.prototype.initializeTranportConnectionHandling=function(e,n){this.transportCommandRouter=new i.TransportCommandRouter(this.transportDependencyProviderService,n,e),this.transportConnectionHandler=new o.TransportConnectionHandler(this.transportDependencyProviderService,this.transportCommandRouter),this.transportCallKeeper=new s.TransportCallKeeper(this.transportDependencyProviderService)},n.prototype.cleanupOnAppTeardown=function(e){this.logger.info("clean up has been called. marking commandRouter and connectionHandler as undefined."),this.transportConnectionHandler.cleanUpConnectionHandler(),this.transportCallKeeper.cleanupCallKeeper(),this.transportCommandRouter=void 0,this.transportConnectionHandler=void 0,this.transportCallKeeper=void 0},n.prototype.initializeOnAppLaunchAndReinit=function(e){},n.prototype.mtmaTelemetryIdentifier=function(){return"TransportLazyLoadService"},n}(teamspace.services.MTMABase);n.TransportLazyLoadService=a,angular.module("teamspace.transportLazyLoadService",["teamspace.transportDependencyProviderService","teamspace.transportAgentService"]).service("transportLazyLoadService",a)},2285:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r;!function(e){e.InitState="InitState",e.IsScanRunning="IsScanRunning",e.LastKeepAliveSentForSession="LastKeepAliveSentForSession",e.IsSendingKeepAlives="IsSendingKeepAlives",e.HasConnectedDevices="HasConnectedDevices",e.HasPairedDevices="HasPairedDevices",e.PairedDeviceCount="PairedDeviceCount",e.IsContinousScanRunning="IsContinousScanRunning"}(r=n.TransportConnectionHandlerStates||(n.TransportConnectionHandlerStates={}));var o=function(){function e(e,n){this.transportDependencyProviderService=e,this.transportCommandRouter=n,this.keepAliveInterval=3e4,this.deviceNotFoundThreshold=15e3,this.continousScanInterval=18e3,this.ComponentName="TransportConnectionHandler",this.keepAliveTimer=void 0,this.logger=e.loggingService.newLogger(this.ComponentName),this.constants=e.constants,this.storageService=e.storageService,this.bluetoothLEService=e.bluetoothLEService,this.logger.info("connectionHandler object successfully created, initialization is still pending.")}return e.prototype.initializeConnectionHandler=function(){var e=this;this.logger.info("initializing states and Ipc listeners, and rehydrating previous connection."),this.setupInitialStates(),this.setupIpcForMachineState(),this.ipcRenderer?(this.ipcRenderer.once(this.constants.events.desktopApp.getLockState,function(n,t){e.logger.info("state of machine is "+t),t===e.constants.desktopApp.lockState.unlocked&&(e.logger.info("machine is in unlocked state."),e.rehydratePreviousConnection())}),this.ipcRenderer.send(this.constants.events.desktopApp.getLockState)):this.logger.error("ipcRenderer is not available"),this.states.set(r.InitState,teamspace.services.ITransportComponentState.Initialized),this.logger.info("connectionHandler successfully initialized")},e.prototype.onNewDevicePaired=function(n){this.logger.info("Caching new device paired");var t,r=this.getAllPairedDevices();r&&(t=r.filter(function(e){return e.endPointId!==n.endPointId})),r=t?t.concat(n):[n],this.storageService.set(e.BTPairedDevicesKey,r),this.storageService.set(e.LastPairedDeviceEndpointKey,n.endPointId),this.transportDependencyProviderService.setPairedDeviceInDeviceManager(),this.setupKeepAlive(n.endPointId)},e.prototype.onDeviceUnpaired=function(n){var t=this.getAllPairedDevices();if(t){if(!t.find(function(e){return e.endPointId===n.endPointId}))return void this.logger.error("Current device not found in list of paired devices");this.disconnect(!0,!1);var r=t.filter(function(e){return e.endPointId!==n.endPointId});this.storageService.set(e.LastPairedDeviceEndpointKey,""),this.storageService.set(e.LastSaltUpdateTimeKey,"0"),this.transportDependencyProviderService.setPairedDeviceInDeviceManager(),this.storageService.set(e.BTPairedDevicesKey,r),this.logger.info("Device unpaired")}else this.logger.error("No paired devices found")},e.prototype.onDeviceLocked=function(n){if(n){var t=this.getAllPairedDevices();if(t){var r=t.find(function(e){return e.endPointId===n});r?(r.connectionStatus=teamspace.services.PairedConnectionStatus.Locked,this.storageService.set(e.BTPairedDevicesKey,t),this.storageService.set(e.LastPairedDeviceEndpointKey,r.endPointId),this.transportDependencyProviderService.setPairedDeviceInDeviceManager(),this.logger.info("Paired device status set to: locked")):this.logger.error("Device not found in list of pairedDevices")}else this.logger.error("No paired devices found")}else this.logger.error("Cannot mark device as locked, endpointid is null")},e.prototype.onDeviceUnlocked=function(n){if(n){var t=this.getAllPairedDevices();if(t){var r=t.find(function(e){return e.endPointId===n});r?(r.connectionStatus=teamspace.services.PairedConnectionStatus.Connected,this.storageService.set(e.BTPairedDevicesKey,t),this.storageService.set(e.LastPairedDeviceEndpointKey,r.endPointId),this.transportDependencyProviderService.setPairedDeviceInDeviceManager(),this.logger.info("Paired device status set to: unlocked and connected")):this.logger.error("Device not found in list of pairedDevices")}else this.logger.error("Device unlocked but no paired devices found")}else this.logger.error("Cannot mark device as unlocked, endpointid is null")},e.prototype.getConnectedDevice=function(){var e=this.getAllPairedDevices();if(e)return e.find(function(e){return e.connectionStatus===teamspace.services.PairedConnectionStatus.Connected})},e.prototype.continousCheckProximity=function(e){var n=this;void 0===e&&(e=!1),this.continousCheckProximityInterval?this.logger.error("A continous check for proximity is already running, isReconnectCallback is - "+e):this.continousCheckProximityInterval=setInterval(function(){e?n.checkProximity().then(n.reconnectCallback):n.checkProximity().catch(function(){n.logger.info("checkProximity failed, dont have a reconnectCallback function")})},this.continousScanInterval)},e.prototype.checkProximity=function(){var e=this;this.logger.info("Attempting Proximity check");var n=this.transportDependencyProviderService.$q,t=n.defer(),o=this.bluetoothLEService;return this.transportDependencyProviderService.canInitializeTransport()?(teamspace.services.QCancelable.toCancelablePromise(n,o.onceInitialized()).then(function(){if(!o.isBLEsupported||!o.isBluetoothRadioOn){var n="Bluetooth scan was not started. BLE might not be supported";return e.logger.error(n),t.reject(n),t.promise}e.logger.info("Scan started for better together companion devices."),e.states.set(r.IsScanRunning,!0);var i,s=setTimeout(function(){o.unsubscribe(i),e.logger.log("Unsubscribed for blehandle "+i+" due to timeout."),t.resolve(!1),e.logger.error("Timeout reached. Device not found. Scan stopped"),e.states.set(r.IsScanRunning,!1)},e.deviceNotFoundThreshold);i=o.subscribe(function(n,r){e.onCompanionDevicesFound(r,t,i,s)},e.constants.events.bluetoothLE.adjacent,e.constants.events.bluetoothLE.companionDiscovery)}).catch(function(n){n="Bluetooth scan was not started. BLE might not be supported due to error - "+n.toString(),e.logger.error(n),t.reject(n),e.states.set(r.IsScanRunning,!1)}),t.promise):(t.reject("transportation can not be initialised"),t.promise)},e.prototype.verifySalt=function(e){return e.salt[0]===this.currentSalt||!!e.salt[1]&&e.salt[1]===this.currentSalt},e.prototype.getCommandDetails=function(){return{salt:[this.currentSalt]}},e.prototype.getResponseDetails=function(){return{salt:[this.currentSalt]}},e.prototype.getStates=function(){var e=this.getAllPairedDevices(),n=this.getConnectedDevice();return this.states.set(r.HasConnectedDevices,!!n),this.states.set(r.HasPairedDevices,e&&e.length>0),this.states.set(r.PairedDeviceCount,e?e.length:0),this.states},e.prototype.setupInitialStates=function(){this.states=new Map,this.states.set(r.InitState,teamspace.services.ITransportComponentState.Uninitialized),this.states.set(r.IsScanRunning,!1),this.states.set(r.LastKeepAliveSentForSession,""),this.states.set(r.IsSendingKeepAlives,!1)},e.prototype.getAllPairedDevices=function(){return this.storageService.get(e.BTPairedDevicesKey)},e.prototype.rehydratePreviousConnection=function(){var n=this;if(this.transportDependencyProviderService.appStateService.hasMachineState(teamspace.services.MachineState.MachineLocked))this.logger.info("machine is in locked state, cancelling rehydratePreviousConnection.");else{var t=this.getAllPairedDevices();if(t&&t.length>0){this.logger.info("Rehydrating transport connection"),this.setAllPairedDevicesAsDisconnected();var r=this.storageService.get(e.LastSaltUpdateTimeKey);if((r=(new Date).getTime()-r)<6e4){var o=this.storageService.get(e.LastPairedDeviceEndpointKey);this.logger.info("salt was updated within 1 minute, time in milliseconds is "+r);var i=this.getCommandDetails(),s=this.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.Unlock,i,o);s||(this.logger.error("unlock command not created for quick unlock strategy, trying with long unlock strategy"),this.reconnectCallback=this.findProximalDeviceAndReconnect.bind(this),this.continousCheckProximity(!0)),s.promise.then(function(){n.logger.info("Unlock succeeded with quick unlock strategy"),n.reconnect(o)}).catch(function(e){n.logger.error("unlock command failed due to error - "+e+" in quick unlock strategy."),n.reconnectCallback=n.findProximalDeviceAndReconnect.bind(n),n.continousCheckProximity(!0)})}else this.logger.info("salt is not updated, trying to unlock by long unlock strategy"),this.reconnectCallback=this.findProximalDeviceAndReconnect.bind(this),this.continousCheckProximity(!0)}}},e.prototype.onCompanionDevicesFound=function(e,n,t,o){var i=this;if(e){var s=e.data,a=this.transportDependencyProviderService,c=a.authenticationService,d=a.utilityService;c.getUserInformation().then(function(e){var a=d.packetGUID2String(s);e.profile.oid===a&&(i.logger.info("Better together companion device found and bleHandle is "+t+". Unsubscribing now"),i.bluetoothLEService.unsubscribe(t),i.updateSalt(s),clearTimeout(o),i.states.set(r.IsScanRunning,!1),n.resolve(!0))}).catch(function(e){i.logger.error("device with incorrect authentication sent payload"+e)})}},e.prototype.findProximalDeviceAndReconnect=function(e){var n=this;if(e){this.logger.info("Paired device in proximity. Will attempt keep alive to all paired devices");var t=this.getAllPairedDevices(),o=this.getCommandDetails();t&&0!==t.length&&t.forEach(function(e){n.logger.info("Sending keep alive to get status from "+e.endPointId);var t=n.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.KeepAlive,o,e.endPointId);t&&t.promise.then(function(t){n.logger.info("Keep alive successful from "+e.endPointId),n.reconnect(e.endPointId),n.states.set(r.LastKeepAliveSentForSession,new Date)})})}},e.prototype.reconnect=function(e){var n=this;{if(!this.transportDependencyProviderService.appStateService.hasMachineState(teamspace.services.MachineState.MachineLocked)){this.logger.info("Reconnecting to endpoint "+e);var t=this.getAllPairedDevices().find(function(n){return n.endPointId===e});if(!t)return!1;var r=this.getCommandDetails();return this.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.Unlock,r,e).promise.then(function(){n.onDeviceUnlocked(t.endPointId),n.transportCommandRouter.startSession(e),n.setupKeepAlive(e),n.cleanUpContinousProximityScan()}),!0}this.logger.info("machine is in locked state, cancelling reconnect.")}},e.prototype.disconnect=function(n,t){void 0===n&&(n=!1),void 0===t&&(t=!1),this.logger.info("Disconnecting from paired device.");var o=this.getAllPairedDevices(),i=o?o.find(function(e){return e.connectionStatus===teamspace.services.PairedConnectionStatus.Connected}):void 0;if(i){if(clearInterval(this.keepAliveTimer),this.keepAliveTimer=void 0,this.states.set(r.IsSendingKeepAlives,!1),!n){var s=this.getCommandDetails();this.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.Lock,s)}i.connectionStatus=teamspace.services.PairedConnectionStatus.PairedNotConnected,this.storageService.set(e.LastPairedDeviceEndpointKey,i.endPointId),this.setAllPairedDevicesAsDisconnected(),this.transportCommandRouter.endSession(i.endPointId),t&&this.keepScanOn()}},e.prototype.setAllPairedDevicesAsDisconnected=function(){var n=this.getAllPairedDevices();n.forEach(function(e){e.connectionStatus=teamspace.services.PairedConnectionStatus.PairedNotConnected}),this.storageService.set(e.BTPairedDevicesKey,n),this.transportDependencyProviderService.setPairedDeviceInDeviceManager()},e.prototype.onProximityLost=function(){this.logger.error("Proximity lost. Stopping keep alive and starting continous scan for autopair"),this.disconnect(!1,!1),this.reconnectCallback=this.findProximalDeviceAndReconnect.bind(this),this.continousCheckProximity(!0)},e.prototype.setupKeepAlive=function(e){var n=this;this.keepAliveTimer||(this.logger.info("Setting up keep alive"),this.states.set(r.IsSendingKeepAlives,!0),this.keepAliveTimer=setInterval(function(){n.sendKeepAlive(e).catch(function(t){n.logger.error("keep alive failed for 1st time - error "+t),n.onKeepAliveCheckFailed(e)})},this.keepAliveInterval))},e.prototype.onKeepAliveCheckFailed=function(e){var n=this;clearInterval(this.keepAliveTimer),this.keepAliveTimer=void 0,this.sendKeepAlive().then(function(){n.setupKeepAlive(e)}).catch(function(){n.logger.error("Proximity lost, KeepAlive failed 2 times."),n.onProximityLost()})},e.prototype.sendKeepAlive=function(e){var n=this,t=this.transportDependencyProviderService.$q.defer();return this.logger.info("checking proximity when trying to send keepAlive command"),this.checkProximity().then(function(o){if(o){var i=n.getCommandDetails(),s=n.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.KeepAlive,i,e);n.states.set(r.LastKeepAliveSentForSession,new Date),s.promise.then(function(){t.resolve("keepAlive successfull")}).catch(function(e){n.logger.error("keepAlive command failed, because of error - "+e),t.reject("keepAlive command failed, because of error - "+e)})}else t.reject("checkProximity failed, device not in proximity")}).catch(function(e){t.reject("sending keepAlive failed with error - "+e)}),t.promise},e.prototype.updateSalt=function(n){if(n.length>18){var t=n[18]<<8|n[17];if(this.currentSalt!==t){this.currentSalt=t;var r=new Date;this.storageService.set(e.LastSaltUpdateTimeKey,r.getTime()),this.logger.info("Salt updated")}}},e.prototype.keepScanOn=function(){this.logger.log("Starting continous scan for keeping scan on for quick unlock strategy"),this.continousCheckProximity()},e.prototype.setupIpcForMachineState=function(){var e=this;this.ipcRenderer=window.electronSafeIpc,this.ipcRenderer&&this.transportDependencyProviderService.canInitializeTransport()?(this.ipcEventHandler=function(n,t){t===e.constants.events.desktopApp.machineLock?(e.logger.info("Got machine locked/diconnect event"),e.cleanUpContinousProximityScan(),e.disconnect(!1,!0)):t===e.constants.events.desktopApp.machineUnlock&&(e.logger.info("Got machine unlocked/connect event"),e.cleanUpContinousProximityScan(),e.rehydratePreviousConnection())},this.ipcEventHandler=this.ipcEventHandler.bind(this),this.ipcRenderer.on(this.constants.events.desktopApp.machineInactiveResponse,this.ipcEventHandler)):this.logger.error("ipcRenderer is not defined.")},e.prototype.cleanUpConnectionHandler=function(){this.logger.info("clean up of connectionHandler has been called. disconnecting the current device and removing all listeners to ipcRenderer"),this.disconnect(!1,!1),this.cleanUpContinousProximityScan(),this.ipcRenderer.removeListener(this.constants.events.desktopApp.machineInactiveResponse,this.ipcEventHandler),this.transportCommandRouter=void 0},e.prototype.cleanUpContinousProximityScan=function(){this.logger.info("cleaning up continousProximityScan related promise and bleHandle."),clearInterval(this.continousCheckProximityInterval),this.continousCheckProximityInterval=void 0},e.BTPairedDevicesKey="BTPairedDevices",e.LastSaltUpdateTimeKey="LastSaltUpdateTime",e.LastPairedDeviceEndpointKey="LastPairedDeviceEndpoint",e}();n.TransportConnectionHandler=o},2286:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r,o=t(2287),i=t(2297);!function(e){e.InitState="InitState",e.ActiveIncomingCommandsCount="ActiveIncomingCommandsCount",e.ActiveOutgoingCommandsCount="ActiveOutgoingCommandsCount",e.AckFailedCountInSession="AckFailedCountInSession",e.AckSuccessCountInSession="AckSuccessCountInSession"}(r=n.TransportCommandRouterStates||(n.TransportCommandRouterStates={}));var s=function(){function e(e,n,t){this.transportDependencyProviderService=e,this.transportStack=n,this.transportUser=t,this.ComponentName="TransportCommandRouter",this.ackSuccessCount=0,this.ackFailureCount=0,this.outgoingCommandResponseTimeout=6e4,this.incomingCommandFactory=new o.IncomingCommandFactory(e),this.outgoingCommandFactory=new i.OutgoingCommandFactory(e),this.activeIncomingCommands=new Map,this.activeOutgoingCommands=new Map,this.setupInitialStates(),this.constants=e.constants,this.logger=e.loggingService.newLogger(this.ComponentName),this.states.set(r.InitState,teamspace.services.ITransportComponentState.Initialized)}return e.prototype.onIncomingCommandReceived=function(e,n){var t=this,r=this.transportDependencyProviderService.loggingService.newScenario(this.constants.scenarios.betterTogether.commandRouter.incomingCommandReceived,null,null,null,!0),o=this.validateIncomingCommand(e,n);if(!o.result)return r.fail({error:o.message,error1:o.message}),void this.logger.error(o.message);var i=e.command;if(this.logger.info("Incoming command received with name - "+i),i!==teamspace.services.IncomingCommand.Response){var s=this.incomingCommandFactory.createCommand(e,r);if(!s){var a="Incoming Command not created for "+e.command+". Command not compatible or implemented";return r.fail({error:a,error1:a}),this.logger.error(a),void this.ackIncomingCommandFailure(n)}this.activeIncomingCommands.set(e.causeId,s),r.stop({message:"command created successfully with name - "+e.command,message1:"command created successfully with name - "+e.command}),this.ackIncomingCommandSuccess(n),s.action().promise.then(function(n){t.sendResponse(e,n),t.logger.info("Sending response for "+e.command)}).catch(function(n){t.sendResponse(e,n,!0),t.logger.error("Error in executing command "+e.command+" - Error - "+n.errorDetails)})}else{this.ackIncomingCommandSuccess(n);var c=JSON.parse(e.commandDetails),d=this.onResponseReceivedForOutgoingCommand(c);d.result?r.stop({message:"incoming command is a successful response for an outgoing command",message1:"incoming command is a successful response for an outgoing command"}):r.fail({error:d.message,error1:d.message})}},e.prototype.ackIncomingCommandSuccess=function(e){var n=e({status:200,body:JSON.stringify({})}),t=this.transportDependencyProviderService.loggingService.newScenario(this.constants.scenarios.betterTogether.commandRouter.ackIncomingCommand,null,null,null,!0);if(0!==n){var r="Failed to send ack for the incoming command - result: "+n;t.fail({error:r,error1:r}),this.logger.error(r)}else{var o="Ack sent for incoming command";t.stop({message:o,message1:o}),this.logger.info(o)}},e.prototype.ackIncomingCommandFailure=function(e,n){var t=e({status:404,body:n?JSON.stringify(n):JSON.stringify({})}),r=this.transportDependencyProviderService.loggingService.newScenario(this.constants.scenarios.betterTogether.commandRouter.ackIncomingCommand,null,null,null,!0);if(0!==t){var o="Failed to send failure for the incoming command - result: "+t;r.fail({error:o,error1:o}),this.logger.error(o)}else{var i="Failed-Ack-response sent for incoming command";r.stop({message:i,message1:i}),this.logger.info(i)}},e.prototype.validateIncomingCommand=function(e,n){var t={message:"",result:!1};if(!this.transportDependencyProviderService.canInitializeTransport()){i="ECS not enabled. Received incoming command "+e.command;return this.logger.error(i),t.message=i,t.result=!1,t}if(!e){i="Invalid transport command";return this.logger.error(i),t.message=i,t.result=!1,t}var r=this.transportDependencyProviderService.callingAgentsService,o=JSON.parse(e.commandDetails);if(o.targetEndpointId&&r.getRegistrationId()!==o.targetEndpointId){var i="Incoming commmand is not meant for this endpoint id";return this.logger.error(i),t.message=i,t.result=!1,this.ackIncomingCommandFailure(n),t}return t.message="Incoming command request is valid.",t.result=!0,t},e.prototype.cleanupIncomingCommand=function(e){var n=this.activeIncomingCommands.get(e);n&&(this.activeIncomingCommands.delete(e),n=void 0)},e.prototype.sendResponse=function(e,n,t){var r=this;void 0===t&&(t=!1);var o=t?400:200,i=e.causeId;if(this.activeIncomingCommands.get(i)){if(n){n.statusCode=o,n.requestCauseId=i;var s=this.sendOutgoingCommand(teamspace.services.OutgoingCommand.Response,n,e.endpointId);s?s.promise.then(function(e){r.logger.info("Response completed")}):this.logger.error("Response command not created")}this.cleanupIncomingCommand(i)}},e.prototype.sendOutgoingCommand=function(e,n,t){var r=this,o=this.transportDependencyProviderService.loggingService.newScenario(this.constants.scenarios.betterTogether.commandRouter.sendOutgoingCommand,null,null,null,!0);if(!this.transportDependencyProviderService.canInitializeTransport()){a="FF not enabled for outgoing command "+e;throw o.fail({error:a,error1:a}),this.logger.error(a),a}var i;if(t?i=this.getIBTTransportEndpoint(t,!0):(i=this.getIBTTransportEndpoint(t,!1))&&this.isSessionEstablishedWithEndpoint(i)||(i=this.getIBTTransportEndpoint(t,!0)),!i){a="Outgoing Command not created for "+e+". No available endpoint to send the command to";return o.fail({error:a,error1:a}),this.logger.error(a),null}n.targetEndpointId=i.getEndpointId();var s=this.outgoingCommandFactory.createCommand(e,n,i);if(!s){var a="Command not created for "+e+". Not compatible or implemented";return o.fail({error:a,error1:a}),this.logger.error(a),null}return this.activeOutgoingCommands.set(s.causeId,s),this.logger.info("Command added to the active outgoing commands. "+s.causeId+". Name - "+s.name+" Size is - "+this.activeOutgoingCommands.size),s.onCommandReadyToSend.promise.then(function(t){var i=r.createBTTOutgoingCommandListener(o);s.commandResponseListener=i;var a=n?JSON.stringify(n):"";if(r.isSessionEstablishedWithEndpoint(s.endpoint)){c="outgoing command sent for command name - "+e;r.logger.info(c),o.appendEventData({message:c}),s.endpoint.sendCommand(s.causeId,e,a,i)}else{var c="Sending command for session setup, command name - "+e;r.logger.info(c),o.appendEventData({reason:c,reason1:c}),s.endpoint.setupSession(s.causeId,e,a,i)}setTimeout(function(){var n;-1!==r.cleanupOutgoingCommand(s.causeId)&&(n="no response received for outgoing command with name - "+e+" within threshold time.",s.onResponseReceived.reject(n),r.logger.error(n),o.stop({message:n,message1:n}))},r.outgoingCommandResponseTimeout)}).catch(function(e){var n={errorDetails:e,statusCode:400,salt:[-1],requestCauseId:s.causeId};s.onResponseReceived.reject(n),r.cleanupOutgoingCommand(s.causeId),o.fail({message:"outgoing command rejected itself after failing - Error - "+e,message1:"outgoing command rejected itself after failing - Error - "+e})}),s.onResponseReceived},e.prototype.isSessionEstablishedWithEndpoint=function(e){var n=this.transportDependencyProviderService.getPairedAndActiveEndpoint();return!(!n||!e)&&n.endPointId===e.getEndpointId()},e.prototype.startSession=function(e){this.logger.info("starting session with endpoint with a force discover.");var n=this.getIBTTransportEndpoint(e,!0);n&&n.setSessionEstablished(!0)},e.prototype.endSession=function(e){this.logger.info("ending session with endpoint without a force discover.");var n=this.getIBTTransportEndpoint(e,!1);n&&(n.setSessionEstablished(!1),this.ackFailureCount=0,this.ackSuccessCount=0)},e.prototype.getStates=function(){return this.states.set(r.ActiveOutgoingCommandsCount,this.activeOutgoingCommands.size),this.states.set(r.ActiveIncomingCommandsCount,this.activeIncomingCommands.size),this.states.set(r.AckFailedCountInSession,this.ackFailureCount),this.states.set(r.AckSuccessCountInSession,this.ackSuccessCount),this.states},e.prototype.setupInitialStates=function(){this.states=new Map,this.states.set(r.InitState,teamspace.services.ITransportComponentState.Uninitialized)},e.prototype.onResponseReceivedForOutgoingCommand=function(e){var n={message:"",result:!1};if(!e.requestCauseId){r="Request cause id not found with the response";return n.result=!1,n.message=r,this.logger.error(r),n}var t=this.activeOutgoingCommands.get(e.requestCauseId);if(!t){r="No outgoing command found with the requestCauseId or response not required";return n.result=!1,n.message=r,this.logger.error(r),n}if(200!==e.statusCode){var r="response is not OK for command name - "+t.name+", status code- "+e.statusCode+" and error details - "+e.errorDetails;n.result=!1,n.message=r,this.logger.error(r),t.onResponseReceived.reject(e)}else{var o="response resolved for outgoing command name - "+t.name;n.result=!0,n.message=o,this.logger.info(o),t.onResponseReceived.resolve(e)}return this.cleanupOutgoingCommand(e.requestCauseId),n},e.prototype.cleanupOutgoingCommand=function(e){var n=this.activeOutgoingCommands.get(e);if(n){n.commandResponseListener&&n.commandResponseListener.dispose(),this.logger.info("Command with causeid - "+e+" cleaned up. Name - "+n.name+" Size is - "+this.activeOutgoingCommands.size);var t=n.startTime;if(this.activeOutgoingCommands.delete(e),n=void 0,t)return(new Date).getTime()-t.getTime()}return-1},e.prototype.createBTTOutgoingCommandListener=function(e){var n=this,t=this.transportStack.createOutgoingCommandResponse();return t.on("request-succeeded",function(t){var r=t.causeId,o=t.responseBody;n.ackSuccessCount++,n.logger.info("Received transport response for "+r+".");var i=n.activeOutgoingCommands.get(r);if(i){var s=o?JSON.parse(o):void 0;if(i.commandDetails.companionResponseRequired){c="Command acknowledged by companion device,command name - "+i.name+", requires response from device";n.logger.info(c),e.stop({message:c,message1:c})}else{i.onResponseReceived.resolve(s);var a=n.cleanupOutgoingCommand(r),c="Outgoing command does not need response,command name - "+i.name+" time taken is "+a;n.logger.info(c),e.stop({message:c,message1:c})}}else n.logger.error("No valid outgoing command."),e.fail({error:"No valid outgoing command.",error1:"No valid outgoing command."})}),t.on("request-failed",function(t){var r=t.causeId,o=t.errorCode,i=t.responseBody;n.ackFailureCount++,n.logger.info("Received transport response. errorCode - "+o);var s=n.activeOutgoingCommands.get(r);if(s){if(!s.isRetry&&-1950875510===o){var a=s.startTime,c=0;a&&(c=(new Date).getTime()-a.getTime());var d="received error response for outgoing command name - "+s.name+", causeId "+r+", errorCode - "+o+", time taken is "+c;n.logger.error(d);var l=JSON.stringify(s.commandDetails);s.isRetry=!0;var m=s.endpoint.getEndpointId(),p=n.getIBTTransportEndpoint(m,!0);s.endpoint=p;var v=n.transportDependencyProviderService.utilityService.generateUUID();return s.causeId=v,n.activeOutgoingCommands.delete(r),n.activeOutgoingCommands.set(v,s),n.logger.error("First attempt for command failed. Retry-ing command "+s.name+", causeId "+r+" with new causeid "+v),void p.sendCommand(s.causeId,s.name,l,s.commandResponseListener)}var g=i?JSON.parse(i):{};g.statusCode=o,s.onResponseReceived.reject(g);var u=n.cleanupOutgoingCommand(r),h="Failed on second attempt. received error response for outgoing command name - "+s.name+", causeId "+r+", errorCode - "+o+", time taken is "+u;n.logger.error(h),e.fail({error:h,error1:h})}else{h="No valid outgoing command";n.logger.error(h),e.fail({error:h,error1:h})}}),t},e.prototype.getIBTTransportEndpoint=function(e,n){if(void 0===n&&(n=!1),!e){this.logger.info("endpoint id is not given, trying to get it from pairedAndActive Endpoint");var t=this.transportDependencyProviderService.getPairedAndActiveEndpoint();if(!t)return this.logger.error("There is no active paired device to send the command."),null;e=t.endPointId}this.logger.info("trying to get endpoint from transport user for endpointid - "+e);var r;return n?(r=this.transportUser.discover().find(function(n){return n.getEndpointId()===e}),this.logger.info("endpoints retrieved using discover(). "+!!r)):(r=this.transportUser.getEndpoints().find(function(n){return n.getEndpointId()===e}),this.logger.info("endpoints retrieved using getEndpoints(). "+!!r)),r},e}();n.TransportCommandRouter=s},2287:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(2288),o=t(2289),i=t(2290),s=t(2291),a=t(2292),c=t(2293),d=t(2294),l=t(2295),m=t(2296),p=function(){function e(e){this.transportDependencyProviderService=e,this.logger=e.loggingService.newLogger("IncomingCommandFactory")}return e.prototype.createCommand=function(e,n){var t=e.command.toLowerCase(),p=JSON.parse(e.commandDetails),v=e.endpointId,g=this.shouldCreateCommand(t,p,e);if(!g.result)return n.appendEventData({reason:g.message,reason1:g.message}),null;switch(t){case teamspace.services.IncomingCommand.Broadcast:return new r.BroadcastCommand(p,this.transportDependencyProviderService);case teamspace.services.IncomingCommand.Pair:return new o.PairCommand(p,v,this.transportDependencyProviderService);case teamspace.services.IncomingCommand.Unpair:return new i.UnpairCommand(p,v,this.transportDependencyProviderService);case teamspace.services.IncomingCommand.Autopair:return new s.AutopairCommand(p,v,this.transportDependencyProviderService);case teamspace.services.IncomingCommand.Locked:return new a.LockedCommand(p,v,this.transportDependencyProviderService);case teamspace.services.IncomingCommand.Unlocked:return new c.UnlockedCommand(p,v,this.transportDependencyProviderService);case teamspace.services.IncomingCommand.ReplyOnDesktop:return new d.ReplyFromDesktopCommand(p,this.transportDependencyProviderService);case teamspace.services.IncomingCommand.OpenFileOnDesktop:return new l.OpenFileCommand(p,this.transportDependencyProviderService);case teamspace.services.IncomingCommand.StartCall:return new m.StartCallCommand(p,this.transportDependencyProviderService);case teamspace.services.IncomingCommand.EndCall:return new m.EndCallCommand(p,this.transportDependencyProviderService);case teamspace.services.IncomingCommand.StartAudio:case teamspace.services.IncomingCommand.StopAudio:case teamspace.services.IncomingCommand.Mute:case teamspace.services.IncomingCommand.Unmute:case teamspace.services.IncomingCommand.StartVideo:case teamspace.services.IncomingCommand.StopVideo:return new m.BaseCallToggleStateCommand(p,this.transportDependencyProviderService,t);default:return null}},e.prototype.shouldCreateCommand=function(e,n,t){var r={message:"",result:!1};if(!this.transportDependencyProviderService.canInitializeTransport()){s="Transport layer cannot be initialized. Failing command creation";return this.logger.error(s),r.message=s,r}var o=this.transportDependencyProviderService.getTransportConnectionHandler();if(!(e===teamspace.services.IncomingCommand.Broadcast||e===teamspace.services.IncomingCommand.Unpair||o.verifySalt(n))){s="Salt is not valid";return this.logger.error(s),r.message=s,r}var i=o.getConnectedDevice();if(e===teamspace.services.IncomingCommand.Broadcast||e===teamspace.services.IncomingCommand.Autopair||e===teamspace.services.IncomingCommand.Pair||e===teamspace.services.IncomingCommand.Unpair||e===teamspace.services.IncomingCommand.Locked||e===teamspace.services.IncomingCommand.Unlocked||i)r.result=!0;else{var s="Cannot execute command with name - "+e;this.logger.error(s),r.message=s}return r},e}();n.IncomingCommandFactory=p},2288:function(e,n,t){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,n){this.commandDetails=e,this.transportDependencyProviderService=n,this.commandDetails=e}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,o=n.resources,i=n.$translate;this.responseDeferred=t.defer();var s=this.transportDependencyProviderService.getTransportConnectionHandler(),a=this.transportDependencyProviderService.loggingService.newScenario(this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.broadcast,null,null,null,!0);return this.transportDependencyProviderService.getTransportConnectionHandler().checkProximity().then(function(n){if(n){var t=window.desktopEnvironment&&window.desktopEnvironment.hostname?window.desktopEnvironment.hostname:i.instant(o.strings.meeting_unknown_status_text),c=r({deviceName:t},s.getResponseDetails());a.stop({message:"device in proximity,resolving response",message1:"device in proximity,resolving response"}),e.responseDeferred.resolve(c)}else{c=r({errorDetails:"Companion device is not in proximity."},s.getResponseDetails());a.stop({error:c.errorDetails,error1:c.errorDetails}),e.responseDeferred.reject(c)}}).catch(function(n){var t=r({errorDetails:n},s.getResponseDetails());a.fail({error:t.errorDetails,error1:t.errorDetails}),e.responseDeferred.reject(t)}),this.responseDeferred},e}();n.BroadcastCommand=o},2289:function(e,n,t){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,n,t){this.commandDetails=e,this.endpointId=n,this.transportDependencyProviderService=t}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,r=n.$translate,o=n.resources,i=n.dialogService;this.responseDeferred=t.defer();var s=!1,a={okButtonText:r.instant(o.strings.better_together_pair_button),closeButtonText:r.instant(o.strings.better_together_cancel_button),confirmMessageTitle:r.instant(o.strings.better_together_pair_title),confirmMessageHtmlBody:r.instant(o.strings.better_together_pair_message,{deviceName:this.commandDetails.deviceName}),callback:function(){s=!0,e.onUserResponse(!0)},preCloseCallback:function(){s||e.onUserResponse(!1)}};return i.open(this.transportDependencyProviderService.constants.dialogs.confirmDialog,a),this.responseDeferred},e.prototype.onUserResponse=function(e,n){var t=this.transportDependencyProviderService.getTransportConnectionHandler(),o=r({accepted:e},t.getResponseDetails()),i=this.transportDependencyProviderService.loggingService.newScenario(this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.pair,null,null,null,!0);if(e){var s={endPointId:this.endpointId,deviceName:this.commandDetails.deviceName,connectionStatus:teamspace.services.PairedConnectionStatus.Connected};i.stop({message:"pairing accepted by user",message1:"pairing accepted by user"}),t.onNewDevicePaired(s),this.responseDeferred.resolve(o)}else o.accepted=!1,o.errorDetails="Pair rejected by the user",i.fail({error:o.errorDetails,error1:o.errorDetails}),this.responseDeferred.reject(o)},e}();n.PairCommand=o},2290:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,t){this.commandDetails=e,this.endPointId=n,this.transportDependencyProviderService=t}return e.prototype.action=function(){var e=this.transportDependencyProviderService.$q;this.responseDeferred=e.defer();var n={endPointId:this.endPointId,deviceName:this.endPointId,connectionStatus:teamspace.services.PairedConnectionStatus.Connected},t=this.transportDependencyProviderService.loggingService.newScenario(this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.unpair,null,null,null,!0),r=this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails();return this.transportDependencyProviderService.getTransportConnectionHandler().onDeviceUnpaired(n),t.stop({message:"Companion device Unpaired",message1:"Companion device Unpaired"}),this.responseDeferred.resolve(r),this.responseDeferred},e}();n.UnpairCommand=r},2291:function(e,n,t){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,n,t){this.commandDetails=e,this.endpointId=n,this.transportDependencyProviderService=t,this.commandDetails=e}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService.$q;this.responseDeferred=n.defer();var t=this.transportDependencyProviderService.getTransportConnectionHandler(),o=this.transportDependencyProviderService.loggingService.newScenario(this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.autoPair,null,null,null,!0);return t.checkProximity().then(function(n){if(n)if(t.reconnect(e.endpointId))o.stop({message:"reconnected to Companion device.",message1:"reconnected to Companion device."}),e.responseDeferred.resolve(t.getResponseDetails());else{i=r({errorDetails:"Autopairing not successful from desktop client"},t.getResponseDetails());o.fail({error:i.errorDetails,error1:i.errorDetails}),e.responseDeferred.reject(i)}else{var i=r({errorDetails:"Companion device not in proximity"},t.getResponseDetails());o.fail({error:i.errorDetails,error1:i.errorDetails}),e.responseDeferred.reject(i)}}).catch(function(n){var i=r({errorDetails:n},t.getResponseDetails());o.fail({error:i.errorDetails,error1:i.errorDetails}),e.responseDeferred.reject(i)}),this.responseDeferred},e}();n.AutopairCommand=o},2292:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,t){this.commandDetails=e,this.endPointId=n,this.transportDependencyProviderService=t}return e.prototype.action=function(){var e=this.transportDependencyProviderService.$q;this.responseDeferred=e.defer();var n=this.transportDependencyProviderService.loggingService.newScenario(this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.incomingLock,null,null,null,!0),t=this.transportDependencyProviderService.getTransportConnectionHandler(),r=t.getResponseDetails();return t.onDeviceLocked(this.endPointId),n.stop({message:"Companion device locked",message1:"Companion device locked"}),this.responseDeferred.resolve(r),this.responseDeferred},e}();n.LockedCommand=r},2293:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,t){this.commandDetails=e,this.endPointId=n,this.transportDependencyProviderService=t}return e.prototype.action=function(){var e=this.transportDependencyProviderService.$q;this.responseDeferred=e.defer();var n=this.transportDependencyProviderService.loggingService.newScenario(this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.incomingUnlock,null,null,null,!0),t=this.transportDependencyProviderService.getTransportConnectionHandler(),r=t.getResponseDetails();return t.onDeviceUnlocked(this.endPointId),n.stop({message:"Companion device Unlocked",message1:"Companion device Unlocked"}),this.responseDeferred.resolve(r),this.responseDeferred},e}();n.UnlockedCommand=r},2294:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n){this.commandDetails=e,this.transportDependencyProviderService=n}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,r=n.callingNavigationService,o=n.channelService,i=n.multiWindowService;this.responseDeferred=t.defer();var s=this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails(),a=this.transportDependencyProviderService.loggingService.newScenario(this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.replyFromDesktop,null,null,null,!0);if(this.commandDetails.conversationId){var c=o.getChannelByObjectId(this.commandDetails.conversationId);i.enabled&&!c?i.openWindow(new teamspace.services.ChatChildWindowParams(this.commandDetails.conversationId),"ReplyFromDesktopCommand").then(function(n){a.stop({message:"opened in multi-window,resolving response",message1:"opened in multi-window,resolving response"}),e.responseDeferred.resolve(s)}).catch(function(n){s.errorDetails=n,a.fail({error:"error in opening new window with details - "+n,error1:"error in opening new window with details - "+n}),e.responseDeferred.reject(s)}):r.navigateToConversation(this.commandDetails.conversationId,this.commandDetails.rootMessageId).then(function(n){a.stop({message:"navigated to conversation,resolving response",message1:"navigated to conversation,resolving response"}),e.responseDeferred.resolve(s)}).catch(function(n){s.errorDetails=n,a.fail({error:"error in navigating to conversation with details - "+n,error1:"error in navigating to conversation with details - "+n}),e.responseDeferred.reject(s)})}else s.errorDetails="conversationId is empty",a.fail({error:s.errorDetails,error1:s.errorDetails}),this.responseDeferred.reject(s);return this.responseDeferred},e}();n.ReplyFromDesktopCommand=r},2295:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n){this.commandDetails=e,this.transportDependencyProviderService=n}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,r=n.deepLinkService;this.responseDeferred=t.defer();var o=this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails(),i=this.transportDependencyProviderService.loggingService.newScenario(this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.openFile,null,null,null,!0);return this.commandDetails.objectUrl&&this.commandDetails.fileId?r.resolveFileDeepLink(this.commandDetails).then(function(){i.stop({message:"file opened, resolving response",message1:"file opened, resolving response"}),e.responseDeferred.resolve(o)}).catch(function(n){o.errorDetails="deepLinkService rejected the promise",i.fail({error:o.errorDetails,error1:o.errorDetails}),e.responseDeferred.reject(o)}):(o.errorDetails="ObjectUrl is empty - "+!this.commandDetails.objectUrl+" or fileId is empty - "+!this.commandDetails.fileId,i.fail({error:o.errorDetails,error1:o.errorDetails}),this.responseDeferred.reject(o)),this.responseDeferred},e}();n.OpenFileCommand=r},2296:function(e,n,t){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,n){this.commandDetails=e,this.transportDependencyProviderService=n}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,o=n.callingService;this.responseDeferred=t.defer();var i=this.transportDependencyProviderService.loggingService.newScenario(this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.endcall,null,null,null,!0);if(!this.commandDetails.callId||!this.commandDetails.conversationId){var s="Call id or conversation id is undefined",a=r({errorDetails:s},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());i.fail({error:s,error1:s}),this.responseDeferred.reject(a)}var c={callId:this.commandDetails.callId,conversationId:this.commandDetails.conversationId,messageId:this.commandDetails.messageId,conversationUrl:this.commandDetails.conversationUrl};this.transportDependencyProviderService.getTransportCallKeeper().removeActiveCall(c);var d=o.getActiveCalls();if(!d){a=r({errorDetails:p="No active calls"},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());return i.fail({error:p,error1:p}),void this.responseDeferred.reject(a)}var l=d.filter(function(e){return e.conversationId===c.conversationId&&e.messageId==c.messageId});if(l&&l.length>0){var m=l[0];o.leaveCall(m,"EndCallCommand").then(function(){i.stop({message:"End call succeeded",message1:"End call succeeded"}),e.responseDeferred.resolve()}).catch(function(n){var t="Endcall failed with error "+n,o=r({errorDetails:t},e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());i.fail({error:t,error1:t}),e.responseDeferred.reject(o)})}else{var p="No call with callid "+this.commandDetails.callId,a=r({errorDetails:p},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());i.fail({error:p,error1:p}),this.responseDeferred.reject(a)}return this.responseDeferred},e}();n.EndCallCommand=o;var i=function(){function e(e,n){this.commandDetails=e,this.transportDependencyProviderService=n}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,o=n.callingService;this.responseDeferred=t.defer();var i=this.transportDependencyProviderService.loggingService.newScenario(this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.startcall,null,null,null,!0);if(!this.commandDetails.callId||!this.commandDetails.conversationId){var s="Call id or conversation id is undefined",a=r({errorDetails:s},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());i.fail({error:s,error1:s}),this.responseDeferred.reject(a)}var c={isMicMuted:this.commandDetails.startCallOptions.isMicMuted,isVideoOn:this.commandDetails.startCallOptions.withVideo,isSpeakerMuted:this.commandDetails.startCallOptions.isSpeakerMuted,isCallOnHold:!1},d={callId:this.commandDetails.callId,conversationId:this.commandDetails.conversationId,messageId:this.commandDetails.messageId,conversationUrl:this.commandDetails.conversationUrl,callState:c},l=this.transportDependencyProviderService.getTransportCallKeeper();if(l.isCallActiveOnTransport(d)){var m=l.getTransportCallWithDetails(d),p=r({callId:m.callId,conversationId:m.conversationId,messageId:m.messageId,isBroadcast:!1,startCallOptions:{isMicMuted:m.callState.isMicMuted,isSpeakerMuted:m.callState.isSpeakerMuted,withVideo:m.callState.isVideoOn}},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());this.responseDeferred.resolve(p)}else{this.transportDependencyProviderService.getTransportCallKeeper().addActiveCall(d);var v={conversationId:this.commandDetails.conversationId,startCallScenarioPromise:t.resolve(null),secondaryScenarios:[],withVideo:this.commandDetails.startCallOptions.withVideo,muted:this.commandDetails.startCallOptions.isMicMuted};o.startCall(v).then(function(n){i.stop({message:"Start call succeeded",message1:"Start call succeeded"}),e.responseDeferred.resolve()}).catch(function(n){var t="Start call failed with error "+n,o=r({errorDetails:t},e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());i.fail({error:t,error1:t}),e.responseDeferred.reject(o)})}return this.responseDeferred},e}();n.StartCallCommand=i;var s=function(){function e(e,n,t){this.commandDetails=e,this.transportDependencyProviderService=n,this.commandName=t}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,o=n.callingService;this.responseDeferred=t.defer();var i=this.getScenarioNameForCommand(this.commandName),s=this.transportDependencyProviderService.loggingService.newScenario(i,null,null,null,!0);if(!this.commandDetails.callId||!this.commandDetails.conversationId){var a="Call id or conversation id is undefined",c=r({errorDetails:a},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());s.fail({error:a,error1:a}),this.responseDeferred.reject(c)}var d,l={callId:this.commandDetails.callId,conversationId:this.commandDetails.conversationId,messageId:this.commandDetails.messageId,conversationUrl:this.commandDetails.conversationUrl},m=o.getActiveCalls().filter(function(e){return e.conversationId===l.conversationId&&e.messageId==l.messageId}),p=this.transportDependencyProviderService.getTransportCallKeeper().getCallStateForCall(l);if(m&&m.length>0){var v=m[0];switch(this.commandName){case teamspace.services.IncomingCommand.StopAudio:p.isSpeakerMuted=!0,p.isMicMuted=!0,this.transportDependencyProviderService.getTransportCallKeeper().setCallStateForCall(l,p),d=this.transportDependencyProviderService.callTogglingService.toggleMuteAudio(v,1,1);break;case teamspace.services.IncomingCommand.Mute:p.isMicMuted=!0,this.transportDependencyProviderService.getTransportCallKeeper().setCallStateForCall(l,p),d=this.transportDependencyProviderService.callTogglingService.toggleMuteAudio(v,1,1);break;case teamspace.services.IncomingCommand.StartAudio:p.isSpeakerMuted=!1,p.isMicMuted=!1,this.transportDependencyProviderService.getTransportCallKeeper().setCallStateForCall(l,p),d=this.transportDependencyProviderService.callTogglingService.toggleMuteAudio(v,1,2);break;case teamspace.services.IncomingCommand.Unmute:p.isMicMuted=!1,this.transportDependencyProviderService.getTransportCallKeeper().setCallStateForCall(l,p),d=this.transportDependencyProviderService.callTogglingService.toggleMuteAudio(v,1,2);break;case teamspace.services.IncomingCommand.StartVideo:p.isVideoOn=!0,this.transportDependencyProviderService.getTransportCallKeeper().setCallStateForCall(l,p),d=this.transportDependencyProviderService.callTogglingService.toggleVideo(v,"Companion device",!0);break;case teamspace.services.IncomingCommand.StopVideo:p.isVideoOn=!1,this.transportDependencyProviderService.getTransportCallKeeper().setCallStateForCall(l,p),d=this.transportDependencyProviderService.callTogglingService.toggleVideo(v,"Companion device",!1);break;case teamspace.services.IncomingCommand.HoldCall:p.isCallOnHold=!0,this.transportDependencyProviderService.getTransportCallKeeper().setCallStateForCall(l,p),d=this.transportDependencyProviderService.callTogglingService.toggleHold(v,"Companion device",1);break;case teamspace.services.IncomingCommand.UnholdCall:p.isCallOnHold=!1,this.transportDependencyProviderService.getTransportCallKeeper().setCallStateForCall(l,p),d=this.transportDependencyProviderService.callTogglingService.toggleHold(v,"Companion device",2)}}else{var g="Command "+this.commandName+" failed - Call not found with conversationId "+l.conversationId,c=r({errorDetails:g},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());s.fail({error:g,error1:g}),this.responseDeferred.reject(c)}return d&&d.then(function(){s.stop({message:"succeeded",message1:"succeeded"}),e.responseDeferred.resolve(null)}).catch(function(n){var t="Command "+e.commandName+" failed with error "+n,o=r({errorDetails:t},e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());s.fail({error:t,error1:t}),e.responseDeferred.reject(o)}),this.responseDeferred},e.prototype.getScenarioNameForCommand=function(e){switch(e){case teamspace.services.IncomingCommand.StopAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.stopaudio;case teamspace.services.IncomingCommand.Mute:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.mute;case teamspace.services.IncomingCommand.StartAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.startaudio;case teamspace.services.IncomingCommand.Unmute:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.unmute;case teamspace.services.IncomingCommand.StartVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.startvideo;case teamspace.services.IncomingCommand.StopVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.stopvideo;case teamspace.services.IncomingCommand.HoldCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.holdcall;case teamspace.services.IncomingCommand.UnholdCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.unholdcall}},e}();n.BaseCallToggleStateCommand=s},2297:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(2298),o=t(2299),i=t(2300),s=t(2301),a=t(2302),c=function(){function e(e){this.transportDependencyProviderService=e,this.logger=e.loggingService.newLogger("OutgoingCommandFactory")}return e.prototype.generateCauseId=function(){return this.transportDependencyProviderService.utilityService.generateUUID()},e.prototype.createCommand=function(e,n,t){var c;if(!this.transportDependencyProviderService.canInitializeTransport()||!t)return null;if(this.transportDependencyProviderService.appStateService.hasMachineState(teamspace.services.MachineState.MachineLocked)&&e!=teamspace.services.OutgoingCommand.Lock)return this.logger.error("Machine is in locked state. Outgoing command with name - "+e+" will not be created."),null;e=e.toLowerCase();var d=this.generateCauseId();switch(e){case teamspace.services.OutgoingCommand.Response:c=new r.ResponseCommand(d,t,n,this.transportDependencyProviderService);break;case teamspace.services.OutgoingCommand.KeepAlive:c=new o.KeepAliveCommand(d,t,n,this.transportDependencyProviderService);break;case teamspace.services.OutgoingCommand.Lock:c=new i.LockCommand(d,t,n,this.transportDependencyProviderService);break;case teamspace.services.OutgoingCommand.Unlock:c=new s.UnlockCommand(d,t,n,this.transportDependencyProviderService);break;case teamspace.services.OutgoingCommand.StartCall:c=new a.StartCallOutgoingCommand(d,t,n,this.transportDependencyProviderService);break;case teamspace.services.OutgoingCommand.EndCall:c=new a.EndCallOutgoingCommand(d,t,n,this.transportDependencyProviderService);break;case teamspace.services.OutgoingCommand.Mute:case teamspace.services.OutgoingCommand.Unmute:case teamspace.services.OutgoingCommand.StartAudio:case teamspace.services.OutgoingCommand.StopAudio:case teamspace.services.OutgoingCommand.StartVideo:case teamspace.services.OutgoingCommand.StopVideo:case teamspace.services.OutgoingCommand.HoldCall:case teamspace.services.OutgoingCommand.UnholdCall:c=new a.BaseCallCommand(d,t,n,this.transportDependencyProviderService);break;default:return null}return c.name=e,c.startTime=new Date,c.isRetry=!1,c},e}();n.OutgoingCommandFactory=c},2298:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){return function(e,n,t,r){this.causeId=e,this.endpoint=n,this.commandDetails=t,t.companionResponseRequired=!1;var o=r.$q;this.onResponseReceived=o.defer(),this.onCommandReadyToSend=o.defer(),this.onCommandReadyToSend.resolve(!0),this.onResponseReceived.resolve(null)}}();n.ResponseCommand=r},2299:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,t,r){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=r,t.companionResponseRequired=!0;var o=r.$q,i=this.onCommandExecuted.bind(this);this.onResponseReceived=o.defer(),this.onResponseReceived.promise.then(i).catch(i),this.onCommandReadyToSend=o.defer(),this.onCommandReadyToSend.resolve(!0)}return e.prototype.onCommandExecuted=function(e){var n=this.transportDependencyProviderService.loggingService.newScenario(this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.keepAlive,null,null,null,!0);if(e&&e.errorDetails){var t="Keepalive command failed for endpoint : "+this.endpoint.getEndpointId();return n.fail({error:t,error1:t}),this.transportDependencyProviderService.loggingService.error(t),void this.onResponseReceived.reject(e)}n.stop({message:"Keepalive command successfully resolved",message1:"Keepalive command successfully resolved"});var r=this.commandDetails;this.onResponseReceived.resolve(r)},e}();n.KeepAliveCommand=r},2300:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,t,r){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=r,t.companionResponseRequired=!1,this.onResponseReceived=r.$q.defer(),this.onCommandReadyToSend=r.$q.defer(),this.onCommandReadyToSend.resolve(!0);var o=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(o).catch(o),this.logger=r.loggingService.newLogger("outgoingLockCommand")}return e.prototype.onCommandExecuted=function(e){var n=this.transportDependencyProviderService.loggingService.newScenario(this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.outgoingLock,null,null,null,!0);if(e&&!e.errorDetails)this.transportDependencyProviderService.getTransportConnectionHandler().onDeviceLocked(this.endpoint.getEndpointId()),this.logger.info("Companion device locked"),n.stop({message:"Companion device locked",message1:"Companion device locked"});else{var t="";t=e?"Lock command failed, Error response: "+e.errorDetails:"NULL response received",this.logger.error(t),n.fail({error:t,error1:t})}},e}();n.LockCommand=r},2301:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,t,r){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=r,t.companionResponseRequired=!0,this.onResponseReceived=r.$q.defer(),this.onCommandReadyToSend=r.$q.defer(),this.onCommandReadyToSend.resolve(!0);var o=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(o).catch(o),this.logger=r.loggingService.newLogger("outgoingUnlockCommand")}return e.prototype.onCommandExecuted=function(e){var n=this.transportDependencyProviderService.loggingService.newScenario(this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.outgoingUnlock,null,null,null,!0);if(e&&!e.errorDetails)this.transportDependencyProviderService.getTransportConnectionHandler().onDeviceUnlocked(this.endpoint.getEndpointId()),this.logger.info("Companion device unlocked"),n.stop({message:"Companion device unlocked",message1:"Companion device unlocked"});else{var t="";t=e?"Unlock command failed, Error response: "+e.errorDetails:"NULL response received",this.logger.error(t),n.fail({error:t,error1:t})}},e}();n.UnlockCommand=r},2302:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,t,r){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=r,t.companionResponseRequired=!0,this.onResponseReceived=r.$q.defer(),this.onCommandReadyToSend=r.$q.defer(),this.onCommandReadyToSend.resolve(!0);var o=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(o).catch(o),this.logger=r.loggingService.newLogger("outgoing "+this.name)}return e.prototype.onCommandExecuted=function(e){var n=this.getScenarioNameForCommand(this.name),t=this.transportDependencyProviderService.loggingService.newScenario(n,null,null,null,!0);if(e&&!e.errorDetails)t.stop({message:"Completed command "+this.name+" for call id "+this.commandDetails.callId,message1:"Completed command "+this.name+" for call id "+this.commandDetails.callId});else{var r="";r=e?this.name+" command failed for call id "+this.commandDetails.callId+", Error response: "+e.errorDetails:"NULL response received",t.fail({error:r,error1:r}),this.logger.error(r)}},e.prototype.getScenarioNameForCommand=function(e){switch(e){case teamspace.services.OutgoingCommand.StopAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.stopaudio;case teamspace.services.OutgoingCommand.Mute:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.mute;case teamspace.services.OutgoingCommand.StartAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.startaudio;case teamspace.services.OutgoingCommand.Unmute:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.unmute;case teamspace.services.OutgoingCommand.StartVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.startvideo;case teamspace.services.OutgoingCommand.StopVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.stopvideo;case teamspace.services.OutgoingCommand.HoldCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.holdcall;case teamspace.services.OutgoingCommand.UnholdCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.unholdcall}},e}();n.BaseCallCommand=r;var o=function(){function e(e,n,t,r){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=r,t.companionResponseRequired=!0,this.onResponseReceived=r.$q.defer(),this.onCommandReadyToSend=r.$q.defer(),this.onCommandReadyToSend.resolve(!0);var o=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(o).catch(o),this.logger=r.loggingService.newLogger("outgoingStartCallCommand")}return e.prototype.onCommandExecuted=function(e){var n=this.transportDependencyProviderService.loggingService.newScenario(this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.startcall,null,null,null,!0);if(e&&!e.errorDetails){var t={isMicMuted:e.startCallOptions?e.startCallOptions.isMicMuted:this.commandDetails.startCallOptions.isMicMuted,isVideoOn:e.startCallOptions?e.startCallOptions.withVideo:this.commandDetails.startCallOptions.withVideo,isSpeakerMuted:e.startCallOptions?e.startCallOptions.isSpeakerMuted:this.commandDetails.startCallOptions.isSpeakerMuted,isCallOnHold:!1},r={callId:this.commandDetails.callId,conversationId:e.conversationId,messageId:e.messageId,conversationUrl:e.conversationUrl,callState:t};this.transportDependencyProviderService.getTransportCallKeeper().addActiveCall(r),n.stop({message:"Call with callid started on companion device "+this.commandDetails.callId,message1:"Call with callid started on companion device "+this.commandDetails.callId})}else{var o="";o=e?"Start call command failed, Error response: "+e.errorDetails:"NULL response received",n.fail({error:o,error1:o}),this.logger.error(o)}},e}();n.StartCallOutgoingCommand=o;var i=function(){function e(e,n,t,r){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=r,t.companionResponseRequired=!0,this.onResponseReceived=r.$q.defer(),this.onCommandReadyToSend=r.$q.defer(),this.onCommandReadyToSend.resolve(!0);var o=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(o).catch(o),this.logger=r.loggingService.newLogger("outgoingEndCallCommand")}return e.prototype.onCommandExecuted=function(e){var n=this.transportDependencyProviderService.loggingService.newScenario(this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.endcall,null,null,null,!0);if(e&&!e.errorDetails){var t={callId:this.commandDetails.callId,conversationId:this.commandDetails.conversationId,messageId:this.commandDetails.messageId,conversationUrl:this.commandDetails.conversationUrl};this.transportDependencyProviderService.getTransportCallKeeper().removeActiveCall(t),n.stop({message:"Call with callid stopped on companion device "+this.commandDetails.callId,message1:"Call with callid stopped on companion device "+this.commandDetails.callId})}else{var r="";r=e?"End call command failed, Error response: "+e.errorDetails:"NULL response received",n.fail({error:r,error1:r}),this.logger.error(r)}},e}();n.EndCallOutgoingCommand=i},2303:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r;!function(e){e.InitState="InitState",e.ActiveCallDetails="ActiveCallDetails"}(r||(r={}));var o=function(){function e(e){this.logger=e.loggingService.newLogger("TransportCallkeeper"),this.activeCompanionDeviceCalls=[],this.states=new Map,this.logger.info("TransportCallkeeper initialized."),this.states.set(r.InitState,teamspace.services.ITransportComponentState.Initialized)}return e.prototype.addActiveCall=function(e){this.activeCompanionDeviceCalls.push(e),this.logger.info("Added active call with callId: "+e.callId+", conversationId: "+e.conversationId+", messageId: "+e.messageId)},e.prototype.removeActiveCall=function(e){this.activeCompanionDeviceCalls=this.activeCompanionDeviceCalls.filter(function(n){return n.conversationId!==e.conversationId&&n.messageId!=e.messageId}),this.logger.info("Removed call with callId: "+e.callId+", conversationId: "+e.conversationId+", messageId: "+e.messageId)},e.prototype.isCallActiveOnTransport=function(e){return-1!==this.activeCompanionDeviceCalls.findIndex(function(n){return n.conversationId===e.conversationId&&n.messageId===n.messageId})},e.prototype.getTransportCallWithDetails=function(e){return this.activeCompanionDeviceCalls.find(function(n){return n.conversationId===e.conversationId&&n.messageId===n.messageId})},e.prototype.getCallStateForCall=function(e){var n=this.getTransportCallWithDetails(e);return n?n.callState:void 0},e.prototype.setCallStateForCall=function(e,n){this.activeCompanionDeviceCalls.find(function(n){return n.conversationId===e.conversationId&&n.messageId==e.messageId}).callState=n,this.logger.info("Updated call state for the transport call with callId: "+e.callId+", conversationId: "+e.conversationId+", messageId: "+e.messageId)},e.prototype.cleanupCallKeeper=function(){this.activeCompanionDeviceCalls=[],this.states=void 0},e.prototype.getStates=function(){return this.states.set(r.ActiveCallDetails,JSON.stringify(this.activeCompanionDeviceCalls)),this.states},e}();n.TransportCallKeeper=o}},[2283]);
//# sourceMappingURL=https://statics.teams.cdn.office.net/hashedjs/lazy-ng1-mod-transport-agent-services.min.js-3842cb21.map