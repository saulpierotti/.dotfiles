"use strict";var __extends=this&&this.__extends||function(){var i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(i,e){i.__proto__=e}||function(i,e){for(var t in e)e.hasOwnProperty(t)&&(i[t]=e[t])})(e,t)};return function(e,t){function n(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}}(),teamspace;!function(i){!function(e){var t,n=skype.calling.EventEmitter;!function(i){i[i.HoldCall=0]="HoldCall",i[i.TransferCall=1]="TransferCall",i[i.ConsultThenTransferCall=2]="ConsultThenTransferCall",i[i.DtmfKeypad=3]="DtmfKeypad"}(t||(t={}));var o=function(i){function t(t,n){var o=i.call(this)||this;return o.ipc=t,o.frameSink=n,o.emitHandler=function(i,e){for(var t=[],n=2;n<arguments.length;n++)t[n-2]=arguments[n];return o.emit.apply(o,[e].concat(t))},e.MTMAIpcUtility.onWithTenantScope(t,"callMonitor:videoRenderer:emit",o.emitHandler),o}return __extends(t,i),t.prototype.dispose=function(){this.ipc.removeListener("callMonitor:videoRenderer:emit",this.emitHandler)},t.prototype.getFrameSink=function(){return this.frameSink},t.prototype.getRendererType=function(){return 4},t.prototype.getVideoSize=function(){},t.prototype.setScalingMode=function(i){return this.ipc.send("callMonitor:videoRenderer:invoke","setScalingMode",i),Promise.resolve()},t}(n),s=function(n){function s(i,e,t,o,s,a,r,l,c,h,d,p,g,u,S,v,m,C,b,f,y,M,T,w,A,k,I,V,_,E,O){var F=n.call(this)||this;return F.$window=i,F.$translate=e,F.$templateCache=t,F.callingAgentsService=o,F.callingService=s,F.callingSupportService=a,F.callingNavigationService=r,F.constants=l,F.conversationsService=c,F.loggingService=h,F.resources=d,F.callTitleService=p,F.peopleService=g,F.eventingService=u,F.$rootScope=S,F.$cookies=v,F.deviceManagerService=m,F.callTogglingService=C,F.appConfig=b,F.settingsService=f,F.callingAlertsService=y,F.callLobbyService=M,F.callingDurationService=T,F.utilityService=w,F.desktopUtilityService=A,F.authenticationService=k,F.videoSupportService=I,F.callingQualityFeedbackService=_,F.callingIntentMultiWindowService=E,F.callingMultiWindowService=O,F.isShownInExternalWindow=!1,F.isCallScreenVisible=!0,F.isCurrentlyScreenSharing=!1,F.showNewCriticalUfdDesign=!1,F.showCallQualityIndicator=!1,F.callingFooterAlert=null,F.callingCriticalAlert=null,F.callsChanged=0,F.callStateChangedSubscriptions={},F.setHiContrast=function(i,e){F.isHighContrast="contrast"===e,F.monitoredCall&&F.sendUpdate(F.monitoredCall)},F.ipc=i.electronSafeIpc,V.registerForMtma(F),F.logger=h.newLogger("CallMonitor.Desktop"),F.initializeOnAppLaunchAndReinit(),F}return __extends(s,n),s.$inject=["$window","$translate","$templateCache","callingAgentsService","callingService","callingSupportService","callingNavigationService","constants","conversationsService","loggingService","resources","callTitleService","peopleService","eventingService","$rootScope","$cookies","deviceManagerService","callTogglingService","appConfig","settingsService","callingAlertsService","callLobbyService","callingDurationService","utilityService","desktopUtilityService","authenticationService","videoSupportService","orchestrationService","callingQualityFeedbackService","callingIntentMultiWindowService","callingMultiWindowService"],s.prototype.initializeOnAppLaunchAndReinit=function(i){var t=this;e.MTMAIpcUtility.onWithTenantScope(this.ipc,"callMonitor:callScreen:event",this.onCallMonitorEvent.bind(this)),this.adminSettings=this.callingService.getAdminSettings(),this.advancedSettings=this.callingService.getAdvancedCallSettings(),this.areTogglingIncomingVideoFlagsEnabled=this.advancedSettings.isTogglingIncomingVideoEnabled,this.isHighContrast="contrast"===this.$cookies.get("storedTheme"),this.eventingService.$onWithTenantScope(this.$rootScope,this.constants.events.layout.themeChanged,this.setHiContrast),this.eventingService.$onWithTenantScope(this.$rootScope,this.constants.events.calling.callRetriedOrCancelled,function(i,e){return t.removeCallStateChangedSubscription(e)}),e.MTMASubscriptionUtility.subscribe(this.callingService,function(i,e){return t.onNetworkReconnect(e.teamsCallId)},this.constants.events.calling.networkReconnect),this.deviceManagerService.whenInitialized().then(function(){t.deviceManagerSubscription=e.MTMASubscriptionUtility.subscribe(t.deviceManagerService,function(){return t.onDeviceChange()},t.constants.events.calling.devicesChanged),t.onDeviceChange()}),this.areTogglingIncomingVideoFlagsEnabled&&(this.incomingVideoSubscription=e.MTMASubscriptionUtility.subscribe(this.callTogglingService,function(){return t.onIncomingVideoValueChanged()},e.CallTogglingService.isIncomingVideoChanged)),this.defaultTitle=this.$translate.instant(this.resources.strings.calling_meetup_default_title),this.defaultWindowTitle=this.$translate.instant(this.resources.strings.calling_multitasking_dialog_title_call),this.qualityIndicatorTooltipText=this.$translate.instant(this.resources.strings.calling_qualityIndicatorTooltip),this.minimizeTooltipText=this.$translate.instant(this.resources.strings.desktopapp_minimize_button_text),this.alertCloseTooltipText=this.$translate.instant(this.resources.strings.modal_dialog_close_button),this.muteParticipantEnabled=this.settingsService.valueAsBoolean(this.constants.settings.names.enableRemoteMuteParticipant),this.showCallMonitorOnMinimize=this.settingsService.valueAsBoolean(this.constants.settings.names.enableCallMonitorOnMinimize),this.escalateScreensharingCallEnabled=this.settingsService.valueAsBoolean(this.constants.settings.names.enableSharingOnlyCallEscalation),this.canMinimizeExternalCallMonitor=this.settingsService.valueAsBoolean(this.constants.settings.names.enableMinimizeCallMonitor),this.disableVideoForVDI=this.desktopUtilityService.isDesktopPluginless(),this.callingConstantsUI=this.settingsService.valueFor(this.constants.settings.names.callingConstants).ui,this.callingButtonTooltips=this.getCallingButtonTooltips(),this.callMonitorTemplate=this.$templateCache.get("components/calling-monitor/calling-monitor.desktop.html"),this.enableUnifiedControlBarInCallMonitor=this.settingsService.valueAsBoolean(this.constants.settings.names.enableUnifiedControlBarInCallMonitor),this.enableConfirmAudioEscalation=this.settingsService.valueAsBoolean(this.constants.settings.names.enableConfirmAudioEscalation),this.useBufferSharing=this.settingsService.valueAsBoolean(this.constants.settings.names.callingEnableBufferSharing),this.useFirstFrameRender=this.settingsService.valueAsBoolean(this.constants.settings.names.callingEnableFirstFrameRender),this.shouldShowCQFFromSSFC=this.settingsService.valueAsBoolean(this.constants.settings.names.shouldShowCQFFromSSFC),e.MTMASubscriptionUtility.subscribe(this.callingService,function(){t.callsChanged||(t.callsChanged=_.defer(function(){return t.callingServiceChanged()}))}),this.showCallMonitorOnMinimize&&this.eventingService.$onWithTenantScope(this.$rootScope,this.constants.events.appState.minimizedChanged,function(i,e){return t.onShowCallMonitorEvent(!e,!1)})},s.prototype.mtmaTelemetryIdentifier=function(){return"CallMonitor.Desktop"},s.prototype.cleanupOnAppTeardown=function(i){this.unsubscribeAtCleanup(),this.isShownInExternalWindow=!1,this.isCurrentlyScreenSharing=!1,this.isCallScreenVisible=!0,this.callMonitorTemplate=void 0,this.monitoredCall=void 0,this.showNewCriticalUfdDesign=!1,this.monitoredCallSubscription=void 0,this.inLobbyCountSubscription=void 0,this.callRecordingSubscription=void 0,this.enableUnifiedControlBarInCallMonitor=void 0,this.defaultTitle=void 0,this.defaultWindowTitle=void 0,this.meetupTitleSubscription=void 0,this.deviceManagerSubscription=void 0,this.incomingVideoSubscription=void 0,this.callingAlertsServiceSubscription=void 0,this.cameraAvailable=void 0,this.isMicAvailable=void 0,this.isIncomingVideoOn=void 0,this.videoRenderer=void 0,this.isHighContrast=void 0,this.dominantSpeaker=void 0,this.callStartDate=void 0,this.avatarBackgroundColor=void 0,this.dominantSpeakerVideoIsAvailable=void 0,this.dominantSpeakerSubscription=void 0,this.dominantSpeakerAvatar=void 0,this.frameSink=void 0,this.showCallQualityIndicator=!1,this.qualityIndicatorTooltipText=void 0,this.minimizeTooltipText=void 0,this.alertCloseTooltipText=void 0,this.adminSettings=void 0,this.advancedSettings=void 0,this.areTogglingIncomingVideoFlagsEnabled=void 0,this.callingConversation=void 0,this.callingFooterAlert=null,this.callingCriticalAlert=null,this.callingButtonTooltips=void 0,this.muteParticipantEnabled=void 0,this.showCallMonitorOnMinimize=void 0,this.escalateScreensharingCallEnabled=void 0,this.canMinimizeExternalCallMonitor=void 0,this.broadcastLivePreviewProvider=void 0,this.lastReceivedAlertName=void 0,this.callsChanged=0,this.callStateChangedSubscriptions={},this.callingConstantsUI=void 0,this.disableVideoForVDI=void 0,this.enableConfirmAudioEscalation=void 0,this.useBufferSharing=void 0,this.useFirstFrameRender=void 0,this.shouldShowCQFFromSSFC=void 0},s.prototype.unsubscribeAtCleanup=function(){this.monitoredCallSubscription&&this.monitoredCallSubscription.dispose(),this.broadcastLivePreviewProvider&&this.broadcastLivePreviewProvider.dispose(),this.inLobbyCountSubscription&&i.services.MTMASubscriptionUtility.unsubscribe(this.callLobbyService,this.inLobbyCountSubscription),this.callRecordingSubscription&&this.callRecordingSubscription.dispose(),this.callingAlertsServiceSubscription&&i.services.MTMASubscriptionUtility.unsubscribe(this.callingAlertsService,this.callingAlertsServiceSubscription),this.meetupTitleSubscription&&this.meetupTitleSubscription.dispose(),this.deviceManagerSubscription&&i.services.MTMASubscriptionUtility.unsubscribe(this.deviceManagerService,this.deviceManagerSubscription),this.incomingVideoSubscription&&i.services.MTMASubscriptionUtility.unsubscribe(this.callTogglingService,this.incomingVideoSubscription)},s.prototype.callingServiceChanged=function(){var i=this;this.callsChanged=0;var t=this.callingService.getAllCalls(!1),n=Object.keys(this.callStateChangedSubscriptions).filter(function(t){return!i.callingService.getCallByTeamsCallId(e.TeamsCallService.parseTeamsCallId(t))}),o=t.filter(function(e){return!i.callStateChangedSubscriptions[e.teamsCallId]});n.forEach(function(e){i.removeCallStateChangedSubscription(e)}),o.forEach(function(e){i.callStateChangedSubscriptions[e.teamsCallId]=e.changed(function(){return i.updateCallMonitor(e)}),i.isCallScreenVisible=!e.isScreenshareFromChat,i.updateCallMonitor(e)})},s.prototype.removeCallStateChangedSubscription=function(i){this.callStateChangedSubscriptions[i]&&(this.callStateChangedSubscriptions[i].dispose(),delete this.callStateChangedSubscriptions[i])},s.prototype.monitor=function(t){var n=this;this.log("start monitoring call"),this.monitoredCall=t,this.callingConversation=this.conversationsService.getCallingConversation(t.conversationId),this.callingAlertsServiceSubscription=e.MTMASubscriptionUtility.subscribe(this.callingAlertsService,this.onNewAlertReceived.bind(this)),this.inLobbyCountSubscription=e.MTMASubscriptionUtility.subscribe(this.callLobbyService,function(){return n.sendUpdate(t)},e.CallLobbyServiceEvents.Type_InLobbyCountChanged,e.TeamsCallService.getTeamsCallIdAsString(t.teamsCallId)),this.callRecordingSubscription=this.monitoredCall.on("recordingStatusChanged",function(){return n.sendUpdate(t)}),this.callingConversation.isGroup()&&this.conversationsService.safeSubscribe(this.$rootScope,function(){return n.updateTitle(t)},i.services.ConversationsServiceEvents.EventType_TopicChanged),this.startBroadcastMonitoring(t),this.updateTitle(t),this.callingDurationService.whenCallStartDateRetrieved(t).then(function(i){n.callStartDate=i,n.updateTitle(t)}),this.callingConversation.isChannel()&&(this.meetupTitleSubscription=this.callTitleService.subscribeForMeetupTitle(t.teamsCallId,this.updateTitle.bind(this))),this.isIncomingVideoOn=this.callTogglingService.isIncomingVideoOn(t)},s.prototype.renderPreview=function(i){var e=this;this.broadcastLivePreviewProvider&&window.setTimeout(function(){try{e.sendRenderUpdateToExternalWindow(i)}catch(i){e.logger.error("Error while sending render update to call monitor {0}",i)}},0)},s.prototype.isVideoAvailable=function(){return this.cameraAvailable&&this.adminSettings.isVideoEnabled&&!this.disableVideoForVDI},s.prototype.onDeviceChange=function(){var i=this;try{this.deviceManagerService.getCameraAvailable().then(function(e){return i.cameraAvailable=e}),this.isMicAvailable=this.deviceManagerService.getMicrophones().length>0}catch(i){this.logger.error("onDeviceChange failed. error: {0}",i)}},s.prototype.onNewAlertReceived=function(){var t=this.callingAlertsService.getAlerts(e.WindowType.ExternalCallMonitor);if(t.length>0){var n=t[t.length-1];this.showNewCriticalUfdDesign=this.callingAlertsService.showNewCriticalUFDDesign()&&_.includes([e.AlertType.Error,e.AlertType.Warning],n.type),!this.showNewCriticalUfdDesign||n.isAffirmational?(this.updateCallQualityIndicator(n),this.updateFooterAlert()):this.updateCriticalAlert(),this.lastReceivedAlertName!==n.name&&(this.callingAlertsService.sendBITelemetry(this.$rootScope,n.name,i.PanelType.callExternalMonitor),this.lastReceivedAlertName=n.name)}else this.updateQualityIndicatorVisibility(!1),this.showNewCriticalUfdDesign=!1,this.updateFooterAlert(),this.updateCriticalAlert()},s.prototype.updateFooterAlert=function(){var i=this.callingAlertsService.getAlerts(e.WindowType.CallingFooter);i.length>0?this.callingFooterAlert=i[0]:this.callingFooterAlert=null,this.sendUpdate(this.monitoredCall)},s.prototype.updateCriticalAlert=function(){this.getLatestCriticalAlertsOnDisplay(),this.sendUpdate(this.monitoredCall)},s.prototype.updateCallQualityIndicator=function(i){var e;i&&(e=i.showQualityIndicator,this.qualityIndicatorTooltipText=i.text?i.text:this.$translate.instant(this.resources.strings.calling_holdOn_message_callingMonitor)),this.updateQualityIndicatorVisibility(e)},s.prototype.updateQualityIndicatorVisibility=function(i){i!==this.showCallQualityIndicator&&(this.log("showCallQualityIndicator = "+i),this.showCallQualityIndicator=i,this.sendUpdate(this.monitoredCall))},s.prototype.updateTitle=function(i){var e=this;this.callTitleService.getDefaultCallTitle(this.constants.scenarios.calling.context.externalCallMonitor,i,this.constants.dialogs.settings.numberOfNamesInTitle,this.callingConversation).then(function(i){e.defaultTitle=i.titleText,e.sendUpdate(e.monitoredCall)}).catch(function(t){e.logger.error("Could not get default title for call "+i.callId+" error="+t)})},s.prototype.canRenderBroadcastControl=function(){return this.monitoredCall.isBroadcast},s.prototype.startBroadcastMonitoring=function(i){var t=i.setupArgs.meetingInfo;this.canRenderBroadcastControl()&&t&&t.broadcastRole&&"producer"===t.broadcastRole.toLowerCase()&&(this.broadcastLivePreviewProvider&&(this.logger.error("'startBroadcastMonitoring': Broadcast live preview provider should have been null"),this.broadcastLivePreviewProvider.dispose(),this.broadcastLivePreviewProvider=null),this.broadcastLivePreviewProvider=new e.BroadcastLivePreviewProvider(i,this,this.$translate,this.appConfig,this.resources,this.logger),this.broadcastLivePreviewProvider.init())},s.prototype.stopMonitoring=function(){this.log("stopped monitoring"),this.monitoredCall=null,this.callingConversation=null,this.monitoredCallSubscription&&(this.monitoredCallSubscription.dispose(),this.monitoredCallSubscription=null),this.broadcastLivePreviewProvider&&(this.broadcastLivePreviewProvider.dispose(),this.broadcastLivePreviewProvider=null),this.inLobbyCountSubscription&&(i.services.MTMASubscriptionUtility.unsubscribe(this.callLobbyService,this.inLobbyCountSubscription),this.inLobbyCountSubscription=null),this.callRecordingSubscription&&(this.callRecordingSubscription.dispose(),this.callRecordingSubscription=null),this.callingAlertsServiceSubscription&&(i.services.MTMASubscriptionUtility.unsubscribe(this.callingAlertsService,this.callingAlertsServiceSubscription),this.callingAlertsServiceSubscription=null),this.meetupTitleSubscription&&(this.meetupTitleSubscription.dispose(),this.meetupTitleSubscription=null),this.deviceManagerSubscription&&(i.services.MTMASubscriptionUtility.unsubscribe(this.deviceManagerService,this.deviceManagerSubscription),this.deviceManagerSubscription=null),this.incomingVideoSubscription&&(i.services.MTMASubscriptionUtility.unsubscribe(this.callTogglingService,this.incomingVideoSubscription),this.incomingVideoSubscription=null),this.disposeFrameSink(),this.disposeDominantSpeakerSubscription(),this.dominantSpeaker=null},s.prototype.disposeFrameSink=function(){if(this.frameSink)try{this.frameSink.removeAllListeners(),this.frameSink.dispose(),this.ipc.removeAllListeners("callMonitor:frameSink:invoke")}catch(i){this.logger.error("Error disposing frameSink: "+i)}finally{this.frameSink=null}},s.prototype.onCallMonitorEvent=function(i,e){switch(e.type){case"openCall":return void this.onOpen();case"toggleMic":return void this.onToggleMic();case"toggleVideo":return void this.onToggleVideo();case"togglePresenting":return void this.onTogglePresenting();case"endCall":return void this.onEndCall();case"minimizeCallMonitor":return void this.onMinimizeCallMonitor();case"dtmfKeypad":return void this.onDtmfKeypadClick();case"transfer":return void this.onTransferClick();case"consultation":return void this.onConsultationClick();case"hold":return void this.onHoldClick();case"closeAlert":return void this.onCloseAlert();case"clickOnAlertActionButton":return void this.onAlertAction()}},s.prototype.getFrameSink=function(){var i=this;return this.frameSink?this.frameSink:(this.frameSink=this.callingAgentsService.createFrameSink(),e.MTMAIpcUtility.onWithTenantScope(this.ipc,"callMonitor:frameSink:invoke",function(e,t,n){switch(t){case"setVideoPreference":i.frameSink.setVideoPreference(n.width,n.height);break;case"log":i.frameSink.log&&i.frameSink.log(n.level,n.message)}}),this.frameSink)},s.prototype.onShowCallMonitorEvent=function(i,e){this.isCallScreenVisible=i;var t=this.monitoredCall||this.callingService.getActiveCall();t&&this.showCallMonitorOnMinimize&&(this.isCallFromChildWindow(t)?e:!e)&&this.updateCallMonitor(t)},s.prototype.isCallFromChildWindow=function(i){return this.callingSupportService.isCallPoppedOutInMultiWindow(i)},s.prototype.shouldShowExternalCallMonitor=function(i){var e=3===i.state,t=this.showCallMonitorOnMinimize&&!this.isCallScreenVisible,n=3!==i.sharingSourceType&&i.isScreenshareFromChat&&!this.isCallScreenVisible,o=3!==i.sharingSourceType&&i.isScreenSharingOn;return!this.$window.isRigel&&e&&(t||(this.showCallMonitorOnMinimize?n:o))},s.prototype.updateCallMonitor=function(i){var e=!!this.monitoredCall;this.isCurrentlyScreenSharing!==i.isScreenSharingOn&&(this.isCurrentlyScreenSharing=i.isScreenSharingOn,e&&!i.isScreenSharingOn&&(this.isCallScreenVisible=!0)),e&&this.callTogglingService.isHoldStateChanging()&&(this.isCallScreenVisible=!0);var t=this.shouldShowExternalCallMonitor(i);3===i.state&&this.sendRenderUpdateToExternalWindow(i),e!==t&&(t?this.showCallMonitor(i):e&&i.callId===this.monitoredCall.callId&&this.hideCallMonitor(i))},s.prototype.showCallMonitor=function(i){i.isScreenSharingOn&&this.log("showCallMonitor: screen sharing started..."),this.monitor(i),this.openWindow(i),this.sendRenderUpdateToExternalWindow(i)},s.prototype.hideCallMonitor=function(i){!i.isScreenSharingOn&&this.log("hideCallMonitor: screen sharing stopped...");var e=3===i.state;this.closeWindow(),this.stopMonitoring(),e&&!this.callTogglingService.isHoldStateChanging()&&(this.callingSupportService.isCallPoppedOutInMultiWindow(i)?this.callingNavigationService.navigateToCallScreen(i,{isCallJoinedFromChildWindow:!0}):this.ipc.send("callScreen:restore"))},s.prototype.sendRenderUpdateToExternalWindow=function(e){var t=this;if(this.isShownInExternalWindow){var n=null;if(this.broadcastLivePreviewProvider&&this.broadcastLivePreviewProvider.isPreviewReady())n=this.broadcastLivePreviewProvider.getComposerIdIfExist();else{var o=[].concat(e.dominantSpeakerInfo.speakerList.filter(function(i){return e.participants.some(function(e){return e.id===i})})).concat(e.participants.filter(function(i){return 3===i.state}).map(function(i){return i.id})).filter(function(e){return!i.services.CallUtilities.isCallingSystemBot(e,t.callingConstantsUI.blacklistedBots)});n=o[0]}var s=_.find(e.participants,function(i){return i.id===n});s?this.updateDominantSpeaker(s):this.removeDominantSpeaker(e),this.sendUpdate(e)}},s.prototype.removeDominantSpeaker=function(i){this.log("removeDominantSpeaker "+(this.dominantSpeaker?this.dominantSpeaker.id:"")+" from callId "+i.callId),this.disposeDominantSpeakerSubscription(),this.dominantSpeaker&&i.participants.indexOf(this.dominantSpeaker)<0&&(this.dominantSpeaker=null,this.dominantSpeakerVideoIsAvailable=!1)},s.prototype.updateDominantSpeaker=function(i){var e=this;i!==this.dominantSpeaker&&(this.dominantSpeaker&&this.disposeDominantSpeakerSubscription(),this.log("updateDominantSpeaker "+i.id),this.dominantSpeaker=i,this.dominantSpeakerVideoIsAvailable=!1,this.disableVideoForVDI||(this.dominantSpeakerSubscription=i.changed(function(){return e.updateDominantSpeakerVideo()})),this.updateDominantSpeakerAvatar(i),this.updateDominantSpeakerVideo())},s.prototype.updateDominantSpeakerVideo=function(){var i=this;if(!this.disableVideoForVDI){var e=skype.calling.ICallParticipantHelpers.bestVideoFor(this.dominantSpeaker),t=!!e&&e.isAvailable&&this.callingSupportService.isIPVideoModeEnabled;this.areTogglingIncomingVideoFlagsEnabled&&(t=t&&this.isIncomingVideoOn),t!==this.dominantSpeakerVideoIsAvailable&&(t?e.start({renderer:this.createVirtualRenderer()}).then(function(t){var n=skype.calling.ICallParticipantHelpers.bestAvailableVideoFor(i.dominantSpeaker);n&&n.id==e.id?i.videoRenderer=t:i.disposeRenderer(t)}).catch(function(e){i.logger.error("Failed to start video: "+e)}):this.disposeDominantSpeakerVideo(),this.dominantSpeakerVideoIsAvailable=t,this.sendUpdate(this.monitoredCall))}},s.prototype.createVirtualRenderer=function(){return new o(this.ipc,this.getFrameSink())},s.prototype.disposeDominantSpeakerSubscription=function(){this.dominantSpeakerSubscription&&(this.dominantSpeakerSubscription.dispose(),this.dominantSpeakerSubscription=null),this.disposeDominantSpeakerVideo()},s.prototype.disposeDominantSpeakerVideo=function(){this.videoRenderer&&this.disposeRenderer(this.videoRenderer)},s.prototype.disposeRenderer=function(i){try{i.dispose()}catch(i){this.logger.warn("An error occurred while disposing the video renderer: "+(i&&i.message))}finally{i=null}},s.prototype.updateDominantSpeakerAvatar=function(i){var e=this;if(!this.dominantSpeakerVideoIsAvailable){if(SkypeX.Services.ChatServiceUtils.isPstnMri(i.id)&&this.dominantSpeaker&&this.dominantSpeaker.id===i.id)return this.dominantSpeakerAvatar="pstn",this.avatarBackgroundColor=this.utilityService.pstnBackgroundColorClass(i.id.replace("+","")),void this.sendUpdate(this.monitoredCall);this.peopleService.getPeopleProfile(i.id,"calling-monitor-service").then(function(i){return e.authenticationService.isAnonymous()?e.peopleService.getUserInitialsPicture(i.displayName,e.constants.profilePictureSizes.small).then(function(i){return i.replace(e.constants.pictureLoad.mimeJpeg,"")}):e.peopleService.getUserProfilePicture({userId:i.userPrincipalName,displayName:i.displayName},"meetup")}).then(function(t){t?e.dominantSpeaker&&e.dominantSpeaker.id===i.id&&(e.dominantSpeakerAvatar=e.constants.pictureLoad.mimeProgressivejpeg+t,e.sendUpdate(e.monitoredCall)):e.logger.warn("Received empty avatar picture")}).catch(function(i){return e.logger.error("Failed to get user avatar: "+i)})}},s.prototype.onNetworkReconnect=function(i){this.monitoredCall&&this.monitoredCall.teamsCallId===i&&this.isShownInExternalWindow&&this.monitoredCall.isNetworkReconnectOngoing()&&this.onOpen()},s.prototype.onOpen=function(t){if(void 0===t&&(t=e.CallMoreOption.None),this.monitoredCall){var n=this.isCallFromChildWindow(this.monitoredCall),o=this.monitoredCall.isScreenshareFromChat?{isMultiTasking:!0,rightPanelToOpen:i.components.Calling.RightPanel.CallingChat,callMoreOptionToExecute:t}:{isMultiTasking:!0,callMoreOptionToExecute:t};this.isCallScreenVisible=!0,this.callingNavigationService.navigateToCallScreen(this.monitoredCall,o),!n&&this.ipc.send("callScreen:restore"),this.logger.info("Navigated to "+(n?"child":"main")+" window calling screen for callId: "+this.monitoredCall.callId),this.showCallMonitorOnMinimize&&this.updateCallMonitor(this.monitoredCall)}},s.prototype.onToggleMic=function(){var i,e=this;if(this.monitoredCall){var t=this.isCallFromChildWindow(this.monitoredCall);this.monitoredCall.isContentOnlyMode&&this.enableConfirmAudioEscalation&&!t&&(this.ipc.send("callScreen:restore"),this.logger.info("onToggleMic: Navigated to main window to confirm audio escalation for callId: "+this.monitoredCall.callId)),this.callTogglingService.toggleMuteAudio(this.monitoredCall,t?3:1,null,(i={},i[this.constants.counters.eventNames.context]=this.constants.scenarios.calling.context.externalCallMonitor,i),!!t).then(function(){e.logger.info("onToggleMic: completed for callId: "+e.monitoredCall.callId+", isMuted: "+e.monitoredCall.isMuted),e.monitoredCall.isScreenshareFromChat&&(e.logger.info("onToggleMic: Updating call monitor after SSFC call is escalated, isScreenshareFromChatCallEscalated: "+e.monitoredCall.isScreenshareFromChatCallEscalated),e.sendUpdate(e.monitoredCall))})}},s.prototype.onDtmfKeypadClick=function(){this.onMoreOptionClicked(e.CallMoreOption.ShowDtmfKeypad)},s.prototype.onTransferClick=function(){this.onMoreOptionClicked(e.CallMoreOption.StartTransferring)},s.prototype.onConsultationClick=function(){this.onMoreOptionClicked(e.CallMoreOption.StartConsulting)},s.prototype.onHoldClick=function(){this.onMoreOptionClicked(e.CallMoreOption.ToggleHold)},s.prototype.onToggleVideo=function(){this.callTogglingService.toggleVideo(this.monitoredCall,this.constants.scenarios.calling.context.externalCallMonitor)},s.prototype.onIncomingVideoValueChanged=function(){this.isIncomingVideoOn=this.callTogglingService.isIncomingVideoOn(this.monitoredCall),this.sendUpdate(this.monitoredCall)},s.prototype.onTogglePresenting=function(){if(this.monitoredCall){var i=this.isCallFromChildWindow(this.monitoredCall),e=this.monitoredCall.isScreenSharingOn?{isSharingPanelRequested:!1,forceCallingScreenReloading:!0,isCallJoinedFromChildWindow:i}:{isSharingPanelRequested:!0,forceCallingScreenReloading:!0,isCallJoinedFromChildWindow:i};if(this.monitoredCall.isScreenSharingOn){var t=this.constants.scenarios.calling.context.externalCallMonitor;this.monitoredCall.stopScreenSharingOnCall(t),this.logger.info("onTogglePresenting: stop screen share, isScreenSharingOn: "+this.monitoredCall.isScreenSharingOn),this.trigger(s.Type_ExternalMonitorStopScreenshare)}this.callingNavigationService.navigateToCallScreen(this.monitoredCall,e),this.logger.info("onTogglePresenting: Navigated to "+(i?"child":"main")+" window"),!i&&this.ipc.send("callScreen:restore")}else this.logger.info("onTogglePresenting: No call found")},s.prototype.onEndCall=function(){if(this.monitoredCall){if(this.monitoredCall.isScreenshareFromChat){var i=this.callingQualityFeedbackService.checkIfSampledForPostCallCQF(e.FeedbackCallType.ScreenshareFromChat,this.monitoredCall.callId);if(this.shouldShowCQFFromSSFC&&i&&this.callingMultiWindowService.isAutoPopoutEnabled()&&this.monitoredCall.isScreenSharingOn){var t=this.monitoredCall.getIntent();null!=t&&void 0!==t||(t=this.callingIntentMultiWindowService.saveIntentFromCall(this.monitoredCall)),t.joinOptions.CQFCallId=this.monitoredCall.callId,this.callingMultiWindowService.popoutIntent(t,"end-call-ssfc-cqf")}}this.callingService.leaveCall(this.monitoredCall,this.constants.scenarios.calling.context.externalCallMonitor)}},s.prototype.onMinimizeCallMonitor=function(){this.isShownInExternalWindow&&this.canMinimizeExternalCallMonitor&&this.ipc.send("callScreen:callMonitor:minimize")},s.prototype.onCloseAlert=function(){this.monitoredCall&&this.callingCriticalAlert&&this.callingAlertsService.dismiss(this.callingCriticalAlert)},s.prototype.onAlertAction=function(){this.monitoredCall&&this.callingCriticalAlert&&this.callingCriticalAlert.actions.length>0&&(this.callingCriticalAlert.actions[0].command(),this.callingAlertsService.dismiss(this.callingCriticalAlert))},s.prototype.getLatestCriticalAlertsOnDisplay=function(){var i=this.callingAlertsService.getAlerts(e.WindowType.ExternalCallMonitor).filter(function(i){return i.type===e.AlertType.Warning||i.type===e.AlertType.Error});this.callingCriticalAlert=i.length>0?i[0]:null},s.prototype.getRecordingState=function(i){return i.getRecordingStatus()===e.CallRecordingStatus.recording||i.getVoiceCollectionStatus()===e.CallingVoiceCollectionStatus.started?e.CallRecordingStatus.recording:i.getRecordingStatus()===e.CallRecordingStatus.pending?e.CallRecordingStatus.pending:e.CallRecordingStatus.none},s.prototype.isVideoButtonAvailable=function(e){return!i.services.CallUtilities.isOneToOnePstnCall(e)&&!i.services.CallUtilities.isVoicemailGreetingCall(e)&&!e.isEmergencyCall&&this.callingSupportService.isIPVideoModeEnabled},s.prototype.isShareButtonAvailable=function(e){return!(i.services.CallUtilities.isOneToOnePstnCall(e)||i.services.CallUtilities.isSkypeConsumerCall(e)||i.services.CallUtilities.isVoicemailGreetingCall(e)||e.isEmergencyCall)},s.prototype.isAudioButtonAvailable=function(e){return!(e.isEmergencyCall&&e.myRoleInEmergencyCall===i.services.UserRoleInEmergencyCall.Caller)&&this.callingSupportService.isIPAudioModeEnabled},s.prototype.getState=function(e){this.getLatestCriticalAlertsOnDisplay();var t=this.callTitleService.getMeetupTitleForCall(e),n=this.isVideoAvailable(),o=this.callLobbyService.isSomeoneInLobby(e.teamsCallId),s=this.getRecordingState(e),a=e.isScreenshareFromChat,r=this.broadcastLivePreviewProvider&&this.broadcastLivePreviewProvider.isPreviewReady()&&!this.dominantSpeaker?this.broadcastLivePreviewProvider.getErrorMessage():e.isScreenshareFromChat?this.$translate.instant(this.resources.strings.calling_monitor_screeshareOnly_clickHereToGoBack):this.$translate.instant(this.resources.strings.calling_monitor_clickHereToGoBack),l=a&&this.$translate.instant(this.resources.strings.calling_monitor_screeshareOnly_microphone_text),c={title:this.defaultTitle,subtitle:t,windowTitle:this.defaultWindowTitle,state:e.state,startTime:this.callStartDate&&this.callStartDate.getTime(),isMuted:e.isMuted||this.muteParticipantEnabled&&e.isServerMuted||!this.callingSupportService.isIPAudioModeEnabled,isContentOnlyMode:e.isContentOnlyMode,enableConfirmAudioEscalation:this.enableConfirmAudioEscalation,isVideoOn:e.isVideoOn&&this.callingSupportService.isIPVideoModeEnabled,isVideoButtonAvailable:this.isVideoButtonAvailable(e),isShareButtonAvailable:this.isShareButtonAvailable(e),isAudioButtonAvailable:this.isAudioButtonAvailable(e),isScreenSharingOn:e.isScreenSharingOn,isIncomingVideoOn:this.isIncomingVideoOn&&this.callingSupportService.isIPVideoModeEnabled,isSomeoneInLobby:o,isRecording:s,isScreenshareFromChat:a,escalateScreensharingCallEnabled:this.escalateScreensharingCallEnabled,isRemoteVideoOn:!(!this.dominantSpeaker||!skype.calling.ICallParticipantHelpers.bestAvailableVideoFor(this.dominantSpeaker)),avatarBackgroundColor:this.avatarBackgroundColor?this.avatarBackgroundColor:null,dominantSpeakerId:this.dominantSpeaker?this.dominantSpeaker.id:null,dominantSpeakerAvatar:this.dominantSpeaker?this.dominantSpeakerAvatar:null,description:r,showQualityIndicator:this.showCallQualityIndicator,showQualityIndicatorTooltip:this.qualityIndicatorTooltipText,isVideoEnabled:n&&this.callingSupportService.isIPVideoModeEnabled,isMicEnabled:this.isMicAvailable&&this.callingSupportService.isIPAudioModeEnabled,isScreenSharingEnabled:this.adminSettings.isScreenSharingEnabled,isMinimizeMonitorEnabled:this.canMinimizeExternalCallMonitor,isPptSharingEnabled:this.advancedSettings.isPPTSharingEnabled,isHighContrast:this.isHighContrast,frameSinkName:this.getFrameSinkName(),showMoreBtn:this.showMoreBtn(),moreBtnDropDownVM:this.setMoreBtnDropdownViewModel(),callingFooterAlert:this.callingFooterAlert,callingCriticalAlert:this.callingCriticalAlert,callingButtonsTooltips:this.callingButtonTooltips,alertCloseTooltip:this.alertCloseTooltipText,minimizeTooltip:this.minimizeTooltipText,isBroadcast:this.canRenderBroadcastControl(),enableUnifiedControlBarInCallMonitor:this.enableUnifiedControlBarInCallMonitor,microphoneButtonTitleForScreenshareOnlyCalls:l,pstnImgTitle:this.$translate.instant(this.resources.strings.icons_person),disableVideoForVDI:this.disableVideoForVDI,blockAVOverIPInMeetings:this.callingSupportService.blockAVOverIPInMeetings(),useBufferSharing:!!this.useBufferSharing,useFirstFrameRender:!!this.useFirstFrameRender};if(c.isBroadcast){var h=this.getBroadcastStatus(e),d=h&&h.toString(),p=i.services.BroadcastUtilities.getBroadcastStatusResourceString(h,this.resources,!0),g=this.$translate.instant(p);c.broadcastInfo={status:d,statusText:g}}return c},s.prototype.getBroadcastStatus=function(i){var e=i&&i.broadcastMeeting&&i.broadcastMeeting.broadcastState;return e&&e.status},s.prototype.getCallingButtonTooltips=function(){return{startVideo:this.$translate.instant(this.resources.strings.calling_startVideo),stopVideo:this.$translate.instant(this.resources.strings.calling_stopVideo),muteMicrophone:this.$translate.instant(this.resources.strings.calling_button_mute),unmuteMicrophone:this.$translate.instant(this.resources.strings.calling_unmute),turnOnAudio:this.$translate.instant(this.resources.strings.calling_confirm_audio_escalation_button_text),moreActions:this.$translate.instant(this.resources.strings.calling_more_actions),stopSharingDesktop:this.$translate.instant(this.resources.strings.calling_stopSharingDesktop),startSharingDesktop:this.$translate.instant(this.resources.strings.calling_startSharingDesktop),hangup:this.$translate.instant(this.resources.strings.calling_hangup),ecalateScreensharingCall:this.$translate.instant(this.resources.strings.calling_screenshare_only_call_escalation_microphone_disabled_external_call_monitor),videoDisabled:this.getVideoDisabledReason(),micDisabled:this.$translate.instant(this.resources.strings.calling_microphone_disabled),sharingDisabled:this.getSharingDisabledReason()}},s.prototype.getVideoDisabledReason=function(){if(this.disableVideoForVDI)return this.$translate.instant(this.resources.strings.calling_video_disabled_while_sharing_screen);var i=this.monitoredCall||this.callingService.getActiveCall(),e=i?this.videoSupportService.getVideoUnavailableReasonString(i.teamsCallType):this.resources.strings.calling_video_disabled_by_admin;return this.$translate.instant(e)},s.prototype.getSharingDisabledReason=function(){return this.$translate.instant(this.videoSupportService.getScreenSharingUnavailableReasonString())},s.prototype.getFrameSinkName=function(){return this.frameSink&&this.frameSink.getBufferName?this.frameSink.getBufferName():void 0},s.prototype.openWindow=function(i){if(this.log("openWindow"),!this.isShownInExternalWindow){this.dominantSpeaker=null,this.callingButtonTooltips.videoDisabled=this.getVideoDisabledReason(),this.callingButtonTooltips.sharingDisabled=this.getSharingDisabledReason(),i.isScreenshareFromChat&&(this.callingButtonTooltips.hangup=this.escalateScreensharingCallEnabled?this.$translate.instant(this.resources.strings.calling_screensharing_call_escalated_hangup):this.$translate.instant(this.resources.strings.calling_screensharing_call_hangup));var t=this.callMonitorTemplate,n=this.getState(i);this.isShownInExternalWindow=!0,this.trigger(s.Type_ExternalMonitorChanged,null,!1),i.isScreenshareCasting||this.ipc.send("callScreen:callMonitor:open",t,n),this.shouldMinimizeApp(i)&&!this.isCallFromChildWindow(i)&&this.ipc.send("callScreen:minimize");var o=this.loggingService.findScenarioByNameAndId(this.constants.scenarios.calling.screenSharingSender,e.TeamsCallService.getTeamsCallIdAsString(i.teamsCallId));o?o.mark(this.constants.scenarios.steps.calling.screenSharing.senderCallMonitorShown):this.loggingService.warn("attempted to set performance mark "+this.constants.scenarios.steps.calling.screenSharing.senderCallMonitorShown+" but could not find scenario")}},s.prototype.shouldMinimizeApp=function(e){return!this.callingSupportService.isCallPoppedOutInMultiWindow(e)&&(e.isBroadcast?!e.broadcastMeeting||e.broadcastMeeting.role!==i.services.BroadcastMeeting.constants.role.producer:!e.isScreenshareFromChat||e.isScreenshareCasting)},s.prototype.sendUpdate=function(i){this.isShownInExternalWindow&&this.ipc.send("callScreen:callMonitor:update",this.getState(i))},s.prototype.closeWindow=function(){this.log("closeWindow"),this.isShownInExternalWindow&&(this.isShownInExternalWindow=!1,this.trigger(s.Type_ExternalMonitorChanged,null,!0),this.ipc.send("callScreen:callMonitor:close"))},s.prototype.log=function(i){this.logger.info("teamspace.services.CallMonitorService.Desktop."+i+": callId = "+(this.monitoredCall?this.monitoredCall.callId:"no-call")+", isShownInExternalWindow = "+this.isShownInExternalWindow)},s.prototype.onMoreOptionClicked=function(i){this.trigger(s.Type_ExternalMonitorMoreOptionClicked,null,i),i===e.CallMoreOption.ShowDtmfKeypad||this.closeWindow(),this.onOpen(i)},s.prototype.setMoreBtnDropdownViewModel=function(){var i;return i={},i[t.DtmfKeypad]={name:"dtmfKeypad",value:this.$translate.instant(this.resources.strings.calling_open_dtmf_keypad),enabled:this.showDtmfKeypadOption()},i[t.HoldCall]={name:"hold",value:this.$translate.instant(this.resources.strings.calling_hold_call),enabled:this.showHoldOption()},i[t.TransferCall]={name:"transfer",value:this.$translate.instant(this.resources.strings.calling_transfer_call),enabled:this.showTransferOption()},i[t.ConsultThenTransferCall]={name:"consultation",value:this.$translate.instant(this.resources.strings.calling_consultThenTransfer),enabled:this.showConsultationOption()},i},s.prototype.showTransferOption=function(){return!!this.monitoredCall&&(1===this.monitoredCall.teamsCallType&&this.advancedSettings.isCallTransferEnabled)},s.prototype.showConsultationOption=function(){return!1},s.prototype.showDtmfKeypadOption=function(){return!!this.monitoredCall&&(1===this.monitoredCall.teamsCallType&&this.advancedSettings.isDtmfEnabled)},s.prototype.showHoldOption=function(){return!!this.monitoredCall&&(this.callingConversation.isOneToOne()&&this.advancedSettings.isHoldResumeEnabled)},s.prototype.showMoreBtn=function(){return!this.isCallFromChildWindow(this.monitoredCall)&&(this.showTransferOption()||this.showConsultationOption()||this.showDtmfKeypadOption()||this.showHoldOption())},s.Type_ExternalMonitorChanged="call-external-monitor-changed",s.Type_ExternalMonitorMoreOptionClicked="call-external-monitor-more-option-clicked",s.Type_ExternalMonitorStopScreenshare="call-external-monitor-stop-screenshare",s}(SkypeX.Services.ObservableBase);e.CallMonitorServiceElectronImplementation=s,angular.module("teamspace.callMonitorService",["teamspace.constants","teamspace.callingAgentsService","teamspace.callingService","teamspace.callingNavigationService","teamspace.callTitleService","teamspace.conversationsService","teamspace.peopleService","skypeX.sxConfig","teamspace.deviceManagerService","teamspace.callTogglingService","teamspace.settingsService","teamspace.callingAlertsService","teamspace.callLobbyService","teamspace.callingDurationService","teamspace.utilityService","teamspace.desktopUtilityService","teamspace.authenticationService","skypeX.conversationsStore","teamspace.videoSupportService","teamspace.orchestrationService","teamspace.callingMultiWindowService","teamspace.callingIntentMultiWindowService","teamspace.callingQualityFeedbackService"]).service("callMonitorService",s)}(i.services||(i.services={}))}(teamspace||(teamspace={}));
var teamspace;!function(e){!function(e){var t=function(){function t(e,t,i,r,n,a,s,o,c,h,g,l,d){var m=this;this.activeCall=e,this.$q=t,this.constants=i,this.callingTelemetryService=n,this.callingAgentsService=a,this.deviceManagerService=s,this.triggerUpdate=o,this.rigelFrameSinkHelper=c,this.isContentCameraBasedIngestEnabled=h,this.hdmiPluggedIn=g,this.hdmiIngestCamera=l,this.whiteboardCamera=d,this.activeCallUserActivitySubscription=null,this.contentPreviewSource=null,this.startContentPreviewScenario=null,this.startRenderingContentPreviewTimeoutMs=2e4,this.stream={isAvailable:!1,renderer:null,frameSink:null,stream:null,streamSubscription:null},this.logger=r.newLogger("RigelContentCameraPreviewManager"),this.activeCallUserActivitySubscription=e.on("userActivityChanged",function(){m.checkCallSharing()})}return t.prototype.init=function(){this.hdmiPluggedIn&&(this.logger.info("HDMI ingest source has already been plugged in, starting preview"),this.startHdmiIngestPreview())},t.prototype.hdmiPluggedInChanged=function(e){this.hdmiPluggedIn=e,this.hdmiPluggedIn&&!this.stream.frameSink?(this.logger.info("HDMI ingest was just plugged in and there is no active content sharing, starting HDMI ingest preview"),this.startHdmiIngestPreview()):!this.hdmiPluggedIn&&this.contentPreviewSource&&1===this.contentPreviewSource.cameraType&&(this.logger.info("We are currently previewing HDMI ingest and the cable was just unplugged, disposing preview stream"),this.disposeStream())},t.prototype.startPreview=function(t){var i=this;if(this.logger.info("Starting preview for "+JSON.stringify(t)),this.stream.frameSink)return this.logger.warn("Active framesink already exists, not starting preview"),Promise.resolve();if(1===t.cameraType&&!this.isContentCameraBasedIngestEnabled)return this.logger.info("Content camera-based HDMI ingest is not enabled, not starting preview"),Promise.resolve();var r={contentType:t.cameraType};this.startContentPreviewScenario=this.callingTelemetryService.newCallingScenario(this.activeCall,this.constants.scenarios.calling.rigelStartContentCameraPreview,r,this.startRenderingContentPreviewTimeoutMs),this.contentPreviewSource=t;var n=this.rigelFrameSinkHelper.createVirtualRenderer();return this.stream.frameSink=n.getFrameSink(),this.stream.frameSink?this.callingAgentsService.deviceManager.createPreview({renderer:n},{kind:"camera",device:t.cameraId},{scalingMode:1,transparent:!1,ignoreMirroring:!0}).then(function(e){i.logger.info("Content camera preview created successfully, framesink name: "+i.stream.frameSink.getBufferName()),i.startContentPreviewScenario.stop(),i.stream.renderer=e,i.rendererChangedSubscription=e.changed(function(){return i.previewRendererChanged}),i.triggerUpdate()}).catch(function(t){var r=e.CallingTelemetryService.getErrorMessage(t);i.logger.error("Error while starting the content camera preview: "+r),i.startContentPreviewScenario.fail({errorInfo:r}),i.disposeStream()}):(this.startContentPreviewScenario.fail({errorInfo:"Unable to create virtual renderer"}),Promise.reject("Virtual renderer was not created properly, unable to start preview"))},t.prototype.startHdmiIngestPreview=function(){var e=this;return this.deviceManagerService.getHdmiIngestCameraAsync().then(function(t){return t?e.startPreview({cameraId:t.getDeviceId(),cameraType:1}):e.$q.reject("Could not find HDMI ingest camera")})},t.prototype.previewRendererChanged=function(){this.stream.renderer.isRendering&&(this.stream.isAvailable=!0,this.disposeRendererChangedSubscription())},t.prototype.checkCallSharing=function(){if(!this.activeCall.isScreenSharingOn&&this.stream.renderer&&1!==this.contentPreviewSource.cameraType)this.logger.info("Non-HDMI content sharing was stopped, disposing current preview"),this.disposeStream(),this.hdmiPluggedIn&&(this.logger.info("Content sharing was stopped but HDMI source is still plugged in, starting HDMI ingest preview"),this.startHdmiIngestPreview());else if(this.activeCall.isScreenSharingOn&&(!this.contentPreviewSource||1===this.activeCall.sharingSourceType||this.activeCall.cameraSharingSourceId!==this.contentPreviewSource.cameraId)){if(this.stream.frameSink&&this.disposeStream(),1===this.activeCall.sharingSourceType)return void this.logger.info("Doing screen scraping, no content preview to start");var e=void 0;if(this.activeCall.cameraSharingSourceId.contains(this.hdmiIngestCamera.deviceId))e=1;else{if(!this.activeCall.cameraSharingSourceId.contains(this.whiteboardCamera.deviceId))return void this.logger.error("Current shared camera "+this.activeCall.cameraSharingSourceId+" does not match ingest or whiteboard cameras");e=0}this.startPreview({cameraId:this.activeCall.cameraSharingSourceId,cameraType:e})}},t.prototype.getStream=function(){return this.stream},t.prototype.disposeRendererChangedSubscription=function(){this.rendererChangedSubscription&&this.rendererChangedSubscription.dispose()},t.prototype.disposeStream=function(){this.startContentPreviewScenario&&(this.startContentPreviewScenario.cancel(),this.startContentPreviewScenario=null),this.disposeRendererChangedSubscription(),this.stream.isAvailable=!1,this.contentPreviewSource=null,this.rigelFrameSinkHelper.disposeFrameSink(this.stream),this.rigelFrameSinkHelper.disposeStream(this.stream),this.triggerUpdate()},t.prototype.dispose=function(){this.disposeStream(),this.activeCallUserActivitySubscription&&this.activeCallUserActivitySubscription.dispose()},t}();e.RigelContentCameraPreviewManager=t}(e.services||(e.services={}))}(teamspace||(teamspace={}));
var teamspace;!function(e){!function(e){var i=function(){function i(e,i,t,n,o,s,r,a,l,c,h,g,d,u,p,S,w,f,m,v,C,y,I){this.call=e,this.$q=i,this.externalWindowCount=t,this.constants=n,this.loggingService=o,this.electronWindowMessagingService=s,this.callingMultiWindowService=r,this.connectedDisplaysCount=a,this.pushDataEventDispatcher=l,this.windowSyncDataService=c,this.callingAgentsService=h,this.autoScreenSharing=g,this.deviceManagerService=d,this.hdmiPluggedIn=u,this.hdmiIngestCamera=p,this.whiteboardCamera=S,this.callingTelemetryService=f,this.$rootScope=m,this.diagnosticsActionService=v,this.$translate=C,this.resources=y,this.callingAlertsService=I,this.windows={},this.autoScreenSharingInitialized=!1,this.isIncomingCall=!1,this.logger=o.newLogger("RigelMultiWindowCallManager"),this.rigelSettings=w.valueFor(n.settings.names.rigel),this.isIncomingCall=1===e.state,this.init()}return Object.defineProperty(i.prototype,"isDualWindow",{get:function(){return this.externalWindowCount>1},enumerable:!0,configurable:!0}),i.prototype.init=function(){var e=this;this.initializeServices(),this.openWindows().then(function(){e.logInfo("Windows created successfully")}).catch(function(i){e.logError("Error creating windows: "+i)})},i.prototype.initializeServices=function(){var i=this;this.rigelFrameSinkHelper=new e.RigelFrameSinkHelper(this.pushDataEventDispatcher,this.windowSyncDataService,this.constants,this.callingAgentsService,this.logger),this.rigelAutoScreenShare=new e.RigelAutoScreenShare(this.$q,this.call,this.autoScreenSharing,this.logger,this.constants,this.deviceManagerService,this.hdmiPluggedIn,this.hdmiIngestCamera,this.rigelSettings,this.loggingService,this.callingTelemetryService,this.$translate,this.callingAlertsService,this.resources),this.rigelContentCameraPreviewManager=new e.RigelContentCameraPreviewManager(this.call,this.$q,this.constants,this.loggingService,this.callingTelemetryService,this.callingAgentsService,this.deviceManagerService,function(){return i.sendUpdate()},this.rigelFrameSinkHelper,!0,this.hdmiPluggedIn,this.hdmiIngestCamera,this.whiteboardCamera)},i.prototype.openWindows=function(){var i=[];return this.isDualWindow&&3===this.connectedDisplaysCount?(i.push(this.openWindow(e.DevicesWindowType.Gallery)),i.push(this.openWindow(e.DevicesWindowType.Content))):this.connectedDisplaysCount>=2?i.push(this.openWindow(e.DevicesWindowType.GalleryAndContent)):this.logWarn("Cannot open external windows because there are not enough monitors, connectedDisplayCount "+this.connectedDisplaysCount),this.$q.all(i)},i.prototype.openWindow=function(e){var i=this,t={windowType:e};return this.callingMultiWindowService.popoutCall(this.call,this.constants.events.multiWindow.entryPoints.rigelConsole,t).then(function(t){return i.windows[t.windowId]=e,t})},i.prototype.sendUpdate=function(){var e=this.rigelContentCameraPreviewManager.getStream(),i=e.frameSink?e.frameSink.getBufferName():null;this.currentContentPreviewFrameSink!=i&&(this.currentContentPreviewFrameSink=i,this.logInfo("sending contentCameraSharingChanged with frameSinkName="+this.currentContentPreviewFrameSink),this.$rootScope.$broadcast(this.constants.events.rigel.service.eventTypes.contentCameraSharingChanged,this.currentContentPreviewFrameSink))},i.prototype.onContentCameraSharingSubscriptionRegistered=function(){var e=this;if(this.logInfo("onContentCameraSharingSubscriptionRegistered, initializing related services"),this.rigelContentCameraPreviewManager.init(),3===this.call.state)this.initializeAutoScreenSharing();else var i=this.call.on("callStateChanged",function(){3===e.call.state&&(e.initializeAutoScreenSharing(),i.dispose())})},i.prototype.initializeAutoScreenSharing=function(){this.autoScreenSharingInitialized||this.isIncomingCall||(this.logInfo("initializing auto screen sharing"),this.rigelAutoScreenShare.evaluateAutoScreenSharing()),this.autoScreenSharingInitialized=!0},i.prototype.updateHdmiPluggedIn=function(e){this.hdmiPluggedIn!=e&&(this.logInfo("HDMI plugged in state changed to: "+e),this.hdmiPluggedIn=e,this.rigelAutoScreenShare.hdmiPluggedInChanged(e),this.rigelContentCameraPreviewManager.hdmiPluggedInChanged(e),this.sendUpdate())},i.prototype.updateHdmiIngestCamera=function(e){this.logInfo("HDMI ingest camera changed to: "+JSON.stringify(e)),this.hdmiIngestCamera=e,this.sendUpdate()},Object.defineProperty(i.prototype,"isDisconnecting",{get:function(){return!!this.disposeDefer},enumerable:!0,configurable:!0}),i.prototype.onCallDisconnecting=function(){return this.disposeDefer||(this.logInfo("onCallDisconnecting"),this.disposeDefer=this.$q.defer(),this.handleDisconnectingState()),this.disposeDefer.promise},i.prototype.handleDisconnectingState=function(){this.downloadLogsAndCloseWindows(),this.dispose()},i.prototype.downloadLogsAndCloseWindows=function(){var e=this,i=setTimeout(function(){i=null,e.logInfo("Logs download timed out. Closing child windows"),e.closeWindows()},3e3);this.diagnosticsActionService.download().finally(function(){if(e.logInfo("Logs download complete"),!i)return e.logInfo("Child windows already closed by time out"),e.$q.resolve();clearTimeout(i),e.closeWindows()})},i.prototype.closeWindows=function(){var e=this;return this.logInfo("closing FoR windows"),this.$q.all(Object.keys(this.windows).map(function(i){return e.electronWindowMessagingService.close(i)})).catch(function(i){e.logError("window close error: "+i.message)}).finally(function(){e.disposeDefer.resolve()}),this.$q.resolve()},i.prototype.logInfo=function(e){this.logger.info(e+", callId = "+this.call.callId)},i.prototype.logWarn=function(e){this.logger.warn(e+", callId = "+this.call.callId)},i.prototype.logError=function(e){this.logger.error(e+", callId = "+this.call.callId)},i.prototype.dispose=function(){this.rigelContentCameraPreviewManager.dispose()},i}();e.RigelMultiWindowCallManager=i}(e.services||(e.services={}))}(teamspace||(teamspace={}));
"use strict";var __extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function l(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(l.prototype=i.prototype,new l)}}(),teamspace;!function(e){!function(t){var i=function(i){function l(e,l,a,s,n,o,r,c,g,d){var h=i.call(this)||this;return h.loggingService=e,h.$q=l,h.$rootScope=a,h.eventingService=s,h.constants=n,h.settingsService=o,h.rigelServiceHandler=r,h.rigelNavigationService=c,h.callingQualityFeedbackService=g,h.callRingingService=d,h.teamsState=t.TeamsCallState.Idle,h.autoExitingMeeting=!1,h.defaultCallDisposedTimeOut=3e3,h.logger=e.newLogger("RigelCallHandler"),h.rigelSettings=o.valueFor(n.settings.names.rigel),h.callDisposedTimer=null,h.callDisposedTimeOut=h.rigelSettings.callDisposedTimeout?h.rigelSettings.callDisposedTimeout:h.defaultCallDisposedTimeOut,h}return __extends(l,i),l.$inject=["loggingService","$q","$rootScope","eventingService","constants","settingsService","rigelServiceHandler","rigelNavigationService","callingQualityFeedbackService","callRingingService"],l.prototype.init=function(){return this.$q.when(this.initHandler())},l.prototype.initHandler=function(){var e=this;this.eventingService.$on(this.$rootScope,this.constants.events.calling.callCreated,this.monitor.bind(this)),this.eventingService.$on(this.$rootScope,this.constants.events.calling.callDisposed,this.callDisposed.bind(this)),this.eventingService.$on(this.$rootScope,this.constants.events.rigel.service.eventTypes.autoExitMeetingUserActionEvent,function(t,i){return e.shouldAutoExitMeeting(i)})},l.prototype.callDisposed=function(e,t){this.onCallDisposed(t)},l.prototype.getCurrentTeamsState=function(){return this.teamsState},l.prototype.monitor=function(e,i){var l=this;i&&([6,7].includes(i.state)?this.logger.error("Received call created callId="+i.callId+" with state="+t.CallUtilities.stringifyCallState(i.state)+". Will not monitor."):(this.logger.info("New call created callId="+i.callId),this.monitoredCall&&i.callId===this.monitoredCall.callId||(this.monitoredCall&&![7,0].includes(this.monitoredCall.state)?(this.logger.info("Rejecting newly created call since there is already a monitored call\n            in state="+t.CallUtilities.stringifyCallState(this.monitoredCall.state)),this.rejectCall(i,this.constants.scenarios.calling.reasons.autoRejectInATeamsMeeting)):this.monitoredCall&&7===this.monitoredCall.state&&this.callDisposedTimer?(this.logger.info("Rejecting newly created call while call is disposing and in state="+t.CallUtilities.stringifyCallState(this.monitoredCall.state)),this.rejectCall(i,this.constants.scenarios.calling.reasons.autoRejectInACallDisposing)):this.teamsState===t.TeamsCallState.PostCall?(this.logger.info("Rejecting newly created call due to post call now"),this.rejectCall(i,this.constants.scenarios.calling.reasons.autoRejectInAPostCall)):(this.monitoredCallSubscription&&this.monitoredCallSubscription.dispose(),this.logger.info("reset call disposed timer"),this.callDisposedTimer=null,this.callDisposedScenario=null,this.webLogDownloadDefer=this.$q.defer(),this.monitoredCallSubscription=i.on("callStateChanged",function(){return l.onCallStateChanged(i)}),this.monitoredCall=i,this.onCallStateChanged(i)))))},l.prototype.getWebLogDownloadDeferred=function(){return this.webLogDownloadDefer},l.prototype.onCallStateChanged=function(e){var i=this;switch(this.logger.info("onCallStateChanged to call.state:"+t.CallUtilities.stringifyCallState(e.state)),e.state){case 2:this.updateTeamsState(t.TeamsCallState.InACall,"onCallStateChanged",e);break;case 7:null===this.callDisposedTimer&&null!==this.monitoredCall&&(this.logger.info("registering call disposed timer and timeout = "+this.callDisposedTimeOut),this.createCallDisposedScenario(),this.callDisposedScenario.mark("timer_start"),this.callDisposedTimer=setTimeout(function(){return i.onCallDisposed(e)},this.callDisposedTimeOut));break;case 1:this.onCallStateNotified(e)}},l.prototype.createCallDisposedScenario=function(){null===this.callDisposedScenario&&(this.callDisposedScenario=this.loggingService.newScenario(this.constants.events.rigel.service.scenarios.callDisposed,null,null,this.callDisposedTimeOut+2e3))},l.prototype.updateTeamsState=function(e,i,l){if(void 0===l&&(l=null),this.teamsState!==e){(e===t.TeamsCallState.InACall&&this.teamsState!=t.TeamsCallState.Incoming||e===t.TeamsCallState.Incoming)&&this.$rootScope.$broadcast(this.constants.events.rigel.call.eventTypes.callCreated,l);var a=this.teamsState;this.teamsState=e,this.rigelServiceHandler.updateTeamsCallState(this.teamsState,i),this.logger.info("TeamsCallState updated: "+t.TeamsCallState[a]+" ("+a+") ---\x3e "+t.TeamsCallState[e]+" ("+e+"), reason: "+i)}},l.prototype.onCallDisposed=function(e){if(this.monitoredCall)if(this.logger.info("onCallDisposed called, this.monitoredCall.callId = "+this.monitoredCall.callId+", call.callId = "+e.callId),this.monitoredCall.callId===e.callId){if(7!==e.state||e.setupArgs.isProbeCall||this.callRingingService.playCallDisconnectedAudio(),this.callDisposedTimer&&(this.logger.info("clearing callDisposedTimer"),clearTimeout(this.callDisposedTimer),this.callDisposedTimer=null),this.monitoredCallSubscription&&(this.monitoredCallSubscription.dispose(),this.monitoredCallSubscription=null),this.monitoredCall=null,this.createCallDisposedScenario(),this.callDisposedScenario.stop(),this.rigelSettings.enableCQF&&this.teamsState===t.TeamsCallState.InACall&&!this.autoExitingMeeting){this.logger.info("try to get questionnaire by call id = "+e.callId);var i=this.loggingService.newScenario(this.constants.events.rigel.service.scenarios.getQuestionnaireForCqf),l=this.callingQualityFeedbackService.getQuestionnaire(e.callId);if(l)switch(i.stop(),l.type){case t.FeedbackType.Quality:return this.logger.info("navigate to post call page"),this.updateTeamsState(t.TeamsCallState.PostCall,"onCallStateDisconnected"),this.webLogDownloadDefer.resolve(),void this.rigelNavigationService.navigateToPostCallPage(e.callId);case t.FeedbackType.ShortDurationHangup:this.logger.info("CQF enabled, but its too short to show CQF"),this.loggingService.newScenario(this.constants.events.rigel.service.scenarios.callingQualityFeedbackShortDuration).stop();break;default:this.logger.warn("unhandled feedback type and navigate to default = "+l.type)}else i.fail(),this.logger.error("cant get questionnaire")}this.logger.info("update teams call state idle"),this.updateTeamsState(t.TeamsCallState.Idle,"onCallStateDisconnected"),this.autoExitingMeeting=!1,this.webLogDownloadDefer.reject()}else this.logger.error("call disposed event with different call id");else this.logger.info("monitoredCall is null")},l.prototype.onCallStateNotified=function(e){if(this.rigelServiceHandler.sfbState===t.SfBState.Idle){var i=this.settingsService.valueFor(this.constants.settings.names.rigel);i.enableIncomingCall&&2===e.teamsCallType||i.enableIncomingP2P&&1===e.teamsCallType?(this.$rootScope.$broadcast(this.constants.events.rigel.call.eventTypes.incomingCall,e),this.updateTeamsState(t.TeamsCallState.Incoming,"onCallStateNotified",e)):this.logger.info("Incoming call of type "+e.teamsCallType+" is not enabled on this build.")}else this.logger.info("Will reject incoming because SfB is already in a call."),this.rejectCall(e,this.constants.scenarios.calling.reasons.autoRejectInAnSfbMeeting)},l.prototype.rejectCall=function(e,i){e.reject();var l=t.TeamsCallService.getTeamsCallIdAsString(e.teamsCallId),a=this.loggingService.findScenarioByNameAndId(this.constants.scenarios.calling.incomingCall,l)||this.loggingService.findScenarioByNameAndId(this.constants.scenarios.calling.incomingPstnCall,l)||this.loggingService.findScenarioByNameAndId(this.constants.scenarios.calling.incomingInteropCall,l);a&&a.cancel({reason:i})},l.prototype.shouldAutoExitMeeting=function(t){this.autoExitingMeeting=t===e.services.RigelAutoExitMeetingUserAction.Leave},l}(SkypeX.Services.ObservableBase);t.RigelCallHandlerImplementation=i,angular.module("teamspace.rigelCallHandler",["teamspace.constants","teamspace.loggingService","teamspace.settingsService","teamspace.eventingService","teamspace.rigelServiceHandler","teamspace.rigelNavigationService","teamspace.callingQualityFeedbackService"]).service("rigelCallHandler",i)}(e.services||(e.services={}))}(teamspace||(teamspace={}));
"use strict";var __extends=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function i(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),__assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++){t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)},teamspace;!function(e){!function(t){var n=function(n){function i(e,t,i,a,r,o,s,c,l,g,h,d,u,p,v,m,C,S,f,y,w,E,b,M,I,D,$,W,x,R,A,_,P,T,L,N,O,k){var H=n.call(this)||this;return H.$q=e,H.$injector=t,H.$timeout=i,H.callingAgentsService=a,H.constants=r,H.loggingService=o,H.peopleService=s,H.eventingService=c,H.$rootScope=l,H.$cookies=g,H.appConfig=h,H.settingsService=d,H.contextViewLauncherService=u,H.pushDataEventDispatcher=p,H.windowSyncDataService=v,H.sxConfig=m,H.$translate=C,H.resources=S,H.callingAlertsService=f,H.utilityService=y,H.contentSharingService=w,H.localizationService=E,H.callingTelemetryService=b,H.pstnNumberService=M,H.$window=I,H.lazyLoadService=D,H.diagnosticsActionService=$,H.callingPerfCollectorService=W,H.multiWindowService=x,H.rigelServiceHandler=R,H.electronWindowMessagingService=A,H.callingMultiWindowService=_,H.deviceManagerService=P,H.rigelCallHandler=T,H.callingParticipantService=L,H.dialogService=N,H.conversationsService=O,H.callingService=k,H.autoScreenSharing=!1,H.hdmiPluggedIn=!1,H.externalWindowCount=1,H.connectedDisplayCount=2,H.hdmiIngestCamera=null,H.whiteboardCamera=null,H.autoExitMeetingFeatureEnabled=!1,H.autoExitMeetingEnabled=!1,H.cameraSharingEnabled=!1,H.ingestCameraIdEnabled=!1,H.contentCameraEnhancementEnabled=!1,H.contentCameraInverted=!1,H.roomCameraVideoCaptureConfig=null,H.contentCameraVideoCaptureConfig={},H.callManagers=[],H.multiWindowCallManagers=[],H.autoExitMeetingManagers=[],H.logger=o.newLogger("RigelCallScreenService.desktop"),H.rigelSetting=d.valueFor(r.settings.names.rigel),H.ingestCameraIdEnabled=I.desktopSettings&&I.desktopSettings[r.events.rigel.desktopSettings.enableRigelIngestCameraId],H.autoExitMeetingFeatureEnabled=I.desktopSettings&&I.desktopSettings[r.events.rigel.desktopSettings.enableRigelAutoExitMeeting],H.cameraSharingEnabled=d.valueAsBoolean(r.settings.names.enableCameraSharing),H}return __extends(i,n),i.$inject=["$q","$injector","$timeout","callingAgentsService","constants","loggingService","peopleService","eventingService","$rootScope","$cookies","appConfig","settingsService","contextViewLauncherService","pushDataEventDispatcher","windowSyncDataService","sxConfig","$translate","resources","callingAlertsService","utilityService","contentSharingService","localizationService","callingTelemetryService","pstnNumberService","$window","lazyLoadService","diagnosticsActionService","callingPerfCollectorService","multiWindowService","rigelServiceHandler","electronWindowMessagingService","callingMultiWindowService","deviceManagerService","rigelCallHandler","callingParticipantService","dialogService","conversationsService","callingService"],i.prototype.init=function(){return this.$q.when(this.initService())},i.prototype.getHdmiPluggedIn=function(){return this.hdmiPluggedIn},i.prototype.getWhiteboardCamera=function(){return this.whiteboardCamera},i.prototype.getHdmiIngestCamera=function(){return this.hdmiIngestCamera},i.prototype.getRoomCameraConfig=function(){return this.roomCameraVideoCaptureConfig},i.prototype.getContentCameraConfig=function(){return this.contentCameraVideoCaptureConfig},i.prototype.downloadFoRlog=function(){this.pushDataEventDispatcher.dispatch({actionType:e.shared.PushDataActionType.EXTERNAL_CALLING_SCREEN_DOWNLOAD_LOG})},i.prototype.getExternalWindowCount=function(){return this.externalWindowCount},i.prototype.getConnectedDisplayCount=function(){return this.connectedDisplayCount},i.prototype.isContentCameraEnhancementEnabled=function(){return this.contentCameraEnhancementEnabled},i.prototype.initService=function(){this.isHighContrast=this.$cookies.get(this.constants.themes.cookieName)===this.constants.themes.highContrast,this.registerListeners()},i.prototype.registerListeners=function(){var n=this;this.eventingService.$on(this.$rootScope,this.constants.events.layout.themeChanged,this.setHighContrast.bind(this)),this.eventingService.$on(this.$rootScope,this.constants.events.rigel.call.eventTypes.callCreated,this.onCallCreated.bind(this)),this.$rootScope.$on(this.constants.events.rigel.service.eventTypes.autoScreenSharing,this.onAutoScreenSharingChanged.bind(this)),this.$rootScope.$on(this.constants.events.rigel.service.eventTypes.hdmiPluggedIn,this.onHdmiPluggedInChanged.bind(this)),this.$rootScope.$on(this.constants.events.rigel.service.eventTypes.userSelectedLayout,this.onUserLayoutSelectionChanged.bind(this)),this.$rootScope.$on(this.constants.events.rigel.service.eventTypes.externalWindowCount,this.updateExternalWindowCount.bind(this)),this.$rootScope.$on(this.constants.events.rigel.service.eventTypes.connectedDisplayCount,this.updateConnectedDisplayCount.bind(this)),this.$rootScope.$on(this.constants.events.rigel.service.eventTypes.frontOfRoomWindowsSwapDone,this.onFrontOfRoomWindowsSwapDone.bind(this)),this.$rootScope.$on(this.constants.events.rigel.service.eventTypes.hdmiIngestCamera,this.onHdmiIngestCameraChanged.bind(this)),this.$rootScope.$on(this.constants.events.rigel.service.eventTypes.contentCameraSharingSubscriptionRegistered,this.onContentCameraSharingSubscriptionRegistered.bind(this)),this.eventingService.$on(this.$rootScope,this.constants.events.rigel.service.eventTypes.whiteboardCamera,this.onWhiteboardCameraChanged.bind(this)),this.eventingService.$on(this.$rootScope,this.constants.events.rigel.service.eventTypes.contentCameraEnhancementEnabled,this.onContentCameraEnhancementEnabledChanged.bind(this)),this.eventingService.$on(this.$rootScope,this.constants.events.rigel.service.eventTypes.contentCameraInverted,this.onContentCameraInvertedChanged.bind(this)),this.eventingService.$on(this.$rootScope,this.constants.events.rigel.service.eventTypes.roomCameraCaptureConfig,this.onRoomCameraCaptureConfigChanged.bind(this)),this.eventingService.$on(this.$rootScope,this.constants.events.rigel.service.eventTypes.contentCameraCaptureConfig,this.onContentCameraCaptureConfigChanged.bind(this)),e.services.MTMASubscriptionUtility.subscribe(this.rigelServiceHandler,function(e,t){n.onRigelServiceEventReceived(t)},t.RigelServiceHandlerEvents.onRigelServiceEvent),this.windowSyncDataService.registerPush(this.OnTelemetryEventFired.bind(this),[e.shared.PushDataActionType.TELEMETRY_SCENARIO_DATA_EMIT]),this.windowSyncDataService.registerRequest(this.onProxyRequest.bind(this),[e.shared.RequestDataActionType.EXTERNAL_CALLING_SCREEN_SERVICE_PROXY]),this.windowSyncDataService.registerRequest(this.emitPowerPointSlidesCount.bind(this),[e.shared.RequestDataActionType.EXTERNAL_CALLING_SCREEN_GET_PRESENTATION_SLIDES_COUNT]),this.externalWindowCount=this.rigelServiceHandler.getExternalWindowCount()},i.prototype.getPromiseResult=function(e){return e.then(function(e){return{result:e,resolved:!0}}).catch(function(e){return{error:e,resolved:!1}})},i.prototype.invokeServiceMethod=function(e,t,n){var i=this,a=this.$q.resolve(!0).then(function(){var a=i.$injector.get(e);return(t?a[t]:a).apply(a,n)});return this.getPromiseResult(a)},i.prototype.onProxyRequest=function(t){var n=this;return this.invokeServiceMethod(t.service,t.method,t.args).then(function(i){n.pushDataEventDispatcher.dispatch({actionType:e.shared.PushDataActionType.EXTERNAL_CALLING_SCREEN_SERVICE_PROXY_REPLY,payload:{result:i.resolved?i.result:i.error,resolved:i.resolved,id:t.id}})}),this.$q.when()},i.prototype.emitPowerPointSlidesCount=function(e){this.eventingService.$emit(this.constants.events.rigel.service.eventTypes.frontOfRoomPptSlidesCount,e)},i.prototype.setHighContrast=function(e,t){var n=this;this.isHighContrast=t===this.constants.themes.highContrast,this.callManagers.forEach(function(e){return e.manager.updateHighContrast(n.isHighContrast)})},i.prototype.onRigelServiceEventReceived=function(e){e.type===this.constants.events.rigel.service.eventTypes.autoExitMeetingEnabled&&(this.autoExitMeetingEnabled=!!e.data,this.logger.info("Received an auto-exit-meeting-enabled event "+this.autoExitMeetingEnabled))},i.prototype.onAutoScreenSharingChanged=function(e,t){this.logger.info("Auto screen-sharing set to "+t),this.autoScreenSharing=t},i.prototype.onHdmiPluggedInChanged=function(e,t){var n=this;this.hdmiPluggedIn=t,this.callManagers.forEach(function(e){return e.manager.updateHdmiPluggedIn(n.hdmiPluggedIn)}),this.multiWindowCallManagers.forEach(function(e){return e.manager.updateHdmiPluggedIn(n.hdmiPluggedIn)}),this.autoExitMeetingManagers.forEach(function(e){return e.manager.updateHdmiPluggedIn(n.hdmiPluggedIn)})},i.prototype.onHdmiIngestCameraChanged=function(e,t){var n=this;this.hdmiIngestCamera=t,this.ingestCameraIdEnabled&&this.deviceManagerService.setHdmiIngestCameraId(t.deviceId),this.callManagers.forEach(function(e){return e.manager.updateHdmiIngestCamera(n.hdmiIngestCamera)}),this.multiWindowCallManagers.forEach(function(e){return e.manager.updateHdmiIngestCamera(n.hdmiIngestCamera)})},i.prototype.onWhiteboardCameraChanged=function(e,t){this.whiteboardCamera=t,this.cameraSharingEnabled&&this.deviceManagerService.setWhiteboardCameraId(t?t.deviceId:null)},i.prototype.onContentCameraEnhancementEnabledChanged=function(e,t){var n=this;this.contentCameraEnhancementEnabled=t,this.callManagers.forEach(function(e){return e.manager.updateContentCameraEnhancementEnabled(n.contentCameraEnhancementEnabled)})},i.prototype.onContentCameraInvertedChanged=function(e,t){var n=this;this.contentCameraInverted=t,this.callManagers.forEach(function(e){return e.manager.updateContentCameraInverted(n.contentCameraInverted)})},i.prototype.onRoomCameraCaptureConfigChanged=function(e,t){this.logger.info("New room camera capture config override found: "+JSON.stringify(t)),this.roomCameraVideoCaptureConfig=t},i.prototype.onContentCameraCaptureConfigChanged=function(e,t){var n=this;this.logger.info("New content camera capture config override found: "+JSON.stringify(t)),this.contentCameraVideoCaptureConfig=t,this.callManagers.forEach(function(e){return e.manager.updateContentCameraVideoCaptureConfig(n.contentCameraVideoCaptureConfig)})},i.prototype.onUserLayoutSelectionChanged=function(e,t){this.callManagers.forEach(function(e){return e.manager.updateUserSelectedLayout(t)})},i.prototype.updateExternalWindowCount=function(e,t){this.externalWindowCount=t,this.logger.info("externalWindowCount updated to value="+this.externalWindowCount)},i.prototype.updateConnectedDisplayCount=function(e,t){var n=this.$window.desktopSettings?this.$window.desktopSettings.rigelWindowOptions||{}:{};if(n&&Object.keys(n).length)this.connectedDisplayCount=3;else{this.connectedDisplayCount=t,this.logger.info("connected display count changed, externalWindowCount="+this.externalWindowCount+", connectedDisplayCount="+this.connectedDisplayCount);var i=this.createNewScenario(this.constants.events.rigel.service.scenarios.connectedDisplayCount);this.displaysDisconnected?i.mark("some_monitors_disconnected",{context:"{externalWindowCount="+this.externalWindowCount+", connectedDisplayCount="+this.connectedDisplayCount+"}"}):i.mark("all_monitors_connected"),i.stop(),this.updateConnectedDisplayAlert()}},i.prototype.onFrontOfRoomWindowsSwapDone=function(){this.logger.info("FoR window swap done event received, hdmiPluggedIn="+this.hdmiPluggedIn),this.hdmiPluggedIn&&this.callManagers.forEach(function(e){return e.manager.requestIngestRegionUpdate()})},Object.defineProperty(i.prototype,"multiWindowEnabled",{get:function(){return this.multiWindowService.enabled&&this.rigelSetting.enableMultiWindow},enumerable:!0,configurable:!0}),i.prototype.onCallCreated=function(e,t){this.logger.info("New call created: callId = "+t.callId),this.multiWindowEnabled?this.initMultiWindowCallManager(t):this.initCallManager(t),this.autoExitMeetingFeatureEnabled&&this.autoExitMeetingEnabled&&this.initAutoExitMeetingManager(t),this.updateConnectedDisplayAlert()},i.prototype.initCallManager=function(e){var n=this,i=new t.RigelFrontOfRoomCallManager(e,this.externalWindowCount,this.$rootScope,this.$q,this.constants,this.settingsService,this.windowSyncDataService,this.eventingService,this.contextViewLauncherService,this.loggingService,this.appConfig,this.pushDataEventDispatcher,this.callingAlertsService,this.deviceManagerService,this.hdmiPluggedIn,this.hdmiIngestCamera,this.whiteboardCamera,this.contentCameraEnhancementEnabled,this.contentCameraInverted,this.contentCameraVideoCaptureConfig,this.autoScreenSharing,this.isHighContrast,this.callingTelemetryService,this.sxConfig,this.contentSharingService,this.localizationService,this.$window,this.$translate,this.resources,this.utilityService,this.peopleService,this.pstnNumberService,this.callingAgentsService,this.lazyLoadService,this.callingPerfCollectorService,this.connectedDisplayCount),a=this.utilityService.generateUUID();this.callManagers.push({id:a,manager:i,subscription:e.changed(function(){return n.onCallChanged(a,e)})}),this.logger.info("initCallManager: calls in manager="+this.callManagers.map(function(e){return e.manager.call.callId}))},i.prototype.initMultiWindowCallManager=function(e){var n=this,i=new t.RigelMultiWindowCallManager(e,this.$q,this.externalWindowCount,this.constants,this.loggingService,this.electronWindowMessagingService,this.callingMultiWindowService,this.connectedDisplayCount,this.pushDataEventDispatcher,this.windowSyncDataService,this.callingAgentsService,this.autoScreenSharing,this.deviceManagerService,this.hdmiPluggedIn,this.hdmiIngestCamera,this.whiteboardCamera,this.settingsService,this.callingTelemetryService,this.$rootScope,this.diagnosticsActionService,this.$translate,this.resources,this.callingAlertsService),a=this.utilityService.generateUUID();this.multiWindowCallManagers.push({id:a,manager:i,subscription:e.changed(function(){return n.onMultiWindowCallChanged(a,e)})}),this.logger.info("initMultiWindowCallManager: calls in manager="+this.multiWindowCallManagers.map(function(e){return e.manager.call.callId}))},i.prototype.initAutoExitMeetingManager=function(e){var n=this,i=new t.RigelAutoExitMeetingManager(e,this.$rootScope,this.$timeout,this.callingService,this.callingParticipantService,this.constants,this.conversationsService,this.dialogService,this.eventingService,this.hdmiPluggedIn,this.loggingService,this.settingsService),a=this.utilityService.generateUUID();this.autoExitMeetingManagers.push({id:a,manager:i,subscription:e.changed(function(){return n.onAutoExitMeetingCallChanged(a,e)})}),this.logger.info("initAutoExitMeetingManager: calls in manager="+this.autoExitMeetingManagers.map(function(e){return e.manager.call.callId}))},i.prototype.onCallChanged=function(e,t){var n=this,i=this.callManagers.find(function(t){return t.id==e});if(i&&!i.manager.isDisconnecting){if([6,7].includes(t.state)){var a=this.rigelSetting.enableCQF?this.rigelCallHandler.getWebLogDownloadDeferred():null;i.manager.onCallDisconnecting().then(function(){i.subscription.dispose(),_.remove(n.callManagers,function(t){return t.id==e}),n.logger.info("Manager removed, callId="+t.callId+", remaining calls in manager="+n.callManagers.map(function(e){return e.manager.call.callId}))}).finally(function(){n.webLogDownload(a)})}i.manager.onCallChanged(t)}},i.prototype.webLogDownload=function(e){var t=this;e?e.promise.then(function(){t.logger.info("download web log after CQF")}).catch(function(){t.logger.warn("webLogDefer rejected and just download web log now"),t.diagnosticsActionService.download()}):(this.logger.info("webLogDefer is null just download web log now"),this.diagnosticsActionService.download())},i.prototype.onMultiWindowCallChanged=function(e,t){var n=this,i=this.multiWindowCallManagers.find(function(t){return t.id===e});if(i&&!i.manager.isDisconnecting&&[6,7].includes(t.state)){var a=this.rigelSetting.enableCQF?this.rigelCallHandler.getWebLogDownloadDeferred():null;i.manager.onCallDisconnecting().then(function(){i.subscription.dispose(),_.remove(n.multiWindowCallManagers,function(t){return t.id===e}),n.logger.info("Manager removed, callId="+t.callId+", remaining calls in manager="+n.multiWindowCallManagers.map(function(e){return e.manager.call.callId}))}).finally(function(){n.webLogDownload(a)})}},i.prototype.onAutoExitMeetingCallChanged=function(e,t){var n=this.autoExitMeetingManagers.find(function(t){return t.id===e});n&&[6,7].includes(t.state)&&(n.manager.dispose(),n.subscription.dispose(),_.remove(this.autoExitMeetingManagers,function(t){return t.id===e}),this.logger.info("AutoExitManager removed, callId="+t.callId+", remaining calls in manager="+this.autoExitMeetingManagers.map(function(e){return e.manager.call.callId})))},i.prototype.onContentCameraSharingSubscriptionRegistered=function(){this.multiWindowCallManagers.forEach(function(e){return e.manager.onContentCameraSharingSubscriptionRegistered()})},i.prototype.createNewScenario=function(e,t,n){this.logger.info("new scenario created for "+e+" telemetry");var i=this.loggingService.newScenario(e,null,null,n,!0);return i.clientId=this.utilityService.generateUUID(),i.appendEventData(__assign({},t)),i},i.prototype.getOrCreateScenario=function(e){var t=this.loggingService.findScenario(e);return t||(this.logger.info("cant find scenario start and create new one for hdmi"),t=this.createNewScenario(e)),t},i.prototype.OnTelemetryEventFired=function(e){var t=e.data,n=t.scenarioName,i=t.step,a=t.status,r=t.eventData||{};if(null!=t.reason&&(r.reason=t.reason),null!=t.error&&(r.error=t.error),this.logger.info("scenarioName = "+n+", step = "+i+", status = "+a+", reason = "+(t.reason||r.reason)+", error = "+t.error),i!==this.constants.scenarios.steps.start){var o=this.getOrCreateScenario(n);switch(a){case this.constants.scenarioStepStatus.success:i===this.constants.scenarios.steps.stop?o.stop(r,null,a):o.mark(i,r,a);break;case this.constants.scenarioStepStatus.failure:o.fail(r);break;case this.constants.scenarioStepStatus.abandoned:o.cancel(r);break;case this.constants.scenarioStepStatus.incomplete:o.incomplete(r);break;default:o.mark(i,r)}}else this.createNewScenario(n)},i.prototype.updateConnectedDisplayAlert=function(){this.$window.desktopSettings&&this.$window.desktopSettings[this.constants.events.rigel.desktopSettings.enableRigelDualFrontOfRoomSupport]&&(this.logger.info("sending alert for connected displays, isDisconnected="+this.displaysDisconnected),this.eventingService.$emit(this.constants.events.rigel.service.eventTypes.displayDisconnectedAlert,this.displaysDisconnected))},Object.defineProperty(i.prototype,"displaysDisconnected",{get:function(){return this.externalWindowCount>this.connectedDisplayCount-1},enumerable:!0,configurable:!0}),i}(SkypeX.Services.ObservableBase);t.RigelCallScreenServiceImplementation=n,angular.module("teamspace.rigelCallScreenService",["teamspace.constants","teamspace.callingAgentsService","teamspace.conversationsService","teamspace.peopleService","teamspace.contextViewLauncherService","teamspace.callingAlertsService","teamspace.utilityService","teamspace.contentSharingService","teamspace.callingTelemetryService","teamspace.localizationService","teamspace.pstnNumberService","teamspace.lazyLoadService","teamspace.diagnosticsActionService","teamspace.callingPerfCollectorService","skypeX.sxConfig","teamspace.electronWindowMessagingService","teamspace.callingMultiWindowService","teamspace.deviceManagerService","teamspace.rigelCallHandler","teamspace.dialogService"]).service("rigelCallScreenService",n)}(e.services||(e.services={}))}(teamspace||(teamspace={}));
"use strict";var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),teamspace;!function(e){!function(t){var r=function(r){function i(e,t,i,o,a,n,s,c,g){var l=r.call(this)||this;return l.$state=e,l.$q=t,l.constants=i,l.loggingService=o,l.$rootScope=a,l.utilityService=n,l.orchestrationRegistrationService=s,l.broadcastMeetingService=c,l.settingsService=g,l.logger=o.newLogger("RigelNavigationService"),l}return __extends(i,r),i.$inject=["$state","$q","constants","loggingService","$rootScope","utilityService","orchestrationRegistrationService","broadcastMeetingService","settingsService"],i.getErrorDetails=function(e,t){var r="An error occurred in RigelNavigationService",i=t;return e&&(r=e.hasOwnProperty("message")?e.message:e,e.hasOwnProperty("code")&&(i=e.code)),{errMessage:r,errCode:i}},i.prototype.init=function(){this.initHandler()},i.prototype.navigateToRigelConsoleStateWithDeeplink=function(r,o){var a,n=this;this.logger.info("Navigate to rigel console with deeplink");try{o.mark("start_navigate_to_rigel");var s=this.utilityService.parseUrl(r),c=this.orchestrationRegistrationService.getEntityReferenceFromUrl(s);if(!c)return o.mark("not_retrieve_entity_url"),this.logger.warn("Could not retrieve entity reference for a given URL"),this.$q.reject({message:"Could not retrieve entity reference for a given URL",code:t.RigelNavigationServiceErrorCode.UnableToRetrieveEntityUrl});var g=c.context||{};g.DeeplinkId=c.deeplinkId,g.WithVideo="true";var l=this.settingsService.valueFor(this.constants.settings.names.rigel);if(o.mark("before_call_navigateToRigelConsoleState"),g.IsBroadcastMeeting){var v=this.utilityService.generateUUID();o.mark("before_broadcast_get_attendee_meeting",(a={},a[this.constants.scenarioDataPropNames.broadcastData]=JSON.stringify({joinId:v}),a));var d=this.broadcastMeetingService.getAttendeeMeetingUsingIds(g.Tid,g.Oid,c.containerId,"0",v);return e.services.SfBInteropUtilsService.toIPromise(this.$q,d).then(function(r){var i,a;if(l.blockBroadcastByoeMeeting){var s=r.streamResource;if(s){h={joinId:v,isByoe:s};return o.mark("broadcast_scenario_not_supported",(i={},i[n.constants.scenarioDataPropNames.broadcastData]=JSON.stringify(h),i)),n.logger.error("[resolveUrl] broadcast scenario not supported, broadcastData: "+JSON.stringify(h)),n.$q.reject({message:"This broadcast scenario is not supported",code:t.RigelNavigationServiceErrorCode.CannotJoinByoeBroadcastMeeting})}}var d=r.userRole.toLowerCase();if(d!==e.services.BroadcastMeeting.constants.role.contributor&&d!==e.services.BroadcastMeeting.constants.role.producer){var h={joinId:v,userRole:d};return o.mark("broadcast_attendee_join_not_supported",(a={},a[n.constants.scenarioDataPropNames.broadcastData]=JSON.stringify(h),a)),n.logger.error("[resolveUrl] cannot join broadcast as attendee, broadcastData: "+JSON.stringify(h)),n.$q.reject({message:"Attendee joining broadcast not supported",code:t.RigelNavigationServiceErrorCode.CannotJoinBroadcastAsAttendee})}return n.navigateToRigelConsoleState(o,c.containerId,g,void 0,c.itemId)}).catch(function(e){o.mark("broadcast_get_attendee_meeting_failed");var r=i.getErrorDetails(e,t.RigelNavigationServiceErrorCode.ErrorFetchingAttendeeMeeting),a=r.errMessage,s=r.errCode;return n.logger.error("[resolveUrl] getAttendeeMeetingUsingIds failed to an error: "+a),n.$q.reject({message:"An error occured while fetching attendee meeting: "+a,code:s})})}return this.navigateToRigelConsoleState(o,c.containerId,g,void 0,c.itemId)}catch(e){o.mark("url_not_resolved");var h=i.getErrorDetails(e,t.RigelNavigationServiceErrorCode.ErrorResolvingMeetingUrl),p=h.errMessage,u=h.errCode;return this.logger.error("[resolveUrl] Provided URL could not be resolved due to an error: "+p),this.$q.reject({message:"An error occured when parsing requested meeting URL: "+p,code:u})}},i.prototype.navigateToCortanaPage=function(){var e={location:"replace",inherit:!1,reload:!1};this.logger.info("Navigating to rigel Cortana"),this.$state.go(this.constants.states.rigelConsoleCortana,{},e)},i.prototype.navigateToPreCallPage=function(e){var t={location:"replace",inherit:!1,reload:!1};this.logger.info("Navigating to rigel pre-call screen with isPstnCall: "+e),this.$state.go(this.constants.states.rigelConsolePreCall,{isPstnCall:e},t)},i.prototype.navigateToPostCallPage=function(e){var t={location:"replace",inherit:!1,reload:!1};this.logger.info("Navigating to rigel post-call screen with callId: "+e),this.$state.go(this.constants.states.rigelConsolePostCall,{callId:e},t)},i.prototype.initHandler=function(){this.$rootScope.$on(this.constants.events.rigel.call.eventTypes.incomingCall,this.navigateToRigelConsoleStateWithIncomingCall.bind(this))},i.prototype.navigateToRigelConsoleStateWithIncomingCall=function(e,t){this.logger.info("Navigate to rigel console with incoming call");var r=this.loggingService.newScenario(this.constants.events.rigel.service.scenarios.joinMeetingIncoming);return this.navigateToRigelConsoleState(r,t.conversationId,void 0,t.teamsCallId,void 0)},i.prototype.navigateToRigelConsoleState=function(e,t,r,i,o){var a={location:"replace",inherit:!1,reload:!1};return r=r||{},r.scenarioName=e.name,r.scenarioId=e.clientId,this.logger.info("Calling state transition from "+this.$state.current.name+" to "+this.constants.states.rigelConsole),this.$state.go(this.constants.states.rigelConsole,{messageId:o,notify:!1,reload:!1,conversationId:t,isMeetupCreation:!1,navCtx:"rigel-service",deepLinkContext:r,teamsCallId:i},a).catch(function(){e.mark("state_navigation_failed")})},i.prototype.navigateToHomePage=function(){var e={location:"replace",inherit:!1,reload:!1};this.logger.info("Navigating to rigel home page"),this.$state.go(this.constants.states.rigelConsoleHomePage,{},e)},i}(SkypeX.Services.ObservableBase);t.RigelNavigationServiceImplementation=r,angular.module("teamspace.rigelNavigationService",["ui.router","teamspace.constants","teamspace.loggingService","teamspace.utilityService","teamspace.orchestrationService","teamspace.settingsService"]).service("rigelNavigationService",r)}(e.services||(e.services={}))}(teamspace||(teamspace={}));
"use strict";var __extends=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function s(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(s.prototype=n.prototype,new s)}}(),teamspace;!function(e){!function(e){var t=function(t){function n(n,s,i,r,a,o,c,l,v,g){var d=t.call(this)||this;return d.$window=n,d.$q=s,d.constants=i,d.loggingService=r,d.$rootScope=a,d.rigelNavigationService=o,d.settingsService=c,d.callingSupportService=l,d.emergencyService=v,d.eventingService=g,d.sfbState=e.SfBState.Idle,d.disableFeedbackButton=!1,d.ingestCameraIdEnabled=!1,d.isOemPluginConnected=!1,d.isOemPluginShown=!1,d.externalWindowCount=1,d.currentIngestCamera=null,d.currentWhiteboardCamera=null,d.rigelSettings=null,d.foundCaptureConfigOverride=!1,d.VidPidRegExp=RegExp("vid_([0-9a-f]{4})&pid_([0-9a-f]{4})","g"),d.rigelSettings=c.valueFor(i.settings.names.rigel),d.cameraCaptureConfigOverrides=d.rigelSettings.cameraCaptureConfigOverrides,d.logger=r.newLogger("RigelServiceHandler"),d}return __extends(n,t),n.$inject=["$window","$q","constants","loggingService","$rootScope","rigelNavigationService","settingsService","callingSupportService","emergencyService","eventingService"],n.prototype.init=function(){return this.$q.when(this.initHandler())},n.prototype.postFeedbackSubmit=function(e,t,n){this.logger.info("The teams feedback was filed under the category : '{0}'",t),this.logger.info("The user has requested to include the screenshot in work item : '{0}'",n),this.ipc.send(this.constants.events.rigel.service.callback,{type:this.constants.events.rigel.service.eventTypes.postFeedbackSubmit,data:{feedbackText:e,feedbackSelectedCategory:t,includeScreenshot:n}})},n.prototype.showTeams=function(e){this.ipc.send(this.constants.events.rigel.service.callback,{type:this.constants.events.rigel.service.eventTypes.showTeams,data:{value:e}})},n.prototype.updateTeamsCallState=function(t,n){this.settingsService.valueFor(this.constants.settings.names.rigel).switchToTeamsStateUpdate?(this.logger.info("Sending new TeamsCallState: "+e.TeamsCallState[t]+" ("+t+")"),this.ipc.send(this.constants.events.rigel.service.callback,{type:this.constants.events.rigel.service.eventTypes.teamsCallState,data:{value:e.TeamsCallState[t]}})):this.showTeams(t!==e.TeamsCallState.Idle),t===e.TeamsCallState.Idle&&this.rigelNavigationService.navigateToHomePage();var s=this.loggingService.newScenario(this.constants.events.rigel.service.scenarios.updateTeamsCallState,null,null,10*this.constants.timeInMiliseconds.second);n&&s.mark(n),s.stop()},n.prototype.displayOemPlugin=function(e){void 0===e&&(e=!0);var t=this.getIsOemPluginConnected(),n=this.getIsOemPluginShown();this.logger.info("Displaying OEM Plugin, show: "+e+", isOemPluginConnected: "+t+", isOemPluginShown: "+n),t&&e!==n&&this.ipc.send(this.constants.events.rigel.service.callback,{type:this.constants.events.rigel.service.eventTypes.displayOemPlugin,data:e})},n.prototype.initHandler=function(){var t=this;this.ingestCameraIdEnabled=this.$window.desktopSettings&&this.$window.desktopSettings[this.constants.events.rigel.desktopSettings.enableRigelIngestCameraId],this.ipc=this.$window.electronSafeIpc,this.ipc.on(this.constants.events.rigel.service.event,this.onRigelServiceEvent.bind(this)),this.$rootScope.$on(this.constants.events.rigel.service.event,this.onRigelServiceEvent.bind(this)),this.requestRigelServiceState(),this.callingSupportService.subscribe(function(){return t.sendIsPstnCallingAllowed()},e.CallingSupportServiceEvents.Type_isPstnCallingAllowedChanged),this.sendIsPstnCallingAllowed(),this.initDeviceLocationSubscription(),this.updateTeamsCallState(e.TeamsCallState.Idle,"RigelServiceHandler_initHandler")},n.prototype.initDeviceLocationSubscription=function(){this.eventingService.$on(this.$rootScope,this.constants.events.calling.locationUpdated,this.sendDeviceLocation.bind(this)),this.sendDeviceLocation()},n.prototype.requestRigelServiceState=function(){this.ipc.send(this.constants.events.rigel.service.callback,{type:this.constants.events.rigel.service.eventTypes.requestRigelServiceState,data:null})},n.prototype.sendIsPstnCallingAllowed=function(){if(this.settingsService.valueFor(this.constants.settings.names.rigel).enableSendIsEvEnabled){var e=!!this.callingSupportService.isPSTNCallingAllowed();this.logger.info("PSTN is' "+(e?"enabled":"disabled")+"' based on callingSupportService."),this.ipc.send(this.constants.events.rigel.service.callback,{type:this.constants.events.rigel.service.eventTypes.isEvEnabled,data:e})}else this.logger.info("enableSendIsEvEnabled is not enabled and isEvEnabled property will not be reflected on the SfB side accurately")},n.prototype.sendDeviceLocation=function(){var e=this.emergencyService.getMyFormattedLocation(this.constants.scenarios.calling.context.rigelConsoleScreen);this.ipc.send(this.constants.events.rigel.service.callback,{type:this.constants.events.rigel.service.eventTypes.updateDeviceLocation,data:e||""})},n.prototype.onRigelServiceEvent=function(t,n){if(this.logger.info("Received "+n.type+" with value "+n.data),[this.constants.events.rigel.service.eventTypes.toggleCortana,this.constants.events.rigel.service.eventTypes.openRigelCortana,this.constants.events.rigel.service.eventTypes.bluetoothBeaconEnabled,this.constants.events.rigel.service.eventTypes.byomAutoAcceptEnabled,this.constants.events.rigel.service.eventTypes.autoExitMeetingEnabled].includes(n.type))return this.trigger(e.RigelServiceHandlerEvents.onRigelServiceEvent,SkypeX.Services.ObservableBase.Key_All,n),this.$q.resolve();switch(n.type){case this.constants.events.rigel.service.eventTypes.joinMeetup:return this.joinMeetup(n.data);case this.constants.events.rigel.service.eventTypes.getAudioVolume:return this.$rootScope.$broadcast(this.constants.events.rigel.service.eventTypes.getAudioVolume,n.data),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.hdmiActive:return this.$q.resolve();case this.constants.events.rigel.service.eventTypes.autoScreenSharing:return this.$rootScope.$broadcast(this.constants.events.rigel.service.eventTypes.autoScreenSharing,n.data),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.externalWindowCount:return this.$window.desktopSettings&&this.$window.desktopSettings[this.constants.events.rigel.desktopSettings.enableRigelDualFrontOfRoomSupport]&&(this.externalWindowCount=n.data,this.logger.info("Received externalWindow count "+this.externalWindowCount),this.$rootScope.$broadcast(this.constants.events.rigel.service.eventTypes.externalWindowCount,this.externalWindowCount)),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.connectedDisplayCount:case this.constants.events.rigel.service.eventTypes.frontOfRoomWindowsSwapDone:return this.broadcastOnRootScope(n.type,n.data);case this.constants.events.rigel.service.eventTypes.hdmiPluggedIn:return this.$rootScope.$broadcast(this.constants.events.rigel.service.eventTypes.hdmiPluggedIn,n.data),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.disableFeedbackButton:return this.disableFeedbackButton=n.data,this.$rootScope.$broadcast(this.constants.events.rigel.service.eventTypes.disableFeedbackButton,n.data),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.sfbState:var s=this.sfbState;return this.sfbState=n.data,this.logger.info("SfbState updated: "+e.SfBState[s]+" ("+s+") ---\x3e "+e.SfBState[this.sfbState]+" ("+this.sfbState+")"),this.trigger(e.RigelServiceHandlerEvents.sfbStateUpdated,SkypeX.Services.ObservableBase.Key_All,this.sfbState),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.openPreCall:var i=n.data;return this.logger.info("Received "+this.constants.events.rigel.service.eventTypes.openPreCall+" with isPstn "+i),this.rigelNavigationService.navigateToPreCallPage(i),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.hdmiCaptureDevice:if(this.ingestCameraIdEnabled)return this.$q.resolve();var r=n.data;return this.currentIngestCamera=this.createRigelCameraFromVidPid(r.vid,r.pid),this.checkForCameraConfigOverrides(),this.broadcastOnRootScope(this.constants.events.rigel.service.eventTypes.hdmiIngestCamera,this.currentIngestCamera);case this.constants.events.rigel.service.eventTypes.ingestCameraId:if(!this.ingestCameraIdEnabled)return this.$q.resolve();var a=n.data;return this.currentIngestCamera=this.createRigelCameraFromInstancePath(a),this.checkForCameraConfigOverrides(),this.broadcastOnRootScope(this.constants.events.rigel.service.eventTypes.hdmiIngestCamera,this.currentIngestCamera);case this.constants.events.rigel.service.eventTypes.contentCameraId:if(this.foundCaptureConfigOverride&&!this.rigelSettings.enableCameraCaptureConfigOverride)return;var o=n.data;return this.currentWhiteboardCamera=this.createRigelCameraFromInstancePath(o),this.broadcastOnRootScope(this.constants.events.rigel.service.eventTypes.whiteboardCamera,this.currentWhiteboardCamera);case this.constants.events.rigel.service.eventTypes.contentCameraEnhancementEnabled:case this.constants.events.rigel.service.eventTypes.contentCameraInverted:return this.broadcastOnRootScope(n.type,n.data);case this.constants.events.rigel.service.eventTypes.oemPluginConnected:var c=n.data;return this.isOemPluginConnected=c,this.$rootScope.$broadcast(this.constants.events.rigel.service.eventTypes.oemPluginConnected,c),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.oemPluginShown:var l=n.data;return this.isOemPluginShown=l,this.$q.resolve();case this.constants.events.rigel.service.eventTypes.frontOfRoomLoadFailed:return this.broadcastOnRootScope(n.type,n.data);default:return this.logger.error("Unrecognized event type: '{0}'",n.type),this.$q.reject("Unrecognized event type: "+n.type)}},n.prototype.createRigelCameraFromInstancePath=function(e){if(!e)return this.logger.warn("Received an empty instance path, camera is not configured currently"),null;var t=e.toLowerCase().replace(/\\/g,"#");this.VidPidRegExp.lastIndex=0;var n=this.VidPidRegExp.exec(t),s=0,i=0;return 3===n.length?(s=parseInt(n[1],16),i=parseInt(n[2],16)):this.logger.error("Unable to parse VID/PID out of instance path"),{deviceId:t,vid:s,pid:i}},n.prototype.createRigelCameraFromVidPid=function(e,t){return{deviceId:"vid_"+this.decimalToPaddedFourDigitHex(e)+"&pid_"+this.decimalToPaddedFourDigitHex(t),vid:e,pid:t}},n.prototype.decimalToPaddedFourDigitHex=function(e){var t="000"+e.toString(16);return t.substr(t.length-4)},n.prototype.broadcastOnRootScope=function(e,t){return this.$rootScope.$broadcast(e,t),this.$q.resolve()},n.prototype.checkForCameraConfigOverrides=function(){if(this.currentIngestCamera){this.foundCaptureConfigOverride=!1;for(var e=0,t=this.cameraCaptureConfigOverrides;e<t.length;e++){var n=t[e];this.currentIngestCamera.vid===n.vendorId&&this.currentIngestCamera.pid===n.productId&&(this.logger.info("Found camera capture config override in ECS config"),this.foundCaptureConfigOverride=!0,this.broadcastOnRootScope(this.constants.events.rigel.service.eventTypes.roomCameraCaptureConfig,n.roomCameraConfig),this.broadcastOnRootScope(this.constants.events.rigel.service.eventTypes.contentCameraCaptureConfig,n.contentCameraConfig),this.rigelSettings.enableCameraCaptureConfigOverride||this.broadcastOnRootScope(this.constants.events.rigel.service.eventTypes.whiteboardCamera,null))}}else this.logger.warn("No valid ingest camera found")},n.prototype.joinMeetup=function(e){var t=this,n=this.loggingService.newScenario(this.constants.events.rigel.service.scenarios.joinMeetingStart,null,null,10*this.constants.timeInMiliseconds.second);return this.rigelNavigationService.navigateToRigelConsoleStateWithDeeplink(e.url,n).catch(function(e){return t.logger.error("Error while handling rigel service join-meetup event: "+e.message),t.ipc.send(t.constants.events.rigel.service.callback,{type:t.constants.events.rigel.service.eventTypes.joinMeetupFailure,data:e.code}),n.fail(),t.$q.reject(e)})},n.prototype.getIsOemPluginConnected=function(){return this.isOemPluginConnected},n.prototype.getIsOemPluginShown=function(){return this.isOemPluginShown},n.prototype.getExternalWindowCount=function(){return this.externalWindowCount},n.prototype.getHdmiIngestCamera=function(){return this.currentIngestCamera},n.prototype.getWhiteboardCamera=function(){return this.currentWhiteboardCamera},n}(SkypeX.Services.ObservableBase);e.RigelServiceHandlerImplementation=t,angular.module("teamspace.rigelServiceHandler",["teamspace.constants","teamspace.loggingService","teamspace.rigelNavigationService","teamspace.settingsService","teamspace.emergencyService","teamspace.eventingService"]).service("rigelServiceHandler",t)}(e.services||(e.services={}))}(teamspace||(teamspace={}));
"use strict";var __extends=this&&this.__extends||function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),teamspace;!function(t){!function(e){var n=function(e){function n(n,i,r,o){var s=e.call(this)||this;return s.pushDataEventDispatcher=n,s.windowSyncDataService=i,s.frameSink=r,s.constants=o,i.registerPush(s.handleEmit.bind(s),[t.shared.PushDataActionType.EXTERNAL_CALLING_SCREEN_VIDEO_RENDERER_EMIT]).then(function(t){s.listenerRegistration=t}),s}return __extends(n,e),n.prototype.handleEmit=function(t){this.emit(t.eventType,t.data)},n.prototype.dispose=function(){this.listenerRegistration&&(this.windowSyncDataService.unregister(this.listenerRegistration),this.listenerRegistration=null)},n.prototype.getFrameSink=function(){return this.frameSink},n.prototype.getRendererType=function(){return 4},n.prototype.getVideoSize=function(){},n.prototype.setScalingMode=function(e){return this.pushDataEventDispatcher.dispatch({actionType:t.shared.PushDataActionType.EXTERNAL_CALLING_SCREEN_VIDEO_RENDERER_INVOKE,payload:{eventType:this.constants.events.rigel.callScreen.videoRenderer.methods.setScallingMode,data:e}}),Promise.resolve()},n}(skype.calling.EventEmitter);e.RigelVirtualRenderer=n}(t.services||(t.services={}))}(teamspace||(teamspace={}));
var __extends=this&&this.__extends||function(){var t=function(i,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,i){t.__proto__=i}||function(t,i){for(var e in i)i.hasOwnProperty(e)&&(t[e]=i[e])})(i,e)};return function(i,e){function n(){this.constructor=i}t(i,e),i.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}}(),__awaiter=this&&this.__awaiter||function(t,i,e,n){return new(e||(e=Promise))(function(o,a){function s(t){try{r(n.next(t))}catch(t){a(t)}}function c(t){try{r(n.throw(t))}catch(t){a(t)}}function r(t){t.done?o(t.value):new e(function(i){i(t.value)}).then(s,c)}r((n=n.apply(t,i||[])).next())})},__generator=this&&this.__generator||function(t,i){function e(t){return function(i){return n([t,i])}}function n(e){if(o)throw new TypeError("Generator is already executing.");for(;r;)try{if(o=1,a&&(s=2&e[0]?a.return:e[0]?a.throw||((s=a.return)&&s.call(a),0):a.next)&&!(s=s.call(a,e[1])).done)return s;switch(a=0,s&&(e=[2&e[0],s.value]),e[0]){case 0:case 1:s=e;break;case 4:return r.label++,{value:e[1],done:!1};case 5:r.label++,a=e[1],e=[0];continue;case 7:e=r.ops.pop(),r.trys.pop();continue;default:if(s=r.trys,!(s=s.length>0&&s[s.length-1])&&(6===e[0]||2===e[0])){r=0;continue}if(3===e[0]&&(!s||e[1]>s[0]&&e[1]<s[3])){r.label=e[1];break}if(6===e[0]&&r.label<s[1]){r.label=s[1],s=e;break}if(s&&r.label<s[2]){r.label=s[2],r.ops.push(e);break}s[2]&&r.ops.pop(),r.trys.pop();continue}e=i.call(t,r)}catch(t){e=[6,t],a=0}finally{o=s=0}if(5&e[0])throw e[1];return{value:e[0]?e[1]:void 0,done:!0}}var o,a,s,c,r={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return c={next:e(0),throw:e(1),return:e(2)},"function"==typeof Symbol&&(c[Symbol.iterator]=function(){return this}),c},teamspace;!function(t){!function(i){"use strict";var e=function(e){function n(t,i,n,o,a,s,c,r,l,p,f,h,d,y,u,g,S,v,m,T,k,N,b,A,_,C,w,I,D,M,X,U,$,R,H){var P=e.call(this,i,l,n,y,g,f,d,T,S,b,v,m,k,N)||this;return P.$injector=t,P.$q=o,P.$window=a,P.$rootScope=s,P.$state=c,P.$timeout=r,P.notificationsStore=p,P.utilityService=h,P.peopleService=u,P.chatListService=A,P.analyticsStateService=_,P.userAppsStore=C,P.navigationNotificationService=w,P.platformDetectService=I,P.desktopUtilityService=D,P.messagingTelemetryService=M,P.authenticationService=X,P.$http=U,P.deviceManagerService=R,P.notificationsAuxiliaryService=H,P.logger=y.newLogger("Notifications Service Desktop"),P.safeIpc=a.electronSafeIpc,$.registerAction(n.actions.notificationsService.startup,function(){return o.resolve()}),$.registerForMtma(P),P.initializeOnAppLaunchAndReinit("First Initialize"),P}return __extends(n,e),n.$inject=["$injector","ringtoneSettingService","constants","$q","$window","$rootScope","$state","$timeout","eventingService","notificationsStore","settingsService","utilityService","routeUtilityService","loggingService","peopleService","notificationSettingsStore","audioService","resources","$translate","ariaLiveService","shortcutService","peopleTargetingService","conversationsService","chatListService","analyticsStateService","userAppsStore","navigationNotificationService","platformDetectService","desktopUtilityService","messagingTelemetryService","authenticationService","$http","orchestrationService","deviceManagerService","notificationsAuxiliaryService"],n.prototype.initializeOnAppLaunchAndReinit=function(t){var e=this;this.logger.log("onAppReInit - {0}",t),i.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationShown,function(t,i){e.onNotificationShown(i)}),i.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationUpdated,function(t,i){e.onNotificationUpdated(i)}),i.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationAudioRequest,function(t,i){e.playNotificationAudio(i)}),i.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationClicked,function(t,i,n,o,a){e.onNotificationClicked(i,n,o,a)}),i.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationTimeout,function(t,i){e.onNotificationTimeout(i)}),i.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationActionTaken,function(t,i,n,o,a,s){e.onNotificationActionTaken(i,n,a,o,s)}),i.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationActionCancelled,function(t,i,n){e.onNotificationActionCancelled(i,n)}),i.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationActionNotShown,function(t,i){e.onNotificationActionNotShown(i)}),i.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.sfbNotificationActionNotShown,function(t,i){e.onSfBNotificationActionNotShown(i)}),this.desktopUtilityService.avIsRemoted()&&this.settingsService.valueAsBoolean(this.constants.settings.names.remoteVDINotifications)&&(i.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationAudioPlayed,function(t,i,n,o){e.logger.log("VDI: notificationAudioPlayed for audioId: "+i+", src: "+n+", isLoop: "+o);var a=e.deviceManagerService.getSelectedSpeakerApplicationDeviceId();window.vdi.setSinkId(i,a),window.vdi.setLoop(i,o),window.vdi.playNotifyAudio(i,n);var s=e.deviceManagerService.getSelectedSecondaryRingerDeviceId();if(s){var c=i+"_secondary";window.vdi.setSinkId(c,s),window.vdi.setLoop(c,o),window.vdi.playNotifyAudio(c,n)}}),i.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationAudioPaused,function(t,i){e.logger.log("VDI: notificationAudioPaused for audioId: "+i),window.vdi.pauseNotifyAudio(i),e.deviceManagerService.getSelectedSecondaryRingerDeviceId()&&window.vdi.pauseNotifyAudio(i+"_secondary")})),this.initializeNotficationsServiceBase(t),this.notificationHandlers={},this.cancellationHandlers={},this.badgeCounts={activity:0,chat:0},this.chatsEnabled=!0,this.userAppsStore.register(this),i.MTMASubscriptionUtility.subscribe(this.notificationsStore,function(t,i){e.createNotification(i)},this.constants.events.notifications.store.Type_NewActivitiesHydrated_Recent),this.eventingService.$onWithTenantScope(this.$rootScope,this.constants.events.notifications.bellCountUpdated,function(t,i){e.badgeCounts.activity=i,e.updateTaskbarBadge(e.getTotalBadgeCount())}),i.MTMASubscriptionUtility.safeSubscribe(this.chatListService,this.$rootScope,function(){e.badgeCounts.chat=e.chatListService.getUnreadCountFromChatList(),e.updateTaskbarBadge(e.getTotalBadgeCount())},i.ChatListServiceEvents.EventType_UnreadCount)},n.prototype.cleanupOnAppTeardown=function(t){this.logger.log("onAppTeardown -- reason - {0}",t),this.cleanupNotficationsServiceBase(t),this.notificationHandlers=void 0,this.cancellationHandlers=void 0,this.lastBadgeCountSent=void 0,this.actionNotificationData=void 0,this.badgeCounts=void 0,this.chatsEnabled=void 0},n.prototype.mtmaTelemetryIdentifier=function(){return"NotificationsServiceDesktopImplementation"},n.prototype.createToast=function(t,i,e){this.platformDetectService.isRigel()?this.logger.info("Skip all toasts for Teams on Rigel."):(this.createDesktopNotification(t,i,e),this.$window&&this.$window.desktopSettings&&this.$window.desktopSettings.enableNotificationAudioPlayInSync?this.logger.info("control to play audio alert in desktop side"):this.playNotificationAudio(t))},n.prototype.playNotificationAudio=function(t){var e=null,n=this.notificationSettingsStore.getAppUserSettings();t.notificationType===SkypeX.Services.NotificationType.Priority||t.notificationType===SkypeX.Services.NotificationType.NativeNotificationFre?e=this.primaryNotificationAudio:n&&t.notificationType&&n.soundsSettings.alertSound!==i.AlertSoundValue[i.AlertSoundValue.Off]&&(t.notificationType===SkypeX.Services.NotificationType.Mention||t.notificationType===SkypeX.Services.NotificationType.MentionInChat?t.notificationSubType===SkypeX.Services.NotificationSubType.Person?e=this.primaryNotificationAudio:t.notificationSubType!==SkypeX.Services.NotificationSubType.Channel&&t.notificationSubType!==SkypeX.Services.NotificationSubType.Team||(e=this.secondaryNotificationAudio):t.notificationType===SkypeX.Services.NotificationType.Chat?e=this.primaryNotificationAudio:t.notificationType!==SkypeX.Services.NotificationType.Reply&&t.notificationType!==SkypeX.Services.NotificationType.Like&&t.notificationType!==SkypeX.Services.NotificationType.LikeInChat&&t.notificationType!==SkypeX.Services.NotificationType.Reaction&&t.notificationType!==SkypeX.Services.NotificationType.ReactionInChat&&t.notificationType!=SkypeX.Services.NotificationType.Follow&&t.notificationType!=SkypeX.Services.NotificationType.ThirdParty||n.soundsSettings.alertSound===i.AlertSoundValue[i.AlertSoundValue.CallMentionChats]||(e=this.secondaryNotificationAudio)),e&&e.play()},n.prototype.onStateChanged=function(t){this.chatsEnabled=t.hasApp(this.constants.appId.chat),this.updateTaskbarBadge(this.getTotalBadgeCount())},n.prototype.createNotificationWithActions=function(e){var n=this;this.actionNotificationData=e;var o=null;if(this.platformDetectService.isRigel())return this.logger.info("Disabling calling notification for Teams on Rigel."),o;if(e){var a=this.utilityService.generateUUID();this.populateRingtoneName(e),this.populateNotificationData(e);var s=(new Date).getTime();this.notificationsForConversation[e.sourceId]?this.notificationsForConversation[e.sourceId].push(a):this.notificationsForConversation[e.sourceId]=[a],this.notificationHandlers[a]={data:e,time:s},o=new i.NotificationWithActions(this.$q,function(){return n.cancelNotification(a)},function(t){return n.updateNotification(a,t)}),this.cancellationHandlers[a]={cancelable:o,trackingType:e.trackingType,time:s},this.desktopUtilityService&&this.desktopUtilityService.isIPCRendererListenerRemovalEnabled()?i.MTMAIpcUtility.onceWithTenantScope(this.safeIpc,this.constants.events.desktopApp.playNotificationAudio,function(t,i){var e={notificationType:i.skypexType,notificationSubType:i.skypexSubType};n.playNotificationAudio(e)}):i.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.playNotificationAudio,function(t,i){var e={notificationType:i.skypexType,notificationSubType:i.skypexSubType};n.playNotificationAudio(e)});var c=this.notificationSettingsStore.getAppUserSettings();if(e.type==t.services.NotificationType.meetingWentLive){e.icon="icons-meeting-join";var r,l=window.stopBackgroundThrottling(function(t){t&&n.logger.info("[PeopleProfileWithDefaultName] disable background throttling"),r=n.loggingService.newScenario(n.constants.scenarios.toast.getProfileWithDefaultName)});this.peopleService.getPeopleProfileWithDefaultName(e.callerMri,"chat-list",this.guestUserDisplayName).then(function(t){t&&(e.subtitle=n.$translate.instant(n.resources.strings.notifications_liveCall_toastTitle,{meetingCaller:t.displayName}))}).then(function(){n.safeIpc.send(n.constants.events.desktopApp.notificationAction,a,e,c)}).finally(function(){l(function(t,i){t&&n.logger.info("[PeopleProfileWithDefaultName] try enable background throttling"),r.stop({isLockReleased:i})})})}else this.safeIpc.send(this.constants.events.desktopApp.notificationAction,a,e,c);var p={};p[this.constants.telemetry.notification.property.id]=a,p[this.constants.telemetry.notification.property.type]=e.trackingType,p[this.constants.telemetry.notification.property.hasHeader]=!!e.headerData,this.loggingService.event(this.constants.telemetry.notification.show,p),e.teamsCallId?this.logger.info("Created notification toast with ID: "+a+" for teamsCallId: "+e.teamsCallId+", [call][incomingCall][createCallToast][teamsCallId="+e.teamsCallId+"][notificationId="+a+"]"):this.logger.info("Created notification toast with ID: "+a),this.$timeout(function(){n.removeOrphanHandlers()},72e5)}return o},n.prototype.updateNotification=function(t,i){if(this.settingsService.valueAsBoolean(this.constants.settings.names.enableUpdatingCallToasts))if(t&&i){this.safeIpc.send(this.constants.events.desktopApp.notificationUpdate,t,i);var e={};e[this.constants.telemetry.notification.property.id]=t,e[this.constants.telemetry.notification.property.isTitleUpdated]=!!i.title,e[this.constants.telemetry.notification.property.isImageUpdated]=!!i.image,this.loggingService.event(this.constants.telemetry.notification.update,e);var n=i.teamsCallId||i.callId?"[call][incomingCall][updateCallToast][teamsCallId="+i.teamsCallId+"][callId="+i.callId+"]":"";this.logger.info("[updateNotification] Updated notification toast. [notificationId={0}]{1}",t,n)}else this.logger.warn("[updateNotification] Unable to update notification. Missing data.")},n.prototype.dismissNotification=function(t,e){var n=this,o=i.NotificationType.chat+"|"+t+"|"+e;this.notificationsForConversation[o]&&(_.each(this.notificationsForConversation[o],function(t){n.cancelNotification(t)}),delete this.notificationsForConversation[o]),this.actionNotificationData=null},n.prototype.createDesktopNotification=function(e,n,o){var a=this,s=e.title,c=i.NotificationType.default,r=e.message,l=null,p=null,f=7,h=this.constants.telemetry.notification.type.default,d=null,y=!1,u=e.subtitle,g=e.usrObj,S=e.notificationType,v=e.sourceThreadId,m=e.linkParams,T=e.notificationSubType,k=e.message,N=e.activityId,b=e.skipIfSfBRunning,A=e.loggedInUserSip,_=e.linkState,C=e.notificationDataMTMA,w=this.parseTeamChannelFromLinkParams(m),I=!1,D="";switch(g&&(g.displayName&&S!==SkypeX.Services.NotificationType.Chat&&(s=g.displayName,this.settingsService.valueAsBoolean(this.constants.settings.names.enableAADFirstAndLastName)&&e.originalNotification&&e.originalNotification.activity&&e.originalNotification.activity.sourceUserImDisplayName&&(s=e.originalNotification.activity.sourceUserImDisplayName),I=!0),g.objectId?D=g.objectId:g.userPrincipalName&&(D=g.userPrincipalName)),S){case SkypeX.Services.NotificationType.Chat:c=i.NotificationType.chat,p=this.constants.icons.notification.chat,f=16,T===SkypeX.Services.NotificationSubType.SmsChat&&(p=this.constants.icons.notification.sms,s=this.$translate.instant(this.resources.strings.notifications_sms_toast_title_text,{displayName:s})),t.services.SfBInteropUtilsService.isSfBConversation(e.sourceThreadId)&&(p=this.constants.icons.notification.sfb),h=this.constants.telemetry.notification.type.chat,d=c+"|"+v+"|"+D;break;case SkypeX.Services.NotificationType.Reply:c=i.NotificationType.reply,I&&(s=this.$translate.instant(this.resources.strings.notifications_desktop_reply_title,{displayName:s})),w&&(r=w),p=this.constants.icons.notification.reply,h=this.constants.telemetry.notification.type.reply;break;case SkypeX.Services.NotificationType.ReplyToReply:c=i.NotificationType.replyToReply,I&&(s=this.$translate.instant(this.resources.strings.notifications_desktop_replytoreply_title,{displayName:s})),w&&(r=w),p=this.constants.icons.notification.reply,h=this.constants.telemetry.notification.type.replyToReply;break;case SkypeX.Services.NotificationType.Mention:case SkypeX.Services.NotificationType.MentionInChat:c=i.NotificationType.mention,T&&T===SkypeX.Services.NotificationSubType.Person?I&&(s=this.$translate.instant(this.resources.strings.notifications_desktop_mention_title,{displayName:s})):k&&k.length>0&&(s=k),w&&(r=w),S===SkypeX.Services.NotificationType.MentionInChat&&(r=this.parseGroupNameFromNotification(e)),p=T===SkypeX.Services.NotificationSubType.Channel?this.constants.icons.notification.channel:T===SkypeX.Services.NotificationSubType.Team?this.constants.icons.notification.teams:this.constants.icons.notification.mention,h=this.constants.telemetry.notification.type.mention;break;case SkypeX.Services.NotificationType.Like:case SkypeX.Services.NotificationType.LikeInChat:c=i.NotificationType.like,I&&(s=this.$translate.instant(this.resources.strings.notifications_desktop_like_title,{displayName:s})),w&&(r=w),S===SkypeX.Services.NotificationType.LikeInChat&&(r=this.parseGroupNameFromNotification(e)),p=this.constants.icons.notification.like,h=this.constants.telemetry.notification.type.like;break;case SkypeX.Services.NotificationType.Reaction:case SkypeX.Services.NotificationType.ReactionInChat:switch(c=i.NotificationType.reaction,I&&(s=this.$translate.instant(this.resources.strings.notifications_desktop_reaction_title,{displayName:s})),w&&(r=w),S===SkypeX.Services.NotificationType.ReactionInChat&&(r=this.parseGroupNameFromNotification(e)),e.notificationSubType){case SkypeX.Services.NotificationSubType.Angry:p=this.constants.icons.notification.reactionAngry,h=this.constants.telemetry.notification.type.reactionAngry;break;case SkypeX.Services.NotificationSubType.Heart:p=this.constants.icons.notification.reactionHeart,h=this.constants.telemetry.notification.type.reactionHeart;break;case SkypeX.Services.NotificationSubType.Laugh:p=this.constants.icons.notification.reactionLaugh,h=this.constants.telemetry.notification.type.reactionLaugh;break;case SkypeX.Services.NotificationSubType.Like:p=this.constants.icons.notification.reactionLike,h=this.constants.telemetry.notification.type.reactionLike;break;case SkypeX.Services.NotificationSubType.Sad:p=this.constants.icons.notification.reactionSad,h=this.constants.telemetry.notification.type.reactionSad;break;case SkypeX.Services.NotificationSubType.Surprised:p=this.constants.icons.notification.reactionSurprised,h=this.constants.telemetry.notification.type.reactionSurprised}break;case SkypeX.Services.NotificationType.TeamMembershipChange:h=this.constants.telemetry.notification.type.teamMemberChange,c=i.NotificationType.teamMembershipChange,T===SkypeX.Services.NotificationSubType.AddedToTeam?(h=this.constants.telemetry.notification.type.addedToTeam,s=this.conversationsService.isPrivateChannel(v)?this.$translate.instant(this.resources.strings.notifications_privatechannel_toast_title):this.$translate.instant(this.resources.strings.notifications_team_toast_title),p=this.constants.icons.notification.addParticipant):T===SkypeX.Services.NotificationSubType.PromotedToTeamAdmin?(h=this.constants.telemetry.notification.type.promotedToTeamAdmin,s=this.conversationsService.isPrivateChannel(v)?this.$translate.instant(this.resources.strings.notifications_privatechannel_admin_toast_title):this.$translate.instant(this.resources.strings.notifications_team_admin_toast_title),p=this.constants.icons.notification.promotedToTeamAdmin):SkypeX.Services.NotificationUtility.isJoinRequestSubType(T)&&(h=SkypeX.Services.NotificationUtility.isSponsoredJoinRequestSubType(T)?this.constants.telemetry.notification.type.pendingInvitedJoinRequest:this.constants.telemetry.notification.type.pendingSelfJoinRequest,s=r,r=e.originalNotification.displayChannelName,p=this.constants.icons.notification.addParticipant);break;case SkypeX.Services.NotificationType.Download:switch(h=this.constants.telemetry.notification.type.download,c=i.NotificationType.download,y=!0,T){case SkypeX.Services.NotificationSubType.DownloadStarted:p=this.constants.icons.notification.downloadStarted;break;case SkypeX.Services.NotificationSubType.Downloaded:p=this.constants.icons.notification.downloaded;break;case SkypeX.Services.NotificationSubType.DownloadFailed:p=this.constants.icons.notification.downloadFailed}break;case SkypeX.Services.NotificationType.Inferred:h=this.constants.telemetry.notification.type.inferred,c=i.NotificationType.inferred,p=this.constants.icons.notification.inferred,r=w,s=e.notificationSubType===SkypeX.Services.NotificationSubType.ChannelNewMessage?this.$translate.instant(this.resources.strings.notifications_inferred_newMessage_toastTitle,{actor:s}):this.$translate.instant(this.resources.strings.notifications_inferred_replyMessage_toastTitle,{actor:s});break;case SkypeX.Services.NotificationType.Follow:h=this.constants.telemetry.notification.type.follow,c=i.NotificationType.follow,p=this.constants.icons.notification.follow,r=w,s=e.notificationSubType===SkypeX.Services.NotificationSubType.ChannelNewMessage?this.$translate.instant(this.resources.strings.notifications_follow_newMessage_toastTitle,{actor:s}):this.$translate.instant(this.resources.strings.notifications_follow_replyMessage_toastTitle,{actor:s});break;case SkypeX.Services.NotificationType.Trending:h=this.constants.telemetry.notification.type.trending,c=i.NotificationType.trending,p=this.constants.icons.notification.trending,r=w,s=this.$translate.instant(this.resources.strings.notifications_trending_toastTitle,{actor:s});break;case SkypeX.Services.NotificationType.ThirdParty:h=this.constants.telemetry.notification.type.thirdparty,c=i.NotificationType.thirdparty,p=this.constants.icons.notification.thirdparty,s=this.$translate.instant(this.resources.strings.notifications_thirdparty_toastTitle,{actor:s});break;case SkypeX.Services.NotificationType.DLP:h=this.constants.telemetry.notification.type.dlp,c=i.NotificationType.dlp,p=this.constants.icons.notification.dlp,r=e.originalNotification.isChat?this.parseGroupNameFromNotification(e):w,s=this.$translate.instant(this.resources.strings.actor_reason_string_for_dlp);break;case SkypeX.Services.NotificationType.Priority:h=this.constants.telemetry.notification.type.priority,c=i.NotificationType.priority,p=this.constants.icons.notification.priority,f=16,e.usrObj&&e.usrObj.givenName&&(s=e.usrObj.givenName),s=this.$translate.instant(this.resources.strings.actor_reason_string_for_priority_feed_notification,{actor:s});break;case SkypeX.Services.NotificationType.MessageSendFailed:c=i.NotificationType.messageSendFailed,p=this.constants.icons.notification.messageSendFailed;break;case SkypeX.Services.NotificationType.Error:p=this.constants.icons.notification.error;break;case SkypeX.Services.NotificationType.PresenceStatus:c=i.NotificationType.presenceStatus;break;case SkypeX.Services.NotificationType.TeamsEngagementActivity:e.notificationSubType===SkypeX.Services.NotificationSubType.WelcomeNewUser&&(h=this.constants.telemetry.notification.type.welcomeNewUser,c=i.NotificationType.teamsEngagementActivity,p=this.constants.icons.notification.inferred,e.usrObj&&e.usrObj.givenName&&(s=e.usrObj.givenName),s=this.$translate.instant(this.resources.strings.actor_reason_string_for_welcome_user,{actor:s}));break;case SkypeX.Services.NotificationType.TeamsTasks:switch(c=i.NotificationType.TeamsTasks,r=e.originalNotification.isChat?this.parseGroupNameFromNotification(e):w,p=this.constants.icons.notification.teamsTasks,e.usrObj&&e.usrObj.givenName&&(s=e.usrObj.givenName),e.notificationSubType){case SkypeX.Services.NotificationSubType.TaskAssignedToYou:s=this.$translate.instant(this.resources.strings.teams_tasks_task_assigned,{actor:s});break;case SkypeX.Services.NotificationSubType.UrgentTaskAssignedToYou:s=this.$translate.instant(this.resources.strings.teams_tasks_urgent_task_assigned,{actor:s});break;case SkypeX.Services.NotificationSubType.YourTaskWasUpdated:s=this.$translate.instant(this.resources.strings.teams_tasks_task_updated,{actor:s});break;case SkypeX.Services.NotificationSubType.YourTaskChangedToNotStarted:s=this.$translate.instant(this.resources.strings.teams_tasks_task_not_started,{actor:s});break;case SkypeX.Services.NotificationSubType.YourTaskChangedToInProgress:s=this.$translate.instant(this.resources.strings.teams_tasks_task_in_progress,{actor:s});break;case SkypeX.Services.NotificationSubType.YourTaskChangedToCompleted:s=this.$translate.instant(this.resources.strings.teams_tasks_task_completed,{actor:s});break;case SkypeX.Services.NotificationSubType.YourTaskChangedToBlocked:s=this.$translate.instant(this.resources.strings.teams_tasks_task_blocked,{actor:s});break;case SkypeX.Services.NotificationSubType.YourTaskChangedToRemoved:s=this.$translate.instant(this.resources.strings.teams_tasks_task_removed,{actor:s});break;case SkypeX.Services.NotificationSubType.YourTaskChangedToNotApplicable:s=this.$translate.instant(this.resources.strings.teams_tasks_task_not_applicable,{actor:s});break;case SkypeX.Services.NotificationSubType.YourTaskWasReassigned:s=this.$translate.instant(this.resources.strings.teams_tasks_task_reassigned,{actor:s});break;case SkypeX.Services.NotificationSubType.YourTaskWasDeleted:s=this.$translate.instant(this.resources.strings.teams_tasks_task_deleted,{actor:s});break;case SkypeX.Services.NotificationSubType.TaskListPublishedToYourTeam:s=this.$translate.instant(this.resources.strings.teams_tasks_tasklist_published,{actor:s});break;case SkypeX.Services.NotificationSubType.TaskListRecalledFromYourTeam:s=this.$translate.instant(this.resources.strings.teams_tasks_tasklist_recalled,{actor:s});break;case SkypeX.Services.NotificationSubType.YourTaskWasMarkedUrgent:s=this.$translate.instant(this.resources.strings.teams_tasks_task_made_urgent,{actor:s});break;case SkypeX.Services.NotificationSubType.YourTaskWasMarkedNotUrgent:s=this.$translate.instant(this.resources.strings.teams_tasks_task_made_not_urgent,{actor:s});break;case SkypeX.Services.NotificationSubType.UrgentTaskPublishedToYourTeam:s=this.$translate.instant(this.resources.strings.teams_tasks_tasklist_published,{actor:s})}break;case SkypeX.Services.NotificationType.MsGraph:c=i.NotificationType.msGraph,s=e.title,r=e.message,p=T===SkypeX.Services.NotificationSubType.TeamMention?this.constants.icons.notification.teams:T===SkypeX.Services.NotificationSubType.ChannelMention?this.constants.icons.notification.channel:T===SkypeX.Services.NotificationSubType.UserMention?this.constants.icons.notification.mention:this.constants.icons.notification.thirdparty,h=this.constants.telemetry.notification.type.msGraph;break;default:p=this.constants.icons.notification.default,this.logger.warn("unknown notification action type of "+S)}if(r&&0!==r.trim().length||(s=e.title),e.isMsGraphAppContextNotificationAssociatedWithTeamsApp&&e.teamsAppIconUrl){this.logger.info("isMsGraphAppContextNotificationAssociatedWithTeamsApp "+e.isMsGraphAppContextNotificationAssociatedWithTeamsApp),this.logger.info("teamsAppIconUrl "+e.teamsAppIconUrl);var M,X=window.stopBackgroundThrottling(function(t){t&&a.logger.info("[Notification data] disable background throttling"),M=a.loggingService.newScenario(a.constants.scenarios.toast.getBase64TeamsIcon)});($=this.getBase64Image(e.teamsAppIconUrl,"png")).then(function(t){l=t,a.actionNotificationData=a.createActionsNotificationData(c,s,u,r,l,p,y,f,d,v,N,h,_,m,e,n,o,b,A,S,T),a.createNotificationWithActions(a.actionNotificationData),X(function(t,i){t&&a.logger.info("[Notification data] try enable background throttling"),M.stop({isLockReleased:i})})}).catch(function(t){X(function(i,e){i&&a.logger.info("[Notification data][catch] try enable background throttling"),M.fail({error:t,isLockReleased:e})})})}else if(g&&g.userPrincipalName&&g.displayName&&S!==SkypeX.Services.NotificationType.Priority&&S!==SkypeX.Services.NotificationType.DLP){var U,$=void 0,R=window.stopBackgroundThrottling(function(t){t&&a.logger.info("[User/initial picture] disable background throttling"),U=a.loggingService.newScenario(a.constants.scenarios.toast.getUserInitialPicture)});if(g.isAnonymousUser||this.peopleService.isUnknownUser(g))$=this.peopleService.getUserInitialsPicture(g.displayName,this.constants.profilePictureSizes.small);else{var H=void 0;C&&(H={tenantId:C.id,oid:C.currentUserIdInSecondaryTenant}),$=this.peopleService.getUserProfilePicture({userId:g.userPrincipalName,displayName:g.displayName},"notifications",null,!0,!0,!0,H)}$.then(function(t){t&&(l=t),a.actionNotificationData=a.createActionsNotificationData(c,s,u,r,l,p,y,f,d,v,N,h,_,m,e,n,o,b,A,S,T),a.createNotificationWithActions(a.actionNotificationData),R(function(t,i){t&&a.logger.info("[User/initial picture] try enable background throttling"),U.stop({isLockReleased:i})})}).catch(function(t){R(function(i,e){i&&a.logger.info("[User/initial picture][catch] try enable background throttling"),U.fail({error:t,isLockReleased:e})})})}else this.actionNotificationData=this.createActionsNotificationData(c,s,u,r,l,p,y,f,d,v,N,h,_,m,e,n,o,b,A,S,T),this.createNotificationWithActions(this.actionNotificationData)},n.prototype.getBase64Image=function(t,i){return __awaiter(this,void 0,void 0,function(){var e;return __generator(this,function(n){switch(n.label){case 0:return e=void 0,[4,this.getAMSHeaders().then(function(i){var e={method:"GET",url:t,headers:i,responseType:"arraybuffer",params:{withCredentials:!0}};return this.$http(e)}.bind(this)).then(function(t){var n=this.base64FromArrayBuffer(t.data);e="data:"+("image/"+i)+";base64,"+n}.bind(this)).catch(function(t){this.logger.warn("NotificationsService.Desktop: Error retrieving image for priority notifications. Error Code: "+t.status)}.bind(this))];case 1:return n.sent(),[2,e]}})})},n.prototype.base64FromArrayBuffer=function(t){var i="";return new Uint8Array(t).forEach(function(t){i+=String.fromCharCode(t)}),btoa(i)},n.prototype.getAMSHeaders=function(){var t=this,i=this.$q.defer();return this.authenticationService.getSkypeTokens().then(function(e){var n={};n[t.constants.headers.tokens.authorization]=t.constants.files.strings.skypeToken+e.skypeToken,n[t.constants.headers.accept]="*/*",n[t.constants.headers.contentType]=t.constants.headers.multipart,i.resolve(n)},function(t){i.reject()}),i.promise},n.prototype.createActionsNotificationData=function(e,n,o,a,s,c,r,l,p,f,h,d,y,u,g,S,v,m,T,k,N){var b=this,A={title:n,subtitle:o,type:e,message:a,image:s,icon:c,windowActionIconProperty:r,timeout:l,linkState:y,appId:g&&g.teamsAppId,skipIfSfBRunning:m,loggedInUserSip:T,notificationDataMTMA:g&&g.notificationDataMTMA,notificationStyle:void 0,primaryAction:{action:function(){if(h&&(b.eventingService.$emit(b.constants.events.pushEvents.activityHub.toastClicked,h),b.startActivitySwitch(k,b.messagingTelemetryService)),S){var i={launchMethod:t.components.LaunchMethod.toast};b.analyticsStateService.setLaunchMethodState(i),S(y,u)}else b.settingsService.valueAsBoolean(b.constants.settings.names.enableThirdPartyNotificationReplyMention)?b.navigationNotificationService.navigateWithNotificationData(g,b.$rootScope):b.gotoState(y,u)}},dismissAction:{action:function(){v&&v(),b.actionNotificationData=null}},timeoutAction:null,errorAction:null,actions:[{action:function(){if(S){var i={launchMethod:t.components.LaunchMethod.toast};b.analyticsStateService.setLaunchMethodState(i),S(y,u)}b.actionNotificationData=null}}],trackingType:d,sourceId:p,sourceThreadId:f,skypexType:k,skypexSubType:N};return e===i.NotificationType.priority&&u&&u.messageId&&(A.messageIdForPriorityMessage=u.messageId),u&&u.messageId?A.messageId=u.messageId:g&&g.sourceMessageId&&(A.messageId=g.sourceMessageId),this.desktopUtilityService.isDesktop()&&this.platformDetectService.getOS()===this.constants.os.windows&&"10"===this.platformDetectService.getOSVersion()&&(A.notificationStyle=this.notificationsAuxiliaryService.getNotificationStyle()),A},n.prototype.onNotificationClicked=function(t,i,e,n){if(i&&this.eventingService.$emit(this.constants.events.pushEvents.activityHub.toastClicked,i),this.notificationHandlers[t]){var o=this.notificationHandlers[t];delete this.notificationHandlers[t],o.click&&o.click(e,n)}else this.gotoState(e,n);this.actionNotificationData=null},n.prototype.gotoState=function(t,i){var e=angular.extend(i,{lm:this.constants.telemetry.analytics.launchMethod.toast});this.$state.go(t,e)},n.prototype.onNotificationShown=function(t){var i=this.notificationHandlers[t];if(i){i.data&&i.data.onNotificationShown&&i.data.onNotificationShown();var e=!1;switch(i.data.skypexType){case SkypeX.Services.NotificationType.Download:case SkypeX.Services.NotificationType.Call:case SkypeX.Services.NotificationType.CallOrMeetup:e=!0}this.announceNotification(i.data.skypexType,i.data,e)}},n.prototype.onNotificationUpdated=function(t){var i=this.notificationHandlers[t];i&&i.data&&i.data.onNotificationUpdated&&i.data.onNotificationUpdated()},n.prototype.onNotificationTimeout=function(t){delete this.notificationHandlers[t],this.actionNotificationData=null},n.prototype.cancelNotification=function(t){return this.notificationHandlers||this.cancellationHandlers||this.actionNotificationData?(this.notificationHandlers[t]&&delete this.notificationHandlers[t],this.cancellationHandlers[t]?(this.logger.info("Cancelled notification toast with ID: "+t+" and sent event to desktop"),this.safeIpc.send(this.constants.events.desktopApp.notificationActionCancel,t),!0):(this.logger.warn("cancelNotification: Cannot cancel notification. Handler doesn't exist for notification with ID: "+t),this.actionNotificationData=null,!1)):(this.logger.info("cancelNotification: There are no handlers. Notification with ID: "+t+" should have been already removed"),!1)},n.prototype.onNotificationActionTaken=function(t,i,e,n,o){if(void 0===e&&(e=""),void 0===n&&(n=""),void 0===o&&(o=!1),this.logger.info("action taken for notification "+t),this.notificationHandlers[t]){var a=this.notificationHandlers[t];if(delete this.notificationHandlers[t],i&&a.data){var s=(new Date).getTime()-a.time,c=this.getNotificationActionData(a.data,i);if(c&&c.notificationAction){c.notificationAction.action();var r={};r[this.constants.telemetry.notification.property.id]=t,r[this.constants.telemetry.notification.property.type]=a.data.trackingType,r[this.constants.telemetry.notification.property.timeElapsed]=s,r[this.constants.telemetry.notification.property.target]=c.target,this.loggingService.event(this.constants.telemetry.notification.actionTaken,r)}else this.logger.warn("cannot take notification action. Target action doesn't exist for "+t)}else this.logger.warn("cannot take notification action. Action doesn't exist for "+t)}else if(this.logger.warn("onNotificationActionTaken: cannot take notification action. Handler doesn't exist for "+t),o&&(n||e)){var l=this.$injector.get("messageNotificationService");l?l.navigateToConvByConvId(n,e):this.logger.warn("messageNotificationService is null")}this.cancellationHandlers[t]&&delete this.cancellationHandlers[t],this.actionNotificationData=null},n.prototype.onNotificationActionCancelled=function(t,i){if(this.logger.info("Cancelling notification with ID: "+t),this.cancellationHandlers[t]){var e=this.cancellationHandlers[t];if(delete this.cancellationHandlers[t],e.cancelable){var n=(new Date).getTime()-e.time;e.cancelable.complete(i);var o={};o[this.constants.telemetry.notification.property.id]=t,o[this.constants.telemetry.notification.property.type]=e.trackingType,o[this.constants.telemetry.notification.property.timeElapsed]=n,o[this.constants.telemetry.notification.property.status]=i?this.constants.telemetry.notification.property.status_completed:this.constants.telemetry.notification.property.status_failed,this.loggingService.event(this.constants.telemetry.notification.cancel,o)}}else this.logger.warn("onNotificationActionCancelled: Cannot cancel notification. Handler doesn't exist for notification with ID: "+t);this.actionNotificationData=null},n.prototype.onNotificationActionNotShown=function(t){if(this.logger.info("not shown notification "+t),this.notificationHandlers[t]){var i=this.notificationHandlers[t];if(delete this.notificationHandlers[t],i.data){var e=(new Date).getTime()-i.time,n={};n[this.constants.telemetry.notification.property.id]=t,n[this.constants.telemetry.notification.property.type]=i.data.trackingType,n[this.constants.telemetry.notification.property.timeElapsed]=e,this.loggingService.event(this.constants.telemetry.notification.notShown,n)}}this.cancellationHandlers[t]&&delete this.cancellationHandlers[t],this.actionNotificationData=null},n.prototype.onSfBNotificationActionNotShown=function(t){var i=this.notificationHandlers[t];if(this.logger.info("sfb notification not shown "+t),i.data){var e=(new Date).getTime()-i.time,n={};n[this.constants.telemetry.notification.property.id]=t,n[this.constants.telemetry.notification.property.type]=i.data.trackingType,n[this.constants.telemetry.notification.property.timeElapsed]=e,this.loggingService.event(this.constants.telemetry.notification.notShown,n)}},n.prototype.populateRingtoneName=function(t){_.isUndefined(t.ringtoneCallType)&&_.isNull(t.ringtoneCallType)||(t.ringtoneCallType===i.RingtoneCallType.CallGroup&&(this.logger.info("populating ringtone file name for call groups {0}",this.ringtoneNameCallGroup),t.ringtoneFile=this.ringtoneNameCallGroup),t.ringtoneCallType===i.RingtoneCallType.CallQueue&&(this.logger.info("populating ringtone file name for call queue, {0}",this.ringtoneNameCallQueue),t.ringtoneFile=this.ringtoneNameCallQueue),t.ringtoneCallType===i.RingtoneCallType.Delegate&&(this.logger.info("populating ringtone file name for Delegate ,{0}",this.ringtoneNameCallDelegate),t.ringtoneFile=this.ringtoneNameCallDelegate),t.ringtoneCallType===i.RingtoneCallType.Regular&&(this.logger.info("populating ringtone file name for Regular, {0}",this.ringtoneNameCallRegular),t.ringtoneFile=this.ringtoneNameCallRegular),t.ringtoneCallType===i.RingtoneCallType.MeetingStartedReminder&&(this.logger.info("populating ringtone file name for meetingstartedReminder, {0}",this.ringtoneNameCallMeetingReminder),t.ringtoneFile=this.ringtoneNameCallMeetingReminder))},n.prototype.populateNotificationData=function(t){if(t.primaryAction&&(t.primaryAction.id=this.utilityService.generateUUID()),t.dismissAction&&(t.dismissAction.id=this.utilityService.generateUUID()),t.timeout&&t.timeout>0&&!t.timeoutAction&&(t.timeoutAction={action:function(){}}),t.timeoutAction&&(t.timeoutAction.id=this.utilityService.generateUUID()),t.actions)for(var i=0;i<t.actions.length;i++)t.actions[i].id=this.utilityService.generateUUID()},n.prototype.getNotificationActionData=function(t,i){var e={target:"",notificationAction:null};if(t.primaryAction.id===i)e.target=this.constants.telemetry.notification.target.primary,e.notificationAction=t.primaryAction;else if(t.dismissAction&&t.dismissAction.id===i)e.target=this.constants.telemetry.notification.target.dismiss,e.notificationAction=t.dismissAction;else if(t.timeoutAction&&t.timeoutAction.id===i)e.target=this.constants.telemetry.notification.target.timeout,e.notificationAction=t.timeoutAction;else if(t.actions)for(var n=0;n<t.actions.length;n++)if(t.actions[n].id===i){e.target=n+1+"",e.notificationAction=t.actions[n];break}return e},n.prototype.removeOrphanHandlers=function(){var t=(new Date).getTime();for(var i in this.notificationHandlers)this.notificationHandlers.hasOwnProperty(i)&&t>(e=this.notificationHandlers[i]).time+72e5&&(delete this.notificationHandlers[i],this.logger.info("removed orphaned handler for "+i));for(var i in this.cancellationHandlers)if(this.cancellationHandlers.hasOwnProperty(i)){var e=this.cancellationHandlers[i];t>e.time+72e5&&(delete this.cancellationHandlers[i],this.safeIpc.send(this.constants.events.desktopApp.notificationActionCancel,i),this.logger.info("Removed orphaned cancellation handler and Cancelled notification toast with ID: "+i))}this.actionNotificationData=null},n.prototype.updateTaskbarBadge=function(t){this.settingsService.valueAsBoolean(this.constants.settings.names.enableOptimizedBadgeCount)?(this.logger.info("previous badge count is "+this.lastBadgeCountSent+" and new badge count is "+t),t!==this.lastBadgeCountSent&&(this.safeIpc.send(this.constants.events.desktopApp.updateTaskbarBadgeCount,t),this.lastBadgeCountSent=t)):this.safeIpc.send(this.constants.events.desktopApp.updateTaskbarBadgeCount,t)},n.prototype.getTotalBadgeCount=function(){var t=0;for(var i in this.badgeCounts){var e=this.badgeCounts[i];e&&angular.isNumber(e)&&(t+=this.badgeCounts[i])}return!this.chatsEnabled&&this.badgeCounts.chat&&(t-=this.badgeCounts.chat),t},n}(i.NotificationsService);i.NotificationsServiceDesktopImplementation=e,angular.module("teamspace.notificationsService",["teamspace.ariaLiveService","teamspace.notificationsAuxiliaryService","teamspace.notificationSettingsStore","teamspace.navigationNotificationService","teamspace.routeUtilityService","teamspace.audioService","teamspace.messagingTelemetryService"]).service("notificationsService",e),angular.module("teamspace.notificationsServiceDesktop",["teamspace.ariaLiveService","teamspace.notificationsAuxiliaryService","teamspace.notificationSettingsStore","teamspace.routeUtilityService","teamspace.ringtoneSettingService","teamspace.audioService","teamspace.messagingTelemetryService","teamspace.deviceManagerService"]).service("notificationsService",e)}(t.services||(t.services={}))}(teamspace||(teamspace={}))
//# sourceMappingURL=https://statics.teams.cdn.office.net/hashedjs/4-app.desktop.min.js-91ca185a.map